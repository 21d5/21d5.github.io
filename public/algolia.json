[
    {
        "title": "About me",
        "uri": "page/about",
        "content": "Nothing world place Persistence  Talent will not  nothing common unsuccessful men talent  Genius will not  unrewarded genius almost proverb  Education will not  world full educated derelicts  Persistence Determination alone omnipotent  slogan  Press On  solved will always solve problems human race",
        "objectID": "page/about",
        "subtitle": "Why you'd want to go on a date with me",
        "comments": false,
        "unrelated": true,
        "nopager": true,
        "noreadmore": true
    },
    {
        "title": "Archive",
        "uri": "page/archive",
        "content": "kubernetes devops python golang         Kubernetes Docker     10      Kubernetes    Grafana Loki         GitLab CI   Argo CD    GitOps       Elastic       K8S      4 4     Elastic       K8S      3 4     Elastic       K8S      2 4     Elastic       K8S      1 4  Prometheus      Kubernetes       Sealed Secrets    Kubernetes Secrets Kubernetes   PV   PVC         Kubernetes     Kubernetes   Windows     WSL2    Kubernetes       Loki              Tekton    CI CD     3 4  GitOps     Kubernetes     DevOps     Jenkins          CoreDNS                JSON              PyCharm Okteto   Kubernetes                Kubernetes          Tekton    CI CD     2 2     Tekton    CI CD     1 2          Dockerfile        Kubernetes     EFK                 Kubernetes      cdk8s   Kubernetes       NodeLocal DNSCache Kubernetes HPA      Envoy        ingress nginx           Kubernetes        Grafana Dashboard AlertManager          Grafana K8S      DevOpsProdigy KubeGraf   Kubernetes       Kafka Kubernetes       Descheduler       Kubernetes Dashboard   Kubevious           IP   Kubernetes     Vault   Kubernetes     Spinnaker Kubernetes           Kubernetes       VSCode     Traefik2     Traefik2 X      URL Rewrite         Kubernetes          Traefik2 1     Prometheus         Prometheus      Kubernetes Deployment             ingress nginx   Rewrite        OAM    Kubernetes      Kubernetes     Container Capabilities Gloo 1 0          Rook      Ceph    k8s         6      Golang     Kubernetes Ingress Controller Traefik 2 0        Traefik 2 0       HTTPS    Traefik 2 0    Redis               Kubernetes       inlets   kubernetes        Traefik 2 0       Helm V2     V3    Kubernetes Pod      PSP    Kubernetes       Argo Traefik          Service Mesh    Maesh VMWare     Kubernetes Dashboard    Octant    kubeadm    v1 15 3    Kubernetes       GitHub Actions       Golang       Kustomize    Kubernetes        Kubernetes       KubeSphere    Drone   CI CD       Drone   CI CD       Drone   CI CD       kubectl         Elasticsearch Operator    Elasticsearch      GitHub OAuth   Dex    Kubernetes       Configuration As Code    Jenkins      Kubernetes Admission Webhook Kubernetes Operator        Metrics Server       kubeadm    kubernetes    Kubelet        Groovy         Jenkins Gitlab Harbor Helm   Kubernetes   CI CD    Helm Chart        Kubernetes                      Kubernetes    nginx ingress          Jenkins Gitlab Harbor Helm   Kubernetes   CI CD         Prometheus  Gitlab CI   Kubernetes       Kubernetes     Gitlab CI Runner   Kubernetes     Gitlab Harbor        Harbor      Kubernetes        Helm monitor         Istio          Kubernetes CKA              kubernetes        Prometheus        kubernetes      Prometheus Operator      Prometheus Operator       Prometheus Operator    etcd    Grafana        Loki Prometheus Operator     Docker        Dive      Kubernetes API      Kubernetes Ingress     HTTPS 360    K8S Dashboard Wayne       Grafana   Kubernetes      Kubernetes      Kubernetes           kubernetes       Kubernetes       Helm Hooks     Helm         Dockerfile      Kubernetes      Qos Helm          CloudNativeLives K8S              ingress        Kubernetes  ipvs      kubernetes               ingress              DNS    Jenkins   CI CD       Jenkins   CI CD       Jenkins   CI CD    Pod            kubernetes          kubernetes          Kubernetes RBAC    Secret       Service       Job   CronJob       RC RS            Kubernetes Pod       kubeadm  kubernetes1 10   k8s         3   Skaffold       kubernetes      k8s         2   kubernetes          k8s         1      Kubernetes        Kubernetes Downward API           kubernetes   ConfigMap   Secrets            Kubernetes   golang    Docker          YAML      Kubernetes Deployment Kubernetes Helm     kubernetes PodPreset      kubernetes dashboard           Prometheus  AlertManager   Kubernetes    Prometheus2 0 kubernetes        kubernetes    socket io        kubernetes      docker     Harbor kubernetes dashboard              kubernetes    Kubernetes Deployment     Kubernetes  Prometheus       Golang   Golang     Cobra    CLI    Go Modules      Python      Python      Django            DateTimeField    Mac     cryptography    TDD      Python         TDD      Python         Python           django2 0 10      Django  STATICROOT  STATICFILESDIRS    django      django url         django admin   action django      inclusion_tag       Python      PDF       Python        python  csv                  Jenkins   DevOps               Kubernetes          Kubernetes   3           AI                  11              K8S        Django2 0      webpack3                          GitHub CLI              JetBrains        License              OSS     Keynote             Hugo Pipes          Hugo       Adsense           Hugo    Gitment      Hugo    Algolia        git log      HTTPS  awk      Nginx     301",
        "objectID": "page/archive",
        "comments": false,
        "unrelated": true,
        "nopager": true,
        "noreadmore": true
    },
    {
        "title": "友情链接",
        "uri": "page/friend",
        "content": "JACK LEE        Roc RECALL s Blog devopser sealyun wujunze              abcdocker           anonym0x1",
        "objectID": "page/friend",
        "comments": false,
        "unrelated": true,
        "nopager": true,
        "noreadmore": true
    },
    {
        "title": "Kubernetes",
        "uri": "page/kubernetes.io",
        "content": "Kubernetes                                                          Kubernetes     Google 15                              Kubernetes   1           Google                   Kubernetes                                                    Kubernetes                                            Kubernetes                                                     Kubernetes   2                                                                                                                                                                  UI      CPU                                                      Kubernetes           IP            DNS",
        "objectID": "page/kubernetes.io",
        "subtitle": "生产级别的容器编排系统",
        "comments": false,
        "unrelated": true,
        "nopager": true
    },
    {
        "title": "Kubernetes中文社区",
        "uri": "page/kubernetes.org.cn",
        "content": "Kubernetes     www kubernetes org cn     K8S              K8S              K8S",
        "objectID": "page/kubernetes.org.cn",
        "subtitle": "分享最新K8S资讯、教程、实践和中文文档",
        "comments": false,
        "unrelated": true,
        "nopager": true
    },
    {
        "title": "AlertManager 何时报警",
        "uri": "post/AlertManager何时报警",
        "content": "Prometheus            AlertManager                                                     AlertManager                  Prometheus           scrapeinterval   evaluationinterval     scrapeinterval        Prometheus     metrics               evaluationinterval        Prometheus                                      inactive pending    firing                      AlertManager                           AlertManager      group_by                                                                                                                                              group_by    alertname    job                        group_wait                      Prometheus     AlertManager                          group_by    alertname    job   group_wait  45s        0s                                                                                   groupinterval                       group         groupinterval                          receiver  group_by    instance    job   group_wait  45s group_interval  10m        5              repeat_interval                                                                                                           Prometheus    AlertManager                                          groups  name  test node mem rules  alert  NodeMemoryUsage expr   nodememoryMemTotalbytes    nodememoryMemFreebytes   nodememoryBuffersbytes   nodememoryCachedbytes     nodememoryMemTotal_bytes   100   90 for  1m labels  team  node annotations  summary      labels instance    High Memory usage detected  description      labels instance    Memory usage above 90   current value is      value                 test node mem                           alert         expr           PromQL      for        Pending Duration                                        pending labels                               annotations                                                                                                                      pending                                     Pending Duration                                                                                                         1    Pending Duration                                                      Pending Duration                      Alertmanager",
        "objectID": "post/AlertManager何时报警",
        "date": "2020-03-26T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus",
            "alertmanager"
        ],
        "keywords": [
            "kubernetes",
            "prometheus",
            "alertmanager",
            "报警"
        ],
        "slug": "alertmanager-when-alert",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200326124211.png",
                "desc": "alertmanager"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 工作流引擎：Argo（1）",
        "uri": "post/Argo Kubernetes 工作流引擎",
        "content": "Argo   Applatix             Kubernetes    container native                       Argo                YAML       DSL          Pipeline                                                         Argo                                                                      UI               Argo    Argo V2      Kubernetes CRD Custom Resource Definition                 kubectl       Argo              Kubernetes              Volumes Secrets RBAC         Argo                                         Fixture              Argo               ADSL Argo            YAML       Kubernetes          DSL                   ADSL                                 Argo   6     YAML                                                                                                  Fixture       Argo                   Argo             Argo              Kubernetes      Ksonnect Helm Chart       YAML JSON               Argo               Kubernetes    1 9     kubectl           kubeconfig           kube config   Mac       brew install argoproj tap argo Linux       curl  sSL  o  usr local bin argo https   github com argoproj argo releases download v2 2 1 argo linux amd64 chmod  x  usr local bin argo                           argo version argo  v2 3 0 BuildDate  2019 05 20T22 11 23Z GitCommit  88fcc70dcf6e60697e6716edc7464a403c49b27e GitTreeState  clean GitTag  v2 3 0 GoVersion  go1 11 5 Compiler  gc Platform  darwin amd64          UI       kubectl create ns argo   kubectl apply  n argo  f https   raw githubusercontent com argoproj argo v2 3 0 manifests install yaml                  argo ui    NodePort     Service         Ingress                kubectl pods  n argo NAME READY STATUS RESTARTS AGE argo ui 76c6cf75b4 vh6w6 0 1 ContainerCreating 0 14s workflow controller 69f6ff7cbc 5pqbj 0 1 ContainerCreating 0 14s   kubectl pods  n argo NAME READY STATUS RESTARTS AGE argo ui 76c6cf75b4 vh6w6 1 1 Running 0 10m workflow controller 69f6ff7cbc 5pqbj 1 1 Running 0 10m   kubectl svc  n argo NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE argo ui ClusterIP 10 97 124 167 80 TCP 10m   kubectl edit svc argo ui  n argo kind  Service metadata         spec         sessionAffinity  None type  NodePort        service argo ui edited   kubectl svc  n argo NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE argo ui NodePort 10 97 124 167 80 32686 TCP 12m   kubectl crd  grep argo workflows argoproj io 2019 09 10T03 27 41Z   kubectl api versions  grep argo argoproj io v1alpha1            32686       argo ui           Argo                    Argo                                           Pod          curl               nginx sidecar       curl                 nginx sidecar                                argo base template yaml            argo               argo submit argo base template yaml Name  sidecar nginx ftcpf Namespace  default ServiceAccount  default Status  Pending Created  Tue Sep 10 12 05 53  0800  now    argo list NAME STATUS AGE DURATION PRIORITY sidecar nginx ftcpf Running 15m 15m 0                 kubectl          Argo CLI              YAML                                     Pod     Workflow               argo logs             argo ui                               Argo                 Argo     Coinflip                when                    Coinflip          wget https   raw githubusercontent com argoproj argo master examples coinflip yaml     Worflow                 0 heads 1 tails        heads    tails     flip coin           Workflow      flip coin      heads       heads                argo submit    Coinflip    Workflow    argo submit coinflip yaml Name  coinflip pr9x9 Namespace  default ServiceAccount  default Status  Pending Created  Tue Sep 10 15 56 04  0800  now    argo coinflip pr9x9 Name  coinflip pr9x9 Namespace  default ServiceAccount  default Status  Failed Message  child  coinflip pr9x9 3371049263  failed Created  Tue Sep 10 15 56 04  0800  4 minutes ago  Started  Tue Sep 10 15 56 04  0800  4 minutes ago  Finished  Tue Sep 10 15 59 40  0800  51 seconds ago  Duration  3 minutes 36 seconds STEP PODNAME DURATION MESSAGE   coinflip pr9x9 child  coinflip pr9x9 3371049263  failed       flip coin coinflip pr9x9 3371049263 3m failed save outputs  verify serviceaccount default default necessary privileges                 Argo              default default     admin   clusterrole       kubectl create rolebinding default admin   clusterrole admin   serviceaccount default default         Workflow         argo delete coinflip pr9x9   argo submit coinflip yaml Name  coinflip jxmzx Namespace  default ServiceAccount  default Status  Pending Created  Tue Sep 10 16 30 59  0800  now      Workflow                  randomint python                        tails         tails      randomint       result  tails           kubectl pods NAME READY STATUS RESTARTS AGE coinflip jxmzx 1126897109 0 2 Completed 0 3m28s coinflip jxmzx 3981997132 0 2 Completed 0 3m36s   kubectl logs coinflip jxmzx 3981997132 main tails   kubectl logs coinflip jxmzx 1126897109 main tails                                        flip coin      n         heads       flip coin           wget https   raw githubusercontent com ",
        "objectID": "post/Argo Kubernetes 工作流引擎",
        "date": "2019-09-10T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "workflow",
            "Argo"
        ],
        "slug": "argo-workflow-engine-for-k8s",
        "keywords": [
            "kubernetes",
            "workflow",
            "Argo",
            "工作流",
            "依赖",
            "模板"
        ],
        "gitcomment": true,
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes CKA 实训免费视频课程",
        "uri": "post/CKA 实训视频课程",
        "content": "CKA  Certificted Kubernetes Administrator                    kubernetes                          kubernetes                     CNCF                                               1 CNCF             9   1 Kubernetes               13   12 CNCF              KCSP kubernetes Certified Service Provider                 kubernetes    kubernetes    kubernetes     kubernetes                kubernetes             kubernetes                                                    Cloud Native Lives kubernetes          kubernetes         K8S                     kubernetes           Kuberntes                  Kubernetes                     CKA  Certificted Kubernetes Administrator                     kubernetes                          kubernetes              CKA  Certificted Kubernetes Administrator    Linux      CNCF                       https   www cncf io certification cka       https   bbs huaweicloud com forum thread 11064 1 1 html                          k8s                CKA",
        "objectID": "post/CKA 实训视频课程",
        "date": "2019-01-15T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "CKA",
            "课程"
        ],
        "keywords": [
            "kubernetes",
            "CloudNative",
            "课程",
            "华为",
            "CKA"
        ],
        "slug": "k8s-cka-course",
        "gitcomment": true,
        "category": "kubernetes"
    },
    {
        "title": "Django2.0 实战项目",
        "uri": "post/Django2.0 实战项目课程",
        "content": "Django2 0      WEB                 Django             Django2 0 1 x                        Django                       Django             https   www haimaxy com course m12jop",
        "objectID": "post/Django2.0 实战项目课程",
        "subtitle": "基于 Django2.0 快速实现一个产品分享的 WEB 应用",
        "date": "2018-04-16T00:00:00.000Z",
        "tags": [
            "django",
            "实战"
        ],
        "keywords": [
            "django",
            "django2",
            "实战",
            "实战项目"
        ],
        "slug": "django20-practice-project-course",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "http://sdn.haimaxy.com/covers/2018/4/16/9fc3e6cb83af4715b09f52adcc598ea8.jpg",
                "desc": "django2.0"
            }
        ],
        "category": "django"
    },
    {
        "title": "django下url函数的用法",
        "uri": "post/django下url函数的用法 ",
        "content": "Django           url  django conf urls defaults           10                Django        Templates         urlpatterns                     Templates                        urlpatterns                                           url            urlpatterns             Templates                  url      urlpatterns             urlpatterns   patterns      r  article    news_index       Templates  html                 10                Templates    10      a                     urlpatterns   patterns      r  news    news_index              Templates    10    html                                             a                url          urlpatterns             urlpatterns   patterns     url r  article    newsindex   name  newsindex      Templates  html          urlpatterns    Template              url           urlpatterns         name    url r  article    newsindex   name  newsindex    Templates                     name        urlpatterns         name                          Templates        views              url                 HttpResponseRedirect   article     urlpatterns             views                url       HttpResponseRedirect reverse  news_index       Template              urlpatterns                r    P d 4     P d 1 2       news_list                      http   xxxx com 2014 06         urlpatterns          url r    P d 4     P d 1 2       newslist  name  newsarchive     Templates              url         templates            2014 06     2014  06                                2014 06                        views                 reverse  news_archive  kwargs   year  2014  month  06                 2014 06",
        "objectID": "post/django下url函数的用法 ",
        "date": "2014-06-13T00:00:00.000Z",
        "publishdate": "2014-06-13T00:00:00.000Z",
        "slug": "django-url-function-usage",
        "tags": [
            "django",
            "url"
        ],
        "category": "django",
        "gitcomment": true
    },
    {
        "title": "django国际化问题",
        "uri": "post/django国际化问题",
        "content": "django         django1 6 5                                                django1 6             1   settings py   LANGUAGE_CODE    en us  TIME_ZONE    UTC  USE_I18N   True USE_L10N   True USE_TZ   True LANGUAGES       cn              en    English      LOCALE_PATHS     os path join BASEDIR   locale          LOCALEPATHS   MIDDLEWARE_CLASSES      django contrib sessions middleware SessionMiddleware      django middleware locale LocaleMiddleware     django middleware common CommonMiddleware    django middleware csrf CsrfViewMiddleware    django contrib auth middleware AuthenticationMiddleware    django contrib messages middleware MessageMiddleware    django middleware clickjacking XFrameOptionsMiddleware     TEMPLATECONTEXTPROCESSORS      django contrib auth context_processors auth      django core context_processors i18n     django core context_processors request    django core context_processors static     2           django admin py makemessages  l en   django admin py makemessages  l cn                       locale       cn en          LC_MESSAGES           django po           msgid  Chinese  msgstr            msgid               msgstr                                            po         mo   django admin py compilemessages 3                        load i18n                trans           trans  About          trans  Jobs          trans  Login     4                                        csrf_token       lang LANGUAGES       lang 1       endfor    function selectdo obj    str     i18n setlang    myform   document getElementById  langform    myform method    POST   myform action   str  myform submit             url      i18n setlang         django views i18n set_language",
        "objectID": "post/django国际化问题",
        "date": "2014-05-28T00:00:00.000Z",
        "publishdate": "2014-05-28T00:00:00.000Z",
        "tags": [
            "django",
            "国际化"
        ],
        "slug": "django-i18n",
        "category": "django",
        "gitcomment": true
    },
    {
        "title": "Django 中STATIC_ROOT 与STATICFILES_DIRS的区别",
        "uri": "post/django的STATIC_ROOT与STATICFILES_DIRS的区别",
        "content": "Django                                                                         settings py      STATICROOT STATICFILESDIRS                         STATICROOT   STATICFILESDIRS                       STATIC_ROOT STATICROOT Django 1 3                            STATICROOT       STATICURL       static           URL   STATICROOT       Django App      Django App            App                                       Django            1 3                          django views static serve       App urls py          url r     static P        django views static serve     document_root      path to project app static                      Django                         Django                Nginx   CDN            App                         nginx   static                                App                        1 3                                                            nginx  static    STATICROOT          python manage py collectstatic         App            STATICROOT                           STATIC_ROOT                 STATICFILES_DIRS        STATICFILESDIRS                                       collectstatic                  STATICROOT         STATICFILESDIRS       STATICROOT                             App                             STATICFILESDIRS STATICROOT              STATIC_URL     static                   STATICFILES_DIRS     os path join BASE_DIR   staticfiles        collectstatic                                                      STATICROOT   os path join BASEDIR   static         Django  static    django contrib staticfiles  App staticfiles    STATICFILESDIRS STATICROOT    App static                       settings py           Nginx             static   Nginx   django contrib staticfiles                 static                     Django              settings DEBUG False    staticfiles",
        "objectID": "post/django的STATIC_ROOT与STATICFILES_DIRS的区别",
        "date": "2017-11-01T00:00:00.000Z",
        "publishdate": "2017-11-01T00:00:00.000Z",
        "tags": [
            "python",
            "django"
        ],
        "bigimg": [
            {
                "src": "/img/posts/18888531_442371539465605_1833253399559143424_n.jpg",
                "desc": "乌镇水乡@杭州 JUNE 1,2017"
            }
        ],
        "slug": "django-staticroot-staticfilesdirs-function",
        "category": "python",
        "gitcomment": true
    },
    {
        "title": "django自定义标签之inclusion_tag的用法",
        "uri": "post/django自定义标签之inclusion_tag的用法",
        "content": "django                                      inclusion_tags     1  model      templatetags             init py                  2   buttons py           django import template register   template Library    register inclusiontag  tags diggbutton html   takes_context True  def digg_button context  comment   context       request          takes_context   True                context  user   context  user   user is_authenticated    return   isdigg   comment isdigg user    uuid   comment uuid   uptimes   comment uptimes  return   is_digg   False   uuid   comment uuid   uptimes   comment uptimes  3        tags          diggbutton html            diggbutton             is_digg         up_times       else         up_times       endif    4         digg_button                          django 1 6 2              buttons               buttons     templatetags               load buttons    5                  digg_button        digg_button comment        django 1 6 2",
        "objectID": "post/django自定义标签之inclusion_tag的用法",
        "date": "2014-05-28T00:00:00.000Z",
        "publishdate": "2014-05-28T00:00:00.000Z",
        "tags": [
            "django",
            "标签"
        ],
        "slug": "django-custom-tag-inclusion_tag",
        "category": "django",
        "gitcomment": true
    },
    {
        "title": "Docker 的多阶段构建",
        "uri": "post/Docker 的多阶段构建",
        "content": "Docker     Build Ship and Run App Anywhere       Docker                           Build                               golang                                                                                                                                  golang             Docker          package main import    github com gin gonic gin   net http    func main     router    gin Default   router GET   ping   func c  gin Context    c String http StatusOK   PONG      router Run   8080                                        alpine                        Docker                             Ubuntu                                                  alpine                  Ubuntu              volume                         alpine                                                                                alpine                     alpine                    Dockerfile     Dockerfile build  golang WORKDIR  go src app ADD    go src app RUN go  u  v github com kardianos govendor RUN govendor sync RUN GOOS linux GOARCH 386 go build  v  o  go src app app server   alpine       Dockerfile old  alpine latest RUN apk add  U tzdata RUN ln  sf  usr share zoneinfo Asia Shanghai  etc localtime WORKDIR  root  COPY app server   CMD     app server                                build sh     bin sh echo Building cnych docker multi stage demo build docker build  t cnych docker multi stage demo build    f Dockerfile build docker create   name extract cnych docker multi stage demo build docker cp extract  go src app app server   app server docker rm  f extract echo Building cnych docker multi stage demo old docker build   no cache  t cnych docker multi stage demo old    f Dockerfile old rm   app server                                                           Docker 17 05                  Multi stage builds                        Dockerfile                                                                                                   Dockerfile              Dockerfile  golang build env ADD    go src app WORKDIR  go src app RUN go  u  v github com kardianos govendor RUN govendor sync RUN GOOS linux GOARCH 386 go build  v  o  go src app app server alpine RUN apk add  U tzdata RUN ln  sf  usr share zoneinfo Asia Shanghai  etc localtime COPY   from build env  go src app app server  usr local bin app server EXPOSE 8080 CMD    app server             Dockerfile                       build         docker build  t cnych docker multi stage demo latest                                            0         AS                       build env                   from build env                         docker run   rm  p 8080 8080 cnych docker multi stage demo latest                  http   127 0 0 1 8080 ping       PONG                                            github    https   github com cnych docker multi stage demo      https   docs docker com develop develop images multistage build",
        "objectID": "post/Docker 的多阶段构建",
        "date": "2018-02-04T00:00:00.000Z",
        "publishdate": "2018-02-04T00:00:00.000Z",
        "tags": [
            "docker",
            "alpine"
        ],
        "keywords": [
            "kubernetes",
            "docker",
            "golang",
            "服务"
        ],
        "slug": "multi-stage-build-for-docker",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1495855720902-bb60e936d7ca.jpeg",
                "desc": "moonlit"
            }
        ],
        "category": "docker"
    },
    {
        "title": "Dockerfile 最佳实践",
        "uri": "post/Dockerfile最佳实践",
        "content": "Docker    Dockerfile           https   docs docker com develop develop images dockerfile_best practices  Docker     Dockerfile                                 Dockerfiles                       Dockerfile Reference                    Dockerfile                   Docker Inc    Docker                                      Dockerfile buildpack deps                      Dockerfile                                                                                  12 Factor 12                                                  docker build                          Dockerfile                  f              Dockerfile                                Docker                                     cd        hello         hello        Dockerfile   cat                 mkdir myproject    cd myproject echo  hello    hello echo  e  FROM busybox nCOPY  hello   nRUN cat  hello    Dockerfile docker build  t helloapp v1        Dockerfile   hello                                        f   Dockerfile              mkdir  p dockerfiles context mv Dockerfile dockerfiles    mv hello context docker build   no cache  t helloapp v2  f dockerfiles Dockerfile context                                                                                                Dockerfile  Sending build context Docker daemon 187 8MB    dockerignore      Dockerfile           Dockerfile                                                           dockerignore                dockerignore            Git    gitignore                 Docker 17 05                                                                                                                                                                                            web                 web                                                                  Celery                                                                                             Docker                             Docker                     Docker 17 05      1 10                                        1 10       RUN COPY   ADD                                                    17 05                                                                                   RUN COPY ADD                     Dockerfile                                                                                                                                              buildpack deps        RUN apt get update    apt get install  y   bzr   cvs   git   mercurial   subversion                Docker    Dockerfile                       Docker                                                                docker build        no cache true                                                  Docker                        FROM                                                                                         Dockerfile                                ADD   COPY                                                                                                                              ADD   COPY                                        RUN apt get  y update                  Docker                                               Dockerfile                     Dockerfile             Dockerfile                                                  Dockerfile                               Alpine                        5 MB                 LABEL                                            LABEL                                                                                                             Set one individual labels LABEL com example version  0 0 1 beta  LABEL vendor  ACME Incorporated  LABEL com example release date  2015 02 12  LABEL com example version is production                   1 10                LABEL                                          Set multiple labels once  using line continuation characters break long lines LABEL vendor ACME  Incorporated   com example is production      com example version  0 0 1 beta    com example release date  2015 02 12                 Understanding object labels  RUN      Dockerfile                        RUN              RUN               apt get   RUN apt get                         RUN apt get upgrade   dist upgrade                                          foo         apt get install  y foo             foo        RUN apt get update   apt get install       RUN        RUN apt get update    apt get install  y   package bar   package baz   package foo   apt get update         RUN                 apt get install              Dockerfile     ubuntu 14 04 RUN apt get update RUN apt get install  y curl              Docker                   apt get install         ubuntu 14 04 RUN apt get update RUN apt get install  y curl nginx Docker        RUN apt get update               apt get update                     apt get update          apt get install           curl   nginx       RUN apt get update    apt get install  y      Dockerfiles                                          cache busting                          cache busting                RUN apt get update    apt get install  y   package bar   package baz   package foo 1 3                                 ",
        "objectID": "post/Dockerfile最佳实践",
        "date": "2018-09-12T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "docker",
            "dockerfile"
        ],
        "slug": "dockerfile-best-practice",
        "keywords": [
            "kubernetes",
            "docker",
            "dockerfile",
            "实践"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1536620752150-a7e9e62a62ee.jpeg",
                "desc": "Colorful vertical stripes"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Docker 镜像分析工具 Dive(附视频)",
        "uri": "post/Docker镜像分析工具Dive",
        "content": "docker inspect         docker     meta     docker history                                                          docker images REPOSITORY TAG IMAGE ID CREATED SIZE python 3 6 4 07d72c0beb99 8 months ago 689MB   docker inspect python 3 6 4             RootFS      Type    layers    Layers      sha256 8fad67424c4e7098f255513e160caa00852bcff347bc9f920a82ddf3f60229de    sha256 86985c679800f423275a0ea3ad540e9b7f522dcdcd65ec2b20f407996162f2e0    sha256 6e5e20cbf4a7246b94f7acf2a2ceb2c521e95daca334dd1e8ba388fa73443dfe    sha256 ff57bdb79ac820da132ad1fdc1e2d250de5985b264dbdf60aa4ce83a05c4da75    sha256 6e1b48dc2cccd7c0faf316e5975f1a02f5897723d7fa3b0367b28a20173931d6    sha256 325a22db58ea59d76568ded2fac6b783554f8cd5fa8e851c260da4b141c55c6c    sha256 a4a7a3673769ce5035e06f56458cab872bb5dc561bebe3571ac62fe2b52f0aaf    sha256 c83faac49cbc38f1e458dfffb71b1c87860f56ac34602befefe6005177474ba3        Metadata      LastTagTime    0001 01 01T00 00 00Z          docker history python 3 6 4 IMAGE CREATED CREATED SIZE COMMENT 07d72c0beb99 8 months ago  bin sh  c   nop  CMD   python3   0B 8 months ago  bin sh  c set  ex  wget  O get pip py  ht  6 06MB 8 months ago  bin sh  c   nop  ENV PYTHONPIPVERSION 9   0B 8 months ago  bin sh  c cd  usr local bin    ln  s idle3  32B 8 months ago  bin sh  c set  ex    buildDeps   dpkg de  62 9MB 8 months ago  bin sh  c   nop  ENV PYTHON_VERSION 3 6 4 0B 8 months ago  bin sh  c   nop  ENV GPG_KEY 0D96DF4D4110E  0B 8 months ago  bin sh  c apt get update    apt get install  8 67MB 8 months ago  bin sh  c   nop  ENV LANG C UTF 8 0B 8 months ago  bin sh  c   nop  ENV PATH  usr local bin    0B 8 months ago  bin sh  c set  ex  apt get update  apt ge  320MB 8 months ago  bin sh  c apt get update    apt get install  123MB 8 months ago  bin sh  c set  ex    command  v gpg      0B 8 months ago  bin sh  c apt get update    apt get install  44 6MB 8 months ago  bin sh  c   nop  CMD   bash   0B 8 months ago  bin sh  c   nop  ADD file bc844c4763367b5f0  123MB                     docker            dive    https   github com wagoodman dive           docker             docker              video mp4  http   vdn haimaxy com course 2019 1 3 dive mp4  poster  https   bxdc static oss cn beijing aliyuncs com images qbzfz jpg            docker         dive            tag       dive            build       docker                 dive build  t              docker                                                                                                                                                                                                                              docker                 dive build  t some tag        docker build      dive build                                docker                dive            docker pull wagoodman dive    pull                                       docker run   rm  it    v  var run docker sock  var run docker sock   wagoodman dive latest            python 3 6 4        docker run   rm  it    v  var run docker sock  var run docker sock   wagoodman dive latest python 3 6 4 Analyzing Image Fetching metadata    Fetching image        layer  0  2f1b3001b085f94                                               100    465 465      layer  1  383de4491c61a96                                               100    7 7      layer  2  5a18124b107698b                                               100    1382 1382      layer  3  68c6148e6856d76                                               100    568 568      layer  4  872e2e8e6109ee2                                               100    5421 5421      layer  5  8aa62fd66ae0210                                               100    8252 8252      layer  6  93e9cefe47e6b15                                               100    11545 11545      layer  7  f1a4ff99e76e332                                               100    1482 1482    Building tree    Analyzing layers                                                                                                                                                 dive  github",
        "objectID": "post/Docker镜像分析工具Dive",
        "date": "2018-12-08T00:00:00.000Z",
        "tags": [
            "docker",
            "镜像",
            "dive"
        ],
        "slug": "docker-image-explore-tool-dive",
        "keywords": [
            "docker",
            "镜像",
            "dive"
        ],
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1544137105-295758788545.jpeg",
                "desc": "Monte Due Mani, Italy"
            }
        ],
        "category": "docker"
    },
    {
        "title": "使用 Elastic 技术栈构建 K8S 全栈监控(1/4)",
        "uri": "post/Elastic技术栈构建K8S全栈监控1",
        "content": "Elastic       Kubernetes                                                                                         3                            CPU                                                                                                     APM                                                HTTP                                                          Kubernetes        ElasticSearch Kibana Filebeat Metricbeat   APM Server     Elastic                                                                Helm                              Elastic      Kubernetes                Kubernetes v1 16 2                                elastic           kubectl create ns elastic namespace elastic created 1                   SpringBoot   MongoDB                MongoDB                   mongo yml apiVersion  v1 kind  Service metadata  name  mongo namespace  elastic labels  app  mongo spec  ports  port  27017 protocol  TCP selector  app  mongo apiVersion  apps v1 kind  StatefulSet metadata  namespace  elastic name  mongo labels  app  mongo spec  serviceName   mongo  selector  matchLabels  app  mongo template  metadata  labels  app  mongo spec  containers  name  mongo image  mongo ports  containerPort  27017 volumeMounts  name  data mountPath   data db volumeClaimTemplates  metadata  name  data spec  accessModes     ReadWriteOnce    storageClassName  rook ceph block        RWO   StorageClass resources  requests  storage  1Gi             rook ceph block   StorageClass         PV              RWO   StorageClass                         kubectl apply  f mongo yml service mongo created statefulset apps mongo created   kubectl pods  n elastic  l app mongo NAME READY STATUS RESTARTS AGE mongo 0 1 1 Running 0 34m    Pod    Running      mongodb             SpringBoot   API           NodePort     Service                         spring boot simple yml apiVersion  v1 kind  Service metadata  namespace  elastic name  spring boot simple labels  app  spring boot simple spec  type  NodePort ports  port  8080 protocol  TCP selector  app  spring boot simple apiVersion  apps v1 kind  Deployment metadata  namespace  elastic name  spring boot simple labels  app  spring boot simple spec  replicas  1 selector  matchLabels  app  spring boot simple template  metadata  labels  app  spring boot simple spec  containers  image  cnych spring boot simple 0 0 1 SNAPSHOT name  spring boot simple env  name  SPRINGDATAMONGODB_HOST     MONGODB   value  mongo ports  containerPort  8080                     kubectl apply  f spring boot simple yaml service spring boot simple created deployment apps spring boot simple created   kubectl pods  n elastic  l app spring boot simple NAME READY STATUS RESTARTS AGE spring boot simple 64795494bf hqpcj 1 1 Running 0 24m   kubectl svc  n elastic  l app spring boot simple NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE spring boot simple NodePort 10 109 55 134 8080 31847 TCP 84s                    http    31847                        curl  X http   k8s qikqiak com 31847  Greetings Spring Boot       POST       curl  X POST http   k8s qikqiak com 31847 message  d  hello world    id   5ef55c130d53190001bf74d2   message   hello world    postedAt   2020 06 26T02 23 15 860 0000               curl  X http   k8s qikqiak com 31847 message    id   5ef55c130d53190001bf74d2   message   hello world    postedAt   2020 06 26T02 23 15 860 0000    2  ElasticSearch          Elastic                   ElasticSearch                             3                    2 1    ElasticSearch                 Master                      ConfigMap                       ElasticSearch                                    elasticsearch master configmap yaml apiVersion  v1 kind  ConfigMap metadata  namespace  elastic name  elasticsearch master config labels  app  elasticsearch role  master data  elasticsearch yml     cluster name    CLUSTER_NAME  node name    NODE_NAME  discovery seedhosts    NODELIST  cluster initialmasternodes    MASTER_NODES  network host  0 0 0 0 node  master  true data  false ingest  false xpack security enabled  true xpack monitoring collection enabled  true        Service      Master                    9300                    elasticsearch master service yaml apiVersion  v1 kind  Service metadata  namespace  elastic name  elasticsearch master labels  app  elasticsearch role  master spec  ports  port  9300 name  transport selector  app  elasticsearch role  master        Deployment       Master                  elasticsearch master deployment yaml apiVersion  apps v1 kind  Deployment metadata  namespace  elastic name  elasticsearch master labels  app  elasticsearch role  master spec  replicas  1 selector  matchLabels  app  elasticsearch role  master template  metadata  labels  app  elasticsearch role  master spec  containers  name  elasticsearch master image  docker elastic co elasticsearch elasticsearch 7 8 0 env  name  CLUSTER_NAME value  elasticsearch name  NODE_NAME value  elasticsearch master name  NODE_LIST value  elasticsearch master elasticsearch data elasticsearch client name  MASTER_NODES value  elasticsearch master name   ESJAVAOPTS  value    Xms512m  X",
        "objectID": "post/Elastic技术栈构建K8S全栈监控1",
        "subtitle": "搭建 ElasticSearch 集群环境",
        "date": "2020-07-09T00:00:00.000Z",
        "keywords": [
            "elastic",
            "kubernetes"
        ],
        "tags": [
            "elastic",
            "kubernetes",
            "kibana"
        ],
        "slug": "k8s-monitor-use-elastic-stack-1",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200709104733.png",
                "desc": "https://unsplash.com/photos/bK1hmAK3D78"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Elastic 技术栈构建 K8S 全栈监控(2/4)",
        "uri": "post/Elastic技术栈构建K8S全栈监控2",
        "content": "ElasticSearch              Metricbeat   Kubernetes        Metricbeat                                         Kubernetes             Metribeat                                      Nginx Kafka MySQL Redis               Elastic          https   www elastic co guide en beats metricbeat current metricbeat modules html  kube state metrics           kube state metrics           Kubernetes API                              kube state metrics            GitHub                     git clone https   github com kubernetes kube state metrics git   cd kube state metrics          kubectl apply  f examples standard  clusterrolebinding rbac authorization k8s io kube state metrics configured clusterrole rbac authorization k8s io kube state metrics configured deployment apps kube state metrics configured serviceaccount kube state metrics configured service kube state metrics configured   kubectl pods  n kube system  l app kubernetes io name kube state metrics NAME READY STATUS RESTARTS AGE kube state metrics 6d7449fc78 mgf4f 1 1 Running 0 88s   Pod    Running            Metricbeat                          DaemonSet        Metricbeat          ConfigMap     Metricbeat      Volume              etc metricbeat yaml             ElasticSearch               Kibana                      metricbeat settings configmap yml apiVersion  v1 kind  ConfigMap metadata  namespace  elastic name  metricbeat config labels  app  metricbeat data  metricbeat yml          metricbeat modules  module  system period    PERIOD  metricsets    cpu    load    memory    network    process    process_summary    core    diskio    socket   processes         process includetopn  by_cpu  5      CPU     5    by_memory  5           5    module  system period    PERIOD  metricsets    filesystem    fsstat   processors  drop_event when regexp  system filesystem mount_point      sys cgroup proc dev etc host lib        module  docker period    PERIOD  hosts    unix    var run docker sock   metricsets    container    cpu    diskio    healthcheck    info    memory    network   module  kubernetes      kubelet      period    PERIOD  node    NODE_NAME  hosts    https     NODE_NAME  10250   metricsets    node    system    pod    container    volume   bearertokenfile   var run secrets kubernetes io serviceaccount token ssl verification_mode   none  module  kubernetes      kube state metrics    period    PERIOD  node    NODE_NAME  metricsets    statenode    statedeployment    statereplicaset    statepod    state_container   hosts    kube state metrics kube system svc cluster local 8080      k8s deployment           metricbeat autodiscover  providers  type  kubernetes node    NODE_NAME  templates  condition equals  kubernetes labels app  mongo config  module  mongodb period    PERIOD  hosts    mongo elastic 27017   metricsets    dbstats    status    collstats    metrics    replstatus   ElasticSearch      output elasticsearch  hosts      ELASTICSEARCHHOST elasticsearch    ELASTICSEARCHPORT 9200    username    ELASTICSEARCH_USERNAME  password    ELASTICSEARCH_PASSWORD      Kibana setup kibana  host     KIBANAHOST kibana    KIBANAPORT 5601           Dashboard setup dashboards enabled  true    indice      setup ilm  policy_file   etc indice lifecycle json ElasticSearch   indice                 indice              indice                1GB        indice                                               G                         indice                  Prometheus                                5GB      indice             10   indice           10            metricbeat indice lifecycle configmap yml apiVersion  v1 kind  ConfigMap metadata  namespace  elastic name  metricbeat indice lifecycle labels  app  metricbeat data  indice lifecycle json        policy      phases      hot      actions      rollover      max_size    5GB     max_age    1d          delete      min_age    10d    actions      delete                          Metricbeat   DaemonSet              metricbeat daemonset yml apiVersion  apps v1 kind  DaemonSet metadata  namespace  elastic name  metricbeat labels  app  metricbeat spec  selector  matchLabels  app  metricbeat template  metadata  labels  app  metricbeat spec  serviceAccountName  metricbeat terminationGracePeriodSeconds  30 hostNetwork  true dnsPolicy  ClusterFirstWithHostNet containers  name  metricbeat image  docker elastic co beats metricbeat 7 8 0 args      c     etc metricbeat yml     e     system hostfs  hostfs    env  name  ELASTICSEARCH_HOST value  elasticsearch client elastic svc cluster local name  ELASTICSEARCH_PORT value   9200  name  ELASTICSEARCH_USERNAME value  elastic name  ELASTICSEARCH_PASSWORD valueFrom  secretKeyRef  name  elasticsearch pw elastic key  password name  KIBANA_HOST value  kibana elastic svc cluster local name  KIBANA_PORT value   5601  name  NODE_NAME valueFrom  fieldRef  fieldPath  spec nodeName name  PERIOD value   10s  securityContext  runAsUser  0 resources  limits  memory  200Mi requests  cpu  100m memory  100Mi volumeMounts  name  config mountPath   etc metricbeat yml readOnly  true subPath  metricbeat yml name  indice lifecycle mountPath   etc indice",
        "objectID": "post/Elastic技术栈构建K8S全栈监控2",
        "subtitle": "使用 Metricbeat 对 Kubernetes 集群进行监控",
        "date": "2020-07-09T00:00:00.000Z",
        "keywords": [
            "elastic",
            "kubernetes"
        ],
        "tags": [
            "elastic",
            "kubernetes",
            "metricbeat"
        ],
        "slug": "k8s-monitor-use-elastic-stack-2",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200709104733.png",
                "desc": "https://unsplash.com/photos/bK1hmAK3D78"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Elastic 技术栈构建 K8S 全栈监控(3/4)",
        "uri": "post/Elastic技术栈构建K8S全栈监控3",
        "content": "Filebeat     Kubernetes                ElasticSearch    Filebeat                                         Nginx            Metricbeat    Filebeat               ElasticSearch         Kibana                        ConfigMap                                            filebeat settings configmap yml apiVersion  v1 kind  ConfigMap metadata  namespace  elastic name  filebeat config labels  app  filebeat data  filebeat yml     filebeat inputs  type  container enabled  true paths   var log containers   log processors  addkubernetesmetadata  in_cluster  true host    NODE_NAME  matchers  logs_path  logs_path    var log containers   filebeat autodiscover  providers  type  kubernetes templates  condition equals  kubernetes labels app  mongo config  module  mongodb enabled  true log  input  type  docker containers ids    data kubernetes container id  processors  drop_event  when or  and  regexp  message     d    d    d    d    equals  fileset name  error and  not  regexp  message     d    d    d    d    equals  fileset name  access addcloudmetadata  addkubernetesmetadata  matchers  logs_path  logs_path    var log containers   adddockermetadata  output elasticsearch  hosts      ELASTICSEARCHHOST elasticsearch    ELASTICSEARCHPORT 9200    username    ELASTICSEARCH_USERNAME  password    ELASTICSEARCH_PASSWORD  setup kibana  host     KIBANAHOST kibana    KIBANAPORT 5601   setup dashboards enabled  true setup template enabled  true setup ilm  policy_file   etc indice lifecycle json         var log containers                 inCluster       Kubernetes   APIServer         Meta             Elasticsearch        policy_file     indice        filebeat indice lifecycle configmap yml apiVersion  v1 kind  ConfigMap metadata  namespace  elastic name  filebeat indice lifecycle labels  app  filebeat data  indice lifecycle json        policy      phases      hot      actions      rollover      max_size    5GB     max_age    1d          delete      min_age    30d    actions      delete                                          DaemonSet                       filebeat daemonset yml apiVersion  apps v1 kind  DaemonSet metadata  namespace  elastic name  filebeat labels  app  filebeat spec  selector  matchLabels  app  filebeat template  metadata  labels  app  filebeat spec  serviceAccountName  filebeat terminationGracePeriodSeconds  30 containers  name  filebeat image  docker elastic co beats filebeat 7 8 0 args      c     etc filebeat yml     e     env  name  ELASTICSEARCH_HOST value  elasticsearch client elastic svc cluster local name  ELASTICSEARCH_PORT value   9200  name  ELASTICSEARCH_USERNAME value  elastic name  ELASTICSEARCH_PASSWORD valueFrom  secretKeyRef  name  elasticsearch pw elastic key  password name  KIBANA_HOST value  kibana elastic svc cluster local name  KIBANA_PORT value   5601  name  NODE_NAME valueFrom  fieldRef  fieldPath  spec nodeName securityContext  runAsUser  0 resources  limits  memory  200Mi requests  cpu  100m memory  100Mi volumeMounts  name  config mountPath   etc filebeat yml readOnly  true subPath  filebeat yml name  filebeat indice lifecycle mountPath   etc indice lifecycle json readOnly  true subPath  indice lifecycle json name  data mountPath   usr share filebeat data name  varlog mountPath   var log readOnly  true name  varlibdockercontainers mountPath   var lib docker containers readOnly  true name  dockersock mountPath   var run docker sock volumes  name  config configMap  defaultMode  0600 name  filebeat config name  filebeat indice lifecycle configMap  defaultMode  0600 name  filebeat indice lifecycle name  varlog hostPath  path   var log name  varlibdockercontainers hostPath  path   var lib docker containers name  dockersock hostPath  path   var run docker sock name  data hostPath  path   var lib filebeat data type  DirectoryOrCreate          Kubeadm          Master                  Master                                              Kubernetes      Meta       Pod                Filebeat      APIServer          RBAC                  filebeat permission yml apiVersion  rbac authorization k8s io v1beta1 kind  ClusterRoleBinding metadata  name  filebeat subjects  kind  ServiceAccount name  filebeat namespace  elastic roleRef  kind  ClusterRole name  filebeat apiGroup  rbac authorization k8s io apiVersion  rbac authorization k8s io v1beta1 kind  ClusterRole metadata  name  filebeat labels  app  filebeat rules  apiGroups       resources  namespaces pods verbs  watch list apiVersion  v1 kind  ServiceAccount metadata  namespace  elastic name  filebeat labels  app  filebeat                        kubectl apply  f filebeat settings configmap yml    f filebeat indice lifecycle configmap yml    f filebeat daemonset yml    f filebeat permissions yml configmap filebeat config created configmap filebeat indice lifecycle created daemonset apps filebeat created clusterrolebinding rbac authorization k8s io filebeat created clusterrole rbac authorization k8s io filebeat created serviceaccount filebeat created      Filebeat   Logstash   Pod     Running                       Kibana                Observability   Logs               Metrics",
        "objectID": "post/Elastic技术栈构建K8S全栈监控3",
        "subtitle": "使用 Filebeat 采集 Kubernetes 集群日志",
        "date": "2020-07-09T00:00:00.000Z",
        "keywords": [
            "elastic",
            "kubernetes",
            "filebeat"
        ],
        "tags": [
            "elastic",
            "kubernetes",
            "filebeat"
        ],
        "slug": "k8s-monitor-use-elastic-stack-3",
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200709104733.png",
                "desc": "https://unsplash.com/photos/bK1hmAK3D78"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Elastic 技术栈构建 K8S 全栈监控(4/4)",
        "uri": "post/Elastic技术栈构建K8S全栈监控4",
        "content": "Elastic APM   Elastic Stack                                                                       Elastic APM     OpenTracing                                                                         Elastic APM        APM Server                ElasticSearch            agent              APM Server         Kubernetes       APM Server     agent            ElasticSearch            ConfigMap      apm configmap yml apiVersion  v1 kind  ConfigMap metadata  namespace  elastic name  apm server config labels  app  apm server data  apm server yml     apm server  host   0 0 0 0 8200  output elasticsearch  hosts      ELASTICSEARCHHOST elasticsearch    ELASTICSEARCHPORT 9200    username    ELASTICSEARCH_USERNAME  password    ELASTICSEARCH_PASSWORD  setup kibana  host     KIBANAHOST kibana    KIBANAPORT 5601   APM Server      8200      agent                   Service       apm service yml apiVersion  v1 kind  Service metadata  namespace  elastic name  apm server labels  app  apm server spec  ports  port  8200 name  apm server selector  app  apm server        Deployment           apm deployment yml apiVersion  apps v1 kind  Deployment metadata  namespace  elastic name  apm server labels  app  apm server spec  replicas  1 selector  matchLabels  app  apm server template  metadata  labels  app  apm server spec  containers  name  apm server image  docker elastic co apm apm server 7 8 0 env  name  ELASTICSEARCH_HOST value  elasticsearch client elastic svc cluster local name  ELASTICSEARCH_PORT value   9200  name  ELASTICSEARCH_USERNAME value  elastic name  ELASTICSEARCH_PASSWORD valueFrom  secretKeyRef  name  elasticsearch pw elastic key  password name  KIBANA_HOST value  kibana elastic svc cluster local name  KIBANA_PORT value   5601  ports  containerPort  8200 name  apm server volumeMounts  name  config mountPath   usr share apm server apm server yml readOnly  true subPath  apm server yml volumes  name  config configMap  name  apm server config                  kubectl apply  f apm deployment yml    f apm service yml    f apm deployment yml configmap apm server config created service apm server created deployment extensions apm server created   Pod    Running             kubectl pods  n elastic  l app apm server NAME READY STATUS RESTARTS AGE apm server 667bfc5cff zj8nq 1 1 Running 0 12m                 Spring Boot         agent        Java Agent              spring boot simple       Elastic APM Java agent          elastic apm agent 1 8 0 jar    jar                     Dockerfile                     JAR      RUN wget  O  apm agent jar https   search maven org remotecontent filepath co elastic apm elastic apm agent 1 8 0 elastic apm agent 1 8 0 jar     Dockerfile         openjdk 8 jdk alpine ENV ELASTICAPMVERSION  1 8 0  RUN wget  O  apm agent jar https   search maven org remotecontent filepath co elastic apm elastic apm agent  ELASTICAPMVERSION elastic apm agent  ELASTICAPMVERSION jar COPY target spring boot simple jar  app jar CMD java  jar  app jar                               open tracing          Elastic APM API       co elastic apm apm agent api   elastic apm version  co elastic apm apm opentracing   elastic apm version  io opentracing contrib opentracing spring cloud mongo starter   opentracing spring cloud version                 Deployment     Spring Boot         Java agent        APM Server  spring boot simple deployment yml apiVersion  apps v1 kind  Deployment metadata  namespace  elastic name  spring boot simple labels  app  spring boot simple spec  selector  matchLabels  app  spring boot simple template  metadata  labels  app  spring boot simple spec  containers  image  cnych spring boot simple 0 0 1 SNAPSHOT imagePullPolicy  Always name  spring boot simple command   java    javaagent  apm agent jar    Delastic apm active   ELASTICAPMACTIVE     Delastic apm serverurls   ELASTICAPM_SERVER     Delastic apm service_name spring boot simple    jar   app jar  env  name  SPRINGDATAMONGODB_HOST value  mongo name  ELASTICAPMACTIVE value   true  name  ELASTICAPMSERVER value  http   apm server elastic svc cluster local 8200 ports  containerPort  8080                  kubectl apply  f spring boot simple yml   kubectl pods  n elastic  l app spring boot simple NAME READY STATUS RESTARTS AGE spring boot simple fb5564885 tf68d 1 1 Running 0 5m11s   kubectl svc  n elastic  l app spring boot simple NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE spring boot simple NodePort 10 109 55 134 8080 31847 TCP 9d                        messages         messages       curl  X http   k8s qikqiak com 31847 message messages          sleep            curl  X http   k8s qikqiak com 31847 message sleep 3000 messages  error     error true           curl  X http   k8s qikqiak com 31847 message error true        Kibana        APM              spring boot simple                                                     JVM                                                            Elastic Stack    Kubernetes",
        "objectID": "post/Elastic技术栈构建K8S全栈监控4",
        "subtitle": "使用 Elastic APM 实时监控应用性能",
        "date": "2020-07-09T00:00:00.000Z",
        "keywords": [
            "elastic",
            "kubernetes"
        ],
        "tags": [
            "elastic",
            "kubernetes",
            "APM",
            "OpenTracing"
        ],
        "slug": "k8s-monitor-use-elastic-stack-4",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200709104733.png",
                "desc": "https://unsplash.com/photos/bK1hmAK3D78"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Envoy 简单入门示例",
        "uri": "post/envoy入门",
        "content": "Envoy                         Istio Service Mesh                          Envoy        1            Envoy    YAML                                                               Envoy                                  Envoy                               API         static_resources  static_resources                   Listeners       Envoy              IP             Envoy   Docker               IP    0 0 0 0        Envoy      10000                     static_resources  listeners  name  listener_0 address  socketaddress    address  0 0 0 0  portvalue  10000          Envoy                                                                               baidu com                 Envoy                        URL            filter_chains                                        static_resources  listeners  name  listener_0 address  socketaddress    address  0 0 0 0  portvalue  10000   filter_chains  filters  name  envoy httpconnectionmanager config  statprefix  ingresshttp route_config  name  local_route virtual_hosts  name  local_service domains        routes  match    prefix        route    hostrewrite  www baidu com  cluster  servicebaidu   http_filters  name  envoy router         envoy httpconnectionmanager     HTTP               stat_prefix                       routeconfig                                             routeconfig          HTTP     routes    URL                                     host_rewrite    HTTP       Host      cluster                         http_filters         Envoy                                                          HTTPS   baidu com                Envoy       Round Robin            static_resources  listeners  name  listener_0 address  socketaddress    address  0 0 0 0  portvalue  10000   filter_chains  filters  name  envoy httpconnectionmanager config  statprefix  ingresshttp route_config  name  local_route virtual_hosts  name  local_service domains        routes  match    prefix        route    hostrewrite  www baidu com  cluster  servicebaidu   http_filters  name  envoy router clusters  name  service_baidu connect_timeout  0 25s type  LOGICAL_DNS dnslookupfamily  V4_ONLY lbpolicy  ROUNDROBIN hosts     socketaddress    address  www baidu com  portvalue  443     tls_context    sni  baidu com                      admin  accesslogpath   tmp admin_access log address  socketaddress    address  0 0 0 0  portvalue  9901            Envoy                Envoy      IP                                       2                  Docker       Envoy            Volume          etc envoy envoy yaml                     80   Envoy       docker run   name envoy  d    p 80 10000    v   pwd  manifests 1 getting started envoy yaml  etc envoy envoy yaml   envoyproxy envoy latest              80          curl localhost                              localhost                  baidu com           URL           localhost  3       Envoy                                  Envoy                             admin                                       admin  accesslogpath   tmp admin_access log address  socketaddress    address  0 0 0 0  portvalue  9901             Docker                                                                                  Envoy                                                    docker run   name envoy with admin  d    p 9901 9901    p 10000 10000    v   pwd  manifests 1 getting started envoy yaml  etc envoy envoy yaml   envoyproxy envoy latest                      localhost 9901     Envoy                                                                                                         Envoy",
        "objectID": "post/envoy入门",
        "date": "2020-04-03T00:00:00.000Z",
        "keywords": [
            "envoy",
            "kubernetes"
        ],
        "tags": [
            "envoy",
            "kubernetes",
            "istio"
        ],
        "slug": "envoy-usage-demo",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200403112418.png",
                "desc": "https://unsplash.com/photos/ITkhmqFN4dI"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "GitHub CLI 命令行工具使用",
        "uri": "post/GitHub命令行工具",
        "content": "GitHub                                    CI CD    GitHub Actions       packages                GitHub                GitHub CLI              GitHub                               pull requests issues              Beta          macOS Windows    Linux       GitHub CLI         GitHub CLI              macOS         Homebrew           brew install github gh gh                   brew update    brew upgrade gh                gh                          gh    repos cli cli releases latest Work seamlessly GitHub command line  GitHub CLI early stages development  we d love hear feedback Usage  gh  command  Available Commands  help Help command issue Create view issues pr Create  view  checkout pull requests Flags    help Show help command  R    repo OWNER REPO Select repository using OWNER REPO format   version Show gh version Use  gh  command    help  information command                   https   cli github com manual installation           issue   pull requests                      GitHub CLI         GitHub    Clone                     gh                                   https   github com cnych qikqiak com              gh       issue        gitment          gh issue list   label  gitment     repos cli cli releases latest Notice  authentication required Press Enter open github com browser     repos cli cli releases latest   POST  graphql POST  graphql POST  graphql POST  graphql POST  graphql   What s next   Use arrows move  type filter    Preview browser Submit Cancel                                                                    pull request                    gh       pull requests   review        gh pr status  git remote  v   git rev parse   abbrev ref HEAD   git config   get regexp  branch  gh pages   remote merge      POST  graphql POST  graphql",
        "objectID": "post/GitHub命令行工具",
        "date": "2020-02-14T00:00:00.000Z",
        "tags": [
            "github",
            "cli",
            "devops"
        ],
        "keywords": [
            "github",
            "git",
            "cli",
            "命令行"
        ],
        "slug": "github-cli-tool-usage",
        "gitcomment": true,
        "notoc": true,
        "category": "devops"
    },
    {
        "title": "Gitlab CI 与 Kubernetes 的结合",
        "uri": "post/Gitlab CI 结合 Kubernetes",
        "content": "Gitlab CI Runner      Kubernetes               Kubernetes   Gitlab CI                                 Github     cnych gitlab ci k8s demo     Gitlab                                 Github       Clone                    git clone https   github com cnych gitlab ci k8s demo git   cd gitlab ci k8s demo Change remote repository   git remote set url origin ssh   git git qikqiak com 30022 root gitlab ci k8s demo git push  import  repository run    git push  u origin master           Gitlab           Gitlab CI               Runner Pod     namespace            Pod    kubectl pods  n kube ops NAME READY STATUS RESTARTS AGE gitlab 7bff969fbc k5zl4 1 1 Running 0 4d gitlab ci runner 0 1 1 Running 0 4m gitlab ci runner 1 1 1 Running 0 4m runner 9rixsyft project 2 concurrent 06g5w4 0 2 ContainerCreating 0 4m runner 9rixsyft project 2 concurrent 1t74t9 0 2 ContainerCreating 0 4m              Pod           Job                                  Pipeline         test   test2     Job           image_build                        Job           docker login  u    CIREGISTRYUSER    p    CIREGISTRYPASSWORD      CI_REGISTRY   WARNING  Using   password via CLI insecure  Use   password stdin  Error response daemon  https   registry 1 docker io v2   unauthorized  incorrect username password ERROR  Job failed  command terminated exit code 1                  Gitlab     Container Registry                             Harbor         Harbor                     Harbor                                       CI CD   Environment variables                               Job                                    docker login  u    CIREGISTRYUSER    p    CIREGISTRYPASSWORD      CI_REGISTRY   WARNING  Using   password via CLI insecure  Use   password stdin  Error response daemon  https   registry qikqiak com v2   x509  certificate signed unknown authority ERROR  Job failed  command terminated exit code 1                                                                    Harbor                 Docker          insecure registries          etc docker certs d            CA              dind     insecure        services  name  docker dind command      insecure registry registry qikqiak com       registry qikqiak com                        gitlab ci yml                                     deploy_review                          kubectl                         Gitlab CI             cnych kubectl     Dockerfile        cnych docker kubectl      alpine 3 8 MAINTAINER cnych ENV KUBELATESTVERSION  v1 13 4  RUN apk add   update ca certificates      apk add   update  t deps curl      apk add   update gettext      apk add   update git      curl  L https   storage googleapis com kubernetes release release   KUBELATESTVERSION  bin linux amd64 kubectl  o  usr local bin kubectl      chmod  x  usr local bin kubectl      apk del   purge deps      rm  var cache apk   ENTRYPOINT   kubectl   CMD     help       kubectl                       kube config                                                                                                     Gitlab       Kubernetes            Add Kubernetes Cluster    Add existing cluster  1 Kubernetes cluster name       2 API URL       apiserver             kubectl cluster info    Kubernetes master           kubectl cluster info Kubernetes master running https   10 151 30 11 6443 KubeDNS running https   10 151 30 11 6443 api v1 namespaces kube system services kube dns dns proxy further debug diagnose cluster problems  use  kubectl cluster info dump   3 CA   Token                         gitlab  namespace                       namespace    kubectl create ns gitlab                                    RBAC                    ServiceAccount      cluster admin     gitlab sa yaml  apiVersion  v1 kind  ServiceAccount metadata  name  gitlab namespace  gitlab apiVersion  rbac authorization k8s io v1beta1 kind  ClusterRoleBinding metadata  name  gitlab namespace  gitlab subjects  kind  ServiceAccount name  gitlab namespace  gitlab roleRef  apiGroup  rbac authorization k8s io kind  ClusterRole name  cluster admin         ServiceAccount       kubectl apply  f sa yaml serviceaccount  gitlab  created clusterrolebinding rbac authorization k8s io  gitlab  created           ServiceAccount    CA     Token    kubectl serviceaccount gitlab  n gitlab  o json   jq  r   secrets 0  name  gitlab token f9zp7        Secret  CA     kubectl secret gitlab token f9zp7  n gitlab  o json   jq  r   data  ca crt      base64  d xxxxxCA    xxxxx          Token        kubectl secret gitlab token f9zp7  n gitlab  o json   jq  r   data token    base64  d xxxxxxtoken xxxx                gitlab ci yml    Gitlab CI                      Gitlab CI   gitlab ci yml       Job   gitlab ci yml             golang     test  stage  test script  go test            Job    test    Stage               Stage        gitlab ci yml                   Stage stages  test build release deploy                                               image  golang 1 10 3 stretch        job        test  stage  test image  python 3 script  echo Something test step python 3 image      gitlab ci yml                   https   docs gitla",
        "objectID": "post/Gitlab CI 结合 Kubernetes",
        "subtitle": "基于 Gitlab CI 和 Kubernetes 的 CI/CD",
        "date": "2019-03-21T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "devops",
            "gitlab",
            "ci"
        ],
        "keywords": [
            "kubernetes",
            "devops",
            "gitlab",
            "ci",
            "CI/CD",
            "runner"
        ],
        "slug": "gitlab-ci-k8s-cluster-feature",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/a28fp.jpg",
                "desc": "STEP"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "在 Kubernetes 上安装 Gitlab CI Runner",
        "uri": "post/Gitlab Runner安装",
        "content": "Helm      Gitlab         Kubernetes                   Gitlab CI                     Gitlab CI               Kubernetes     Gitlab CI Runner       Gitlab 8 0    Gitlab CI        Gitlab                gitlab ci yml         Runner              Gitlab CI            Gitlab CI          Pipeline    Pipeline                                                                 Merge Request          Pipeline                                                       trigger       Commit   MR               Pipeline                                                   Stages Stages                               Pipeline       Stages    Stages            Stages              Stage         Stage            Stages            Pipeline              Stage          Stages             Pipeline     Stages   Pipeline                                                                           Pipeline                                                           Stage 1         Stage 2          Stage 3                                                                                                                    Jobs Jobs             Stage               Stages        Jobs    Jobs            Stage    Jobs          Stage    Jobs          Stage             Job        Stage            Pipeline     Jobs   Stage                                                             Stage 1                                                   Job 1     Job 2     Job 3                                                                                              Gitlab Runner                                                  Jenkins   Master   Slave                       Gitlab CI         Gitlab Runner                                    Gitlab                Gitlab            GitLab CI                                             Gitlab Runner               Gitlab Runner                                Gitlab            Gitlab Runner                   https   docs gitlab com runner install                Docker                  Gitlab Runner     Kubernetes                  Gitlab        1    Kubernetes              Kubernetes       kubectl cluster info Kubernetes master running https   10 151 30 11 6443 KubeDNS running https   10 151 30 11 6443 api v1 namespaces kube system services kube dns dns proxy further debug diagnose cluster problems  use  kubectl cluster info dump   cluster info                            2    Gitlab CI Register Token                 Gitlab        git qikqiak com               http   git qikqiak com admin          Runner                      URL        Register Token                               Token 3    Gitlab CI Runner              Runner            kube ops   namespace            ConfigMap       Runner           runner cm yaml   apiVersion  v1 data  REGISTERNONINTERACTIVE   true  REGISTER_LOCKED   false  METRICS_SERVER   0 0 0 0 9100  CISERVERURL   http   gitlab kube ops svc cluster local ci  RUNNERREQUESTCONCURRENCY   4  RUNNER_EXECUTOR   kubernetes  KUBERNETES_NAMESPACE   kube ops  KUBERNETES_PRIVILEGED   true  KUBERNETESCPULIMIT   1  KUBERNETESMEMORYLIMIT   1Gi  KUBERNETESSERVICECPU_LIMIT   1  KUBERNETESSERVICEMEMORY_LIMIT   1Gi  KUBERNETESHELPERCPU_LIMIT   500m  KUBERNETESHELPERMEMORY_LIMIT   100Mi  KUBERNETESPULLPOLICY   if not present  KUBERNETES_TERMINATIONGRACEPERIODSECONDS   10  KUBERNETESPOLLINTERVAL   5  KUBERNETESPOLLTIMEOUT   360  kind  ConfigMap metadata  labels  app  gitlab ci runner name  gitlab ci runner cm namespace  kube ops    CISERVERURL            Gitlab     URL              Kubernetes       Service DNS       Runner       Kubernetes           ci  http   gitlab kube ops svc cluster local ci                                                 ConfigMap             GitLab CI Runner Pod         envFrom                   env  envFrom           ConfigMaps Secrets                               Pod    gitlab ci multi runner register   help                          env            gitlab runner gitlab ci runner 0    gitlab ci multi runner   help         kubernetes cpu limit value CPU allocation given build containers  default   1     KUBERNETESCPULIMIT    kubernetes memory limit value amount memory allocated build containers  default   4Gi     KUBERNETESMEMORYLIMIT    kubernetes service cpu limit value CPU allocation given build service containers  default   1     KUBERNETESSERVICECPU_LIMIT    kubernetes service memory limit value amount memory allocated build service containers  default   1Gi     KUBERNETESSERVICEMEMORY_LIMIT    kubernetes helper cpu limit value CPU allocation given build helper containers  default   500m     KUBERNETESHELPERCPU_LIMIT    kubernetes helper memory limit value amount memory allocated build helper containers  default   3Gi     KUBERNETESHELPERMEMORY_LIMIT    kubernetes cpu request value CPU allocation requested build containers   KUBERNETESCPUREQUEST                                            Gitlab CI Runner          Pod      Kubernetes TERM                          Pod SIGKILL    Runner                       Runner               runner scripts cm yaml  apiVersion  v1 data  run sh       bin bash unregister     kill  1 e",
        "objectID": "post/Gitlab Runner安装",
        "subtitle": "Gitlab CI 基本概念以及 Runner 的安装",
        "date": "2019-03-19T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "devops",
            "gitlab",
            "ci"
        ],
        "keywords": [
            "kubernetes",
            "devops",
            "gitlab",
            "ci",
            "runner"
        ],
        "slug": "gitlab-runner-install-on-k8s",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/1tdd3.jpg",
                "desc": "Copperopolis, Copperopolis, California, USA"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "在 Kubernetes 上安装 Gitlab",
        "uri": "post/Gitlab 在 Kubernetes 中的安装使用",
        "content": "Gitlab      Helm      Kubernetes                      Helm     Chart                                                  Gitlab     3    Redis Postgresql Gitlab               3                             Gitlab                       Gitlab                   sameersbn gitlab                 http   www damagehead com docker gitlab                 Redis   Postgresql              Gitlab                              Redis                 gitlab redis yaml  apiVersion  apps v1beta1 kind  Deployment metadata  name  redis namespace  kube ops labels  name  redis spec  template  metadata  name  redis labels  name  redis spec  containers  name  redis image  sameersbn redis imagePullPolicy  IfNotPresent ports  name  redis containerPort  6379 volumeMounts  mountPath   var lib redis name  data livenessProbe  exec  command  redis cli ping initialDelaySeconds  30 timeoutSeconds  5 readinessProbe  exec  command  redis cli ping initialDelaySeconds  5 timeoutSeconds  1 volumes  name  data emptyDir     apiVersion  v1 kind  Service metadata  name  redis namespace  kube ops labels  name  redis spec  ports  name  redis port  6379 targetPort  redis selector  name  redis        Postgresql              gitlab postgresql yaml  apiVersion  apps v1beta1 kind  Deployment metadata  name  postgresql namespace  kube ops labels  name  postgresql spec  template  metadata  name  postgresql labels  name  postgresql spec  containers  name  postgresql image  sameersbn postgresql 10 imagePullPolicy  IfNotPresent env  name  DB_USER value  gitlab name  DB_PASS value  passw0rd name  DB_NAME value  gitlab_production name  DB_EXTENSION value  pg_trgm ports  name  postgres containerPort  5432 volumeMounts  mountPath   var lib postgresql name  data livenessProbe  exec  command  pg_isready  h localhost  U postgres initialDelaySeconds  30 timeoutSeconds  5 readinessProbe  exec  command  pg_isready  h localhost  U postgres initialDelaySeconds  5 timeoutSeconds  1 volumes  name  data emptyDir     apiVersion  v1 kind  Service metadata  name  postgresql namespace  kube ops labels  name  postgresql spec  ports  name  postgres port  5432 targetPort  postgres selector  name  postgresql            Gitlab                  gitlab yaml  apiVersion  apps v1beta1 kind  Deployment metadata  name  gitlab namespace  kube ops labels  name  gitlab spec  template  metadata  name  gitlab labels  name  gitlab spec  containers  name  gitlab image  sameersbn gitlab 11 8 1 imagePullPolicy  IfNotPresent env  name  TZ value  Asia Shanghai name  GITLAB_TIMEZONE value  Beijing name  GITLABSECRETSDBKEYBASE value  long and random alpha numeric string name  GITLABSECRETSSECRETKEYBASE value  long and random alpha numeric string name  GITLABSECRETSOTPKEYBASE value  long and random alpha numeric string name  GITLABROOTPASSWORD value  admin321 name  GITLABROOTEMAIL value  517554016 qq com name  GITLAB_HOST value  git qikqiak com name  GITLAB_PORT value   80  name  GITLABSSHPORT value   22  name  GITLABNOTIFYONBROKENBUILDS value   true  name  GITLABNOTIFYPUSHER value   false  name  GITLABBACKUPSCHEDULE value  daily name  GITLABBACKUPTIME value  01 00 name  DB_TYPE value  postgres name  DB_HOST value  postgresql name  DB_PORT value   5432  name  DB_USER value  gitlab name  DB_PASS value  passw0rd name  DB_NAME value  gitlab_production name  REDIS_HOST value  redis name  REDIS_PORT value   6379  ports  name  http containerPort  80 name  ssh containerPort  22 volumeMounts  mountPath   home git data name  data livenessProbe  httpGet  path    port  80 initialDelaySeconds  180 timeoutSeconds  5 readinessProbe  httpGet  path    port  80 initialDelaySeconds  5 timeoutSeconds  1 volumes  name  data emptyDir     apiVersion  v1 kind  Service metadata  name  gitlab namespace  kube ops labels  name  gitlab spec  ports  name  http port  80 targetPort  http name  ssh port  22 targetPort  ssh selector  name  gitlab apiVersion  extensions v1beta1 kind  Ingress metadata  name  gitlab namespace  kube ops annotations  kubernetes io ingress class  traefik spec  rules  host  git qikqiak com http  paths  backend  serviceName  gitlab servicePort  http                            emptyDir        volume Pod                                            PV PVC    StorageClass          Redis   Postgresql                        Ingress          Gitlab       git qikqiak com                                      kubectl create  f gitlab redis yaml gitlab postgresql yaml gitlab yaml          Pod          kubectl pods  n kube ops NAME READY STATUS RESTARTS AGE gitlab 7d855554cb twh7c 1 1 Running 0 10m postgresql 8566bb959c 2tnvr 1 1 Running 0 17h redis 8446f57bdf 4v62p 1 1 Running 0 17h                       Ingress       git qikqiak com     DNS          etc hosts           Portal           root                GITLABROOTPASSWORD admin321           Gitlab                                                          Create project             Github                                SSH KEY           SSH            SSH           ssh idrsa pub       ssh rsa             ssh keygen      idrsa pub             SSH          Gitlab            ssh     22          ",
        "objectID": "post/Gitlab 在 Kubernetes 中的安装使用",
        "date": "2019-03-07T00:00:00.000Z",
        "tags": [
            "gitlab",
            "devops",
            "docker",
            "kubernetes",
            "redis"
        ],
        "keywords": [
            "helm",
            "devops",
            "docker",
            "kubernetes",
            "安装",
            "redis",
            "gitlab",
            "postgresql"
        ],
        "slug": "gitlab-install-on-k8s",
        "gitcomment": true,
        "notoc": true,
        "category": "kubernetes"
    },
    {
        "title": "GitOps - 在 Kubernetes 中进行 DevOps 的方式",
        "uri": "post/GitOps介绍",
        "content": "10      Humble Jez   Farley David  2010             Continuous Delivery  Reliable Software Releases Build  Test Deployment Automation        10                           Kubernetes                                                    GitOps                    GitOps    Why  What     How      GitOps  GitOps                    Git               Git                              Kubernetes                                YAML                 YAML           Kubernetes     Controller Schedulers CoreDNS Operator                                           GitHub                                                                 YAML          GitOps                          Git                Kubernetes             Flux    Flux    Kubernetes Operator           Kubernetes              GitOps    4          Git                       YAML           Kubernetes                          Kubernetes Operator           Git                  CD Pipeline                                          GitOps                      YAML                                                                              GitOps        GitOps  GitOps                                            GitOps                              YAML                              Prometheus                                              Istio sidecar                       GitOps                                                    GitOps                                  GitOps                             git     YAML                                                                  git                                                                                      GitOps                                                 git               K8S                     GitOps                            GitOps       GitOps               YAML             GitOps                         GitOps                    1     GitOps          GitOps              YAML       GitOps     GitOps Agent                2                GitOps Agent                                                                                   3                                               Prometheus    HTTP                 Pods                                         YAML                                         Pod Deployment Service Volume   ConfigMap   YAML             sealed secrets         Istio                            staging   1        3                                Pod           YAML                YAML                                                        Pod                                            OAM                                    OAM https   oam dev                                                                                           OAM       YAML                                 Kubernetes                      GitOps                                         GitOps                            Git        GitOps     YAML        Helm   Kustomize                        YAML               Helm                  Kustomize             YAML               YAML         Helm                                  Kustomize  Argo CD      GitOps                Agent   GitOps           Kubernetes      Flux        GitOps             Argo CD     Flagger       Flux                                                   GitOps                      CI CD     YAML        GitOps Agent                         GitOps                                                                                                                  GitOps                                                          Istio RBAC                                          https   itnext io continuous gitops the way to do devops in kubernetes 896b0ea1d0fb",
        "objectID": "post/GitOps介绍",
        "date": "2020-05-27T00:00:00.000Z",
        "tags": [
            "gitops",
            "kubernetes",
            "helm",
            "devops"
        ],
        "keywords": [
            "gitops",
            "kubernetes",
            "k8s",
            "helm",
            "devops",
            "流水线"
        ],
        "slug": "gitops-devops-on-k8s",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200527201355.png",
                "desc": "GitOps"
            }
        ],
        "category": "devops"
    },
    {
        "title": "Gloo 1.0 正式版发布",
        "uri": "post/Gloo1.0发布",
        "content": "Gloo       Envovy          API     Kubernetes Ingress        Kubernetes             Kubernetes    Gloo                Envovy                           Gloo                                  1 0            TCP    Gloo      HTTP       TCP                                          Web       Gloo      WAF     API                                    Gloo          Envoy         ModSecurity        Gloo                                          Envovy       Gloo                          JWT LDAP OAuth OIDC       Gloo                                                                                           Gloo                         Envoy Gloo            Data Loss Prevention              WebAssembly WebAssembly       Web          Gloo                        Envoy   Gloo    WebAssembly               Gloo                        Gloo                                            Gloo Web                                                    Ingress Controller        Gloo         Kubernetes               v1 16 2               glooctl                      Gloo                        curl  sL https   run solo io gloo install   sh   export PATH  HOME  gloo bin  PATH            GitHub release      glooctl                    PATH                          CLI             glooctl version Client    version   1 0 0   Server  version undefined  not find version gloo running                      Gloo                               Gloo Ingress Controller        gloo system           glooctl install ingress          master               Ingress Controller              dry run                 glooctl install ingress   dry run   gloo yaml   vi gloo yaml        apiVersion  v1 kind  Service metadata  labels  app  gloo gloo  ingress proxy installationId  4hxyhvE5MjAF2tm34Bmz name  ingress proxy namespace  gloo system spec  ports    port  80 protocol  TCP name  http   port  443 protocol  TCP name  https selector  gloo  ingress proxy type  LoadBalancer        apiVersion  apps v1 kind  Deployment metadata  labels  app  gloo gloo  ingress proxy installationId  4hxyhvE5MjAF2tm34Bmz name  ingress proxy namespace  gloo system spec  replicas  1 selector  matchLabels  gloo  ingress proxy template  metadata  labels  gloo  ingress proxy spec  tolerations  operator   Exists  nodeSelector  kubernetes io hostname  ydzs master containers         ports  containerPort  80 name  http hostPort  80 protocol  TCP containerPort  443 name  https hostPort  443 protocol  TCP                 ingress proxy     master              nodeSelector       ingress proxy          LoadBalancer                 Service         ingress proxy        hostPort                kubectl apply  f gloo yaml customresourcedefinition apiextensions k8s io settings gloo solo io created customresourcedefinition apiextensions k8s io gateways gateway solo io created customresourcedefinition apiextensions k8s io virtualservices gateway solo io created customresourcedefinition apiextensions k8s io routetables gateway solo io created customresourcedefinition apiextensions k8s io proxies gloo solo io created customresourcedefinition apiextensions k8s io upstreams gloo solo io created customresourcedefinition apiextensions k8s io upstreamgroups gloo solo io created customresourcedefinition apiextensions k8s io authconfigs enterprise gloo solo io created namespace gloo system created serviceaccount gloo created serviceaccount discovery created clusterrole rbac authorization k8s io gloo role ingress created clusterrolebinding rbac authorization k8s io gloo role binding ingress gloo system created configmap ingress envoy config created configmap gloo usage created service ingress proxy created service gloo created deployment apps gloo created deployment apps ingress created deployment apps ingress proxy created deployment apps discovery created unable recognize  gloo yaml   no matches kind  Gateway  version  gateway solo io v1  unable recognize  gloo yaml   no matches kind  Gateway  version  gateway solo io v1  unable recognize  gloo yaml   no matches kind  Settings  version  gloo solo io v1                                          apply           CRD                                 Helm          helm repo add gloo https   storage googleapis com solo public helm   helm fetch   untar true   untardir   gloo gloo   helm install gloo   namespace gloo system  f gloo values ingress yaml                  gloo system                         kubectl  n gloo system NAME READY STATUS RESTARTS AGE pod discovery 7f7dc9cb78 ftcd4 1 1 Running 0 9m31s pod gloo 654dbd7f58 x5njx 1 1 Running 0 9m32s pod ingress 86dcd7b99 x7trl 1 1 Running 0 9m31s pod ingress proxy 58cb9fd886 pz4nq 1 1 Running 0 21s NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE service gloo ClusterIP 10 103 174 129 9977 TCP 9988 TCP 9966 TCP 9m32s NAME READY UP TO DATE AVAILABLE AGE deployment apps discovery 1 1 1 1 9m32s deployment apps gloo 1 1 1 1 9m33s deployment apps ingress 1 1 1 1 9m32s deployment apps ingress proxy 1 1 1 1 9m32s NAME DESIRED CURRENT READY AGE replicaset apps discovery 7f7dc9cb78 1 1 1 9m32s replicaset apps gloo 654dbd7f58 1 1 1 9m33s replicaset apps ingre",
        "objectID": "post/Gloo1.0发布",
        "subtitle": "基于 Envoy 的 API 网关",
        "date": "2019-11-15T00:00:00.000Z",
        "tags": [
            "Envoy",
            "Gloo",
            "kubernetes"
        ],
        "keywords": [
            "Envoy",
            "Gloo",
            "kubernetes",
            "ingress"
        ],
        "slug": "gloo-1.0-release",
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/gloo-release.png",
                "desc": "Gloo V1.0 Release"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Go Modules 基本使用（视频）",
        "uri": "post/Go Modules详解",
        "content": "Go                                 GOPATH                  Go                                govendor dep glide                                  GOPATH                 Go1 11     Golang                  Go Modules    Golang                      Go Modules            Module     Go Modules            Golang     1 11    go version go version go1 11 4 darwin amd64     Go Modules          GOPATH                     GOPATH src                echo  GOPATH  Users ych devs projects go        Users ych devs projects                   pwd  Users ych devs projects   mkdir stardust    cd stardust   stardust                  stringsx       mkdir stringsx    cd stringsx    stringsx        string go      package stringsx import    fmt    func Hello name string  string  return fmt Sprintf  Hello   s   name   nil                                    Go Modules           export GO111MODULE on     GoModule       video mp4  https   vdn youdianzhishi com course 2019 7 13 go modules min mp4  poster  https   sdn haimaxy com covers 2019 5 25 5089dc263d514efa906259eae0b99317 png           Golang                    Go Module    pwd  Users ych devs projects stardust   go mod init github com cnych stardust go  creating new go mod  module github com cnych stardust             go mod init                    go mod                        module github com cnych stardust                                                                                Module                               Github      https   github com cnych stardust   git init   git add     git commit  am  add stringsx package content    git remote add origin git github com cnych stardust git   git push  u origin master                 Go Module                              go get          go github com cnych stardust            master                                                          BUG              master                                                      Go Moduels                   Module      Go Modules                                         Go Modules                                         https   semver org                                                           API                                                                                               Go Modules                tags                       v2           v1                                             Golang           tag                                 git tag                                         release                     git tag                           v1 0 0    git tag v1 0 0   git push   tags         Github           v1 0 0   tag                  v1                        BUG        master                git checkout  b v1   git push  u origin v1                                                                       pwd  Users ych devs projects   mkdir ch26 gomodules    cd ch26 gomodules     ch26 gomodules          main go      package main import    fmt   github com cnych stardust stringsx    func main     fmt Println stringsx Hello  cnych             github com cnych stardust stringsx               go get         GOPATH    vendor                    modules                          go mod init ch26 gomodules                  go mod     module ch26 gomodules                        go run main go go  finding github com cnych stardust v1 0 0 go  downloading github com cnych stardust v1 0 0 Hello  cnych                              go mod      module ch26 gomodules require github com cnych stardust v1 0 0                  go sum                 hash                     github com cnych stardust v1 0 0 h1 8EcmmpIoIxq2VrzXdkwUYTD4OcMnYlZuLgNntZ DxUE  github com cnych stardust v1 0 0 go mod h1 Qgo0xT9MhtGo0zz48gnmbT9XjO 9kuuWKIOIKVqAv28          GOPATH pkg mod         ls  GOPATH pkg mod github com cnych stardust v1 0 0                   v1 0 0     github com cnych stardust            bugfix                   Hello     bug                    func Hello name string  string  return fmt Sprintf  Hello   s      name            3      bugfix           v1         fix fix      merge   master                                       bug                      v1 0 1       git add     git commit  m  fix Hello function  123    git tag v1 0 1   git push   tags origin v1                      modules       Golang                                               Golang                                  go  u xxx                        v1 0 0   v1 0 1      go package version                  go mod               go mod tidy                                      go github com cnych stardust v1 0 1           go mod               module ch26 gomodules require github com cnych stardust v1 0 1             mod             ls  GOPATH pkg mod github com cnych stardust v1 0 0 stardust v1 0 1              Go Modules                                                                                Go Modules                                                    Go Modules                          Hello                func Hello name  lang string   string  error    switch lang   case  en   return fmt Sprintf  Hi   s    name   nil case  zh   retur",
        "objectID": "post/Go Modules详解",
        "subtitle": "Go 语言全新依赖管理系统 Go Modules",
        "date": "2019-07-16T00:00:00.000Z",
        "tags": [
            "golang",
            "modules"
        ],
        "slug": "go-modules-usage",
        "keywords": [
            "go",
            "golang",
            "模块",
            "govendor",
            "modules",
            "依赖"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1563247709-3f02e3aaaca7.jpeg",
                "desc": "https://unsplash.com/photos/FW6vnOnqUZQ/"
            }
        ],
        "category": "golang"
    },
    {
        "title": "Grafana 在 Kubernetes 中的使用",
        "uri": "post/Grafana 在 Kubernetes 中的使用",
        "content": "Prometheus     Kubernetes                     promQL               Prometheus   Dashboard                  Prometheus                                                   grafana     grafana                                             Graphite zabbix InfluxDB Prometheus OpenTSDB Elasticsearch          Prometheus                                                       grafana     Kubernetes               grafana   docker             dockerhub                           https   hub docker com r grafana grafana              grafana              docker run  d   name grafana  p 3000 3000 grafana grafana              Changelog  v5 1 0         Major restructuring container Usage chown removed File permissions incompatibility previous versions user id changed 104 472 group id changed 107 472 Runs grafana user default  instead root  default volumes removed        3  userid   groupid                                          Kubernetes    Pod  grafana yaml  apiVersion  extensions v1beta1 kind  Deployment metadata  name  grafana namespace  kube ops labels  app  grafana spec  revisionHistoryLimit  10 template  metadata  labels  app  grafana spec  containers  name  grafana image  grafana grafana 5 3 4 imagePullPolicy  IfNotPresent ports  containerPort  3000 name  grafana env  name  GFSECURITYADMIN_USER value  admin name  GFSECURITYADMIN_PASSWORD value  admin321 readinessProbe  failureThreshold  10 httpGet  path   api health port  3000 scheme  HTTP initialDelaySeconds  60 periodSeconds  10 successThreshold  1 timeoutSeconds  30 livenessProbe  failureThreshold  3 httpGet  path   api health port  3000 scheme  HTTP periodSeconds  10 successThreshold  1 timeoutSeconds  1 resources  limits  cpu  100m memory  256Mi requests  cpu  100m memory  256Mi volumeMounts  mountPath   var lib grafana subPath  grafana name  storage securityContext  fsGroup  472 runAsUser  472 volumes  name  storage persistentVolumeClaim  claimName  grafana           grafana grafana 5 3 4                             GFSECURITYADMINUSER GFSECURITYADMINPASSWORD      grafana               grafana   dashboard           var lib grafana                                       volume                Deployment                   Changelog   grafana   userid   groupid                  securityContext                    pvc                       pv   pvc       grafana volume yaml  apiVersion  v1 kind  PersistentVolume metadata  name  grafana spec  capacity  storage  1Gi accessModes  ReadWriteOnce persistentVolumeReclaimPolicy  Recycle nfs  server  10 151 30 57 path   data k8s apiVersion  v1 kind  PersistentVolumeClaim metadata  name  grafana namespace  kube ops spec  accessModes  ReadWriteOnce resources  requests  storage  1Gi             grafana                  Service        NodePort         ingress          grafana svc yaml  apiVersion  v1 kind  Service metadata  name  grafana namespace  kube ops labels  app  grafana spec  type  NodePort ports  port  3000 selector  app  grafana                      kubectl create  f grafana volume yaml persistentvolume  grafana  created persistentvolumeclaim  grafana  created   kubectl create  f grafana deploy yaml deployment extensions  grafana  created   kubectl create  f grafana svc yaml service  grafana  created              grafana     Pod         kubectl pods  n kube ops NAME READY STATUS RESTARTS AGE grafana 5f7b965b55 wxvvk 0 1 CrashLoopBackOff 1 22s             CrashLoopBackOff                 Pod        kubectl logs  f grafana 5f7b965b55 wxvvk  n kube ops GFPATHSDATA   var lib grafana  not writable  may issues file permissions  information here  http   docs grafana org installation docker  migration from a previous version of the docker container to 5 1 or later mkdir  cannot create directory   var lib grafana plugins   Permission denied          5 1                                                var lib grafana             5 1    groupid                 securityContext         var lib grafana    pvc                 grafana 472                                       Job                 grafana chown job yaml  apiVersion  batch v1 kind  Job metadata  name  grafana chown namespace  kube ops spec  template  spec  restartPolicy  containers  name  grafana chown command    chown     R    472 472     var lib grafana   image  busybox imagePullPolicy  IfNotPresent volumeMounts  name  storage subPath  grafana mountPath   var lib grafana volumes  name  storage persistentVolumeClaim  claimName  grafana          busybox     var lib grafana      472   user   group              volumeMounts   volumes        Deployment                  Deployment            kubectl delete  f grafana deploy yaml deployment extensions  grafana  deleted   kubectl create  f grafana deploy yaml deployment extensions  grafana  created   kubectl create  f grafana chown job yaml job batch  grafana chown  created                                 kubectl pod  n kube ops NAME READY STATUS RESTARTS AGE grafana 79477fbb7c 2mb84 1 1 Running 0 2m grafana chown k8zt7 0 1 Completed 0 2m             Completed  Pod             grafana       Pod     Job                     Completed      grafana   Po",
        "objectID": "post/Grafana 在 Kubernetes 中的使用",
        "date": "2018-11-17T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus",
            "grafana",
            "AlertManger"
        ],
        "slug": "grafana-usage-in-k8s",
        "keywords": [
            "kubernetes",
            "prometheus",
            "grafana",
            "AlertManger"
        ],
        "gitcomment": true,
        "bigimg": [],
        "notoc": true,
        "category": "kubernetes"
    },
    {
        "title": "Grafana 日志聚合工具 Loki",
        "uri": "post/Grafana 日志聚合工具 Loki",
        "content": "Loki  Grafana Labs                                                                                      Prometheus            Like Prometheus  logs      Prometheus                       Loki                                          Loki                      Prometheus                                            Kubernetes Pod        Pod                        Grafana       Loki    3       loki                   promtail                 loki   Grafana   UI        DockerHub     Loki Promtail  Docker                 docker compose                Loki            Clone        git clone https   github com grafana loki git    docs      cd loki docs   docs            yaml     docker compose yaml  version   3  networks  loki  services  loki  image  grafana loki master ports   3100 3100  volumes   PWD  etc loki command   config file  etc loki loki local config yaml networks  loki promtail  image  grafana promtail make images static 26a87c9 volumes   PWD  etc promtail  var log  var log command   config file  etc promtail promtail docker config yaml networks  loki grafana  image  grafana grafana master ports   3000 3000  environment  GFEXPLOREENABLED   true  networks  loki        docker compose         docker compose  d                    docker compose yaml                     docker compose ps Name Command State Ports docsgrafana1  run sh 0 0 0 0 3000  3000 tcp docsloki1  bin loki  config file  et     0 0 0 0 3100  3100 tcp  80 tcp docspromtail1  usr bin promtail  config                                     3000      grafana         admin admin                         Loki    Loki           http   loki 3100                 grafana      Explore      Loki           Log labels                                                 var log messages                                                                                                               app  mysql  name  mysql backup                                                      name   mysql      name   mysql        Prometheus             Loki            Loki                    Loki",
        "objectID": "post/Grafana 日志聚合工具 Loki",
        "date": "2018-12-14T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus",
            "grafana",
            "loki",
            "日志"
        ],
        "slug": "grafana-log-tool-loki",
        "keywords": [
            "kubernetes",
            "prometheus",
            "grafana",
            "loki",
            "日志"
        ],
        "gitcomment": true,
        "notoc": true,
        "bigimg": [],
        "category": "kubernetes"
    },
    {
        "title": "Groovy 简明教程",
        "uri": "post/Groovy简单教程",
        "content": "Jenkins Pipeline             Jenkins                                               Pipeline      Groovy               Pipeline                   Groovy         Groovy Groovy     JVM                Groovy   Java                   Java                 Java                     Groovy         Java                           Groovy       Java             https   groovy apache org          Groovy                               https   groovy apache org download html         Mac              Homebrew              brew install groovy             groovy           groovy  v Groovy Version  2 5 6 JVM  1 8 0_05 Vendor  Oracle Corporation OS  Mac OS X                 vscode      Groovy    hello groovy         class Example   static void main String   args          println       stdout                         println  Hello World  println  Hello World              Java                 Groovy                groovy              groovy hello groovy Hello World Hello World            Groovy                                                                                                                                           def employeename def student1 def student_name      def   Groovy                     class Example   static void main String   args    String x    Hello   println x   def _Name           println _Name   println  Hello World                 groovy hello groovy Hello      Hello World                      x        _Name           Groovy                   class Example   static void main String   args    String str    Hello          int x   5        long y   100L         float   10 56f     32     double b   10 5e40     64     char c    A         Boolean l   true            true false  println str   println x   println y   println a   println b   println c   println l                 groovy hello groovy Hello 5 100 10 56 1 05E41 true          def                                                    class Example   static void main String   args               int x   5  int X   6           println  x       x     X       X   println  x     x  X     X     println  x     x  X     X                   groovy hello groovy x   5 X   6 x   5 X   6 x     x  X     X            Groovy                                  Pipeline                         class Example   static void main String   args               int x   5  int X   6  println     x     x  X     X      println     x     x  X     X                    groovy hello groovy x   5 X   6 x     x  X     X       Groovy                                         Groovy                def                                               public private   protected                         public       class Example   static def PrintHello     println  This print hello function groovy      static int sum int a  int b  int c   10    int d   a b c  return d    static void main String   args    PrintHello    println sum 5  50                  groovy hello groovy print hello function groovy 65                               Jenkins Pipeline           Groovy                     if else     class Example   static void main String   args              int   2          a  100        println  The value greater 100                    groovy hello groovy value less 100                             Groovy                while for   for in       class Example   static void main String   args    int count   0  println  while         while count",
        "objectID": "post/Groovy简单教程",
        "date": "2019-05-13T00:00:00.000Z",
        "tags": [
            "Groovy",
            "java",
            "jenkins",
            "pipeline"
        ],
        "slug": "groovy-simple-tutorial",
        "keywords": [
            "Groovy",
            "java",
            "jenkins",
            "pipeline",
            "教程"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20190513212457.png",
                "desc": "https://unsplash.com/photos/CMfzpKWAFQ0"
            }
        ],
        "category": "devops"
    },
    {
        "title": "在 Kubernetes 在快速安装 Harbor",
        "uri": "post/Harbor 快速安装使用",
        "content": "Harbor                                Harbor     Harbor Harbor                          make install sh     docker compose       Harbor                         Harbor     Kubernetes           Harbor                                              Harbor                            make kubernetes k8s prepare                            YAML        python make kubernetes k8s prepare                                          make common templates          Harbor                                        Helm Harbor          Helm Chart                     Harbor Chart              git clone https   github com goharbor harbor helm                       1 0 0      cd harbor helm   git checkout 1 0 0    Helm Chart         values yaml                          expose                   ingress clusterIP nodePort            type  ingress tls       tls          ingress   tls      pull push                   https   github com goharbor harbor issues 5291  enabled  true           TLS             secret        secret        tls crt   tls key                               secretName        Notary                                              ingress         notarySecretName     common name               clusterIP    nodePort    secretName          commonName     ingress  hosts  core  core harbor domain notary  notary harbor domain annotations  ingress kubernetes io ssl redirect   true  nginx ingress kubernetes io ssl redirect   true  ingress kubernetes io proxy body size   0  nginx ingress kubernetes io proxy body size   0  clusterIP  ClusterIP       name  harbor ports  httpPort  80 httpsPort  443 Notary            notary enabled     true       notaryPort  4443 nodePort  NodePort      name  harbor ports  http  port  80 nodePort  30002 https  port  443 nodePort  30003 notary  port  4443 nodePort  30004 Harbor          URL       1     portal         docker helm    2        docker notary      token    URL    protocol   domain  port   1     expose type ingress  domain      expose ingress hosts core    2     expose type clusterIP  domain      expose clusterIP name    3     expose type nodePort  domain      k8s     IP              Harbor           URL externalURL  https   core harbor domain               k8s                 StorageClass                         storageClass       storageClass       existingClaim        docker     Helm charts          azure   gcs   s3   swift      oss       imageChartStorage         persistence  enabled  true     keep       helm          PVC      chart        PVC resourcePolicy   keep  persistentVolumeClaim  registry          PVC              existingClaim        storageClass          StorageClass                    storageClass     subPath     accessMode  ReadWriteOnce size  5Gi chartmuseum  existingClaim     storageClass     subPath     accessMode  ReadWriteOnce size  5Gi jobservice  existingClaim     storageClass     subPath     accessMode  ReadWriteOnce size  1Gi                         database  existingClaim     storageClass     subPath     accessMode  ReadWriteOnce size  1Gi         Redis               redis  existingClaim     storageClass     subPath     accessMode  ReadWriteOnce size  1Gi                  charts          https   github com docker distribution blob master docs configuration md storage imageChartStorage       chart                          minio s3                      disableredirect true          https   github com docker distribution blob master docs configuration md redirect disableredirect  false         filesystem    azure    gcs    s3    swift    oss                        pv        filesystem    type  filesystem filesystem  rootdirectory   storage  maxthreads  100 azure  accountname  accountname accountkey  base64encodedaccountkey container  containername  realm  core windows net gcs  bucket  bucketname base64 encoded json file contains key encodedkey  base64 encoded json key file  rootdirectory   gcs object name prefix  chunksize   5242880  s3  region  us west 1 bucket  bucketname  accesskey  awsaccesskey  secretkey  awssecretkey  regionendpoint  http   myobjects local  encrypt  false  keyid  mykeyid  secure  true  v4auth  true  chunksize   5242880   rootdirectory   s3 object name prefix  storageclass  STANDARD swift  authurl  https   storage myprovider com v3 auth username  username password  password container  containername  region  fr  tenant  tenantname  tenantid  tenantid  domain  domainname  domainid  domainid  trustid  trustid  insecureskipverify  false  chunksize  5M  prefix   secretkey  secretkey  accesskey  accesskey  authversion  3  endpointtype  public  tempurlcontainerkey  false  tempurlmethods  oss  accesskeyid  accesskeyid accesskeysecret  accesskeysecret region  regionname bucket  bucketname  endpoint  endpoint  internal  false  encrypt  false  secure  true  chunksize  10M  rootdirectory  rootdirectory imagePullPolicy  IfNotPresent logLevel  debug Harbor admin      Harbor       Portal       harborAdminPassword   Harbor12345          secret key      16      secretKey   not a secure key        ingress          Nginx      nginx  image  repository  goharbor nginx photon tag  v1 ",
        "objectID": "post/Harbor 快速安装使用",
        "subtitle": "使用 Helm 一键安装",
        "date": "2019-02-22T00:00:00.000Z",
        "tags": [
            "harbor",
            "docker",
            "kubernetes",
            "helm"
        ],
        "keywords": [
            "harbor",
            "docker",
            "kubernetes",
            "安装",
            "registry"
        ],
        "slug": "harbor-quick-install",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/sdmk1.jpg",
                "desc": "https://unsplash.com/photos/T-a8zcXigq4"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Harbor 源码浅析",
        "uri": "post/Harbor 源码分析",
        "content": "Harbor    CNCF               docker registry                    Harbor                            docker registry           registry                                               Helm                    Harbor release 1 7 0         Harbor          docker registry                               docker login pull push                                         docker registry v2             v2                                     docker registry v2           docker registry v2                                    docker login https   registry qikqiak com               1  docker client          docker login             engine api   RegistryLogin    2    RegistryLogin       http    registry      auth    3             v2             loginV2      loginV2         v2                   4              token             401         header                  5  registry client                                              header               6         header                                                         ldap          7              token    client         token     registry                  token               200  8  docker client        200                  Login Succeeded                                                             registry                           token     registry                      registry                      registry                                            auth  token  realm  token realm service  token service issuer  registry token issuer rootcertbundle   root certs bundle           realm                           Harbor              registry              https   docs docker com registry configuration           registry             token         registry         token     registry                           registry       token                         docker registry          token             distribution registry token token go            token    JWT JSON Web Token                   JWT   token       Harbor              docker registry v2         Harbor                            Harbor             registry             make common templates registry config yml                        auth  token  issuer  harbor token issuer realm   public_url service token rootcertbundle   etc registry root crt service  harbor registry                    auth token realm       registry v2                      publicurl service token    publicurl   Harbor                       service token         Harbor     beego    web                     service token                             src core router go          func initRouters            beego Router   service token    token Handler                       src core service token go         Get              func  h  Handler  Get     request    h Ctx Request log Debugf  URL token request   s   request URL String    service    h GetString  service   tokenCreator  ok    creatorMap service   ok   errMsg    fmt Sprintf  Unable handle service   s   service  log Errorf errMsg  h CustomAbort http StatusBadRequest  errMsg    token  err    tokenCreator Create request  err    nil   _  ok    err   unauthorizedError   ok   h CustomAbort http StatusUnauthorized        log Errorf  Unexpected error when creating token  error   v   err  h CustomAbort http StatusInternalServerError        h Data  json     token h ServeJSON               service       tokenCreator      Create      token       func  g generalCreator  Create r http Request   models Token  error    var err error scopes    parseScopes r URL  log Debugf  scopes   v   scopes  ctx  err    filter GetSecurityContext r  err    nil   return nil  fmt Errorf  failed security context request     pm  err    filter GetProjectManager r  err    nil   return nil  fmt Errorf  failed project manager request        docker login  ctx IsAuthenticated     len scopes     0   return nil   unauthorizedError       access    GetResourceActions scopes  err   filterAccess access  ctx  pm  g filterMap  err    nil   return nil  err   return MakeToken ctx GetUsername    g service  access                              token            Token          type Token struct   Token string json  token  ExpiresIn int json  expires_in  IssuedAt string json  issued_at      JWT     token             docker registry v2           token      Harbor API     Harbor                                Harbor           Dashboard            Helm Chart              src core router go    func initRouters        standalone  config WithAdmiral        Controller API  beego Router   c login    controllers CommonController     post Login   beego Router   c log_out    controllers CommonController     get LogOut   beego Router   c reset    controllers CommonController     post ResetPassword   beego Router   c userExists    controllers CommonController     post UserExists   beego Router   c sendEmail    controllers CommonController     get SendResetEmail      API  beego Router   api projects  pid  0 9    members   pmid  0 9       api ProjectMemberAPI    beego Router   api projects     api ProjectAPI     head Head   beego Router   api projects  id  0 9       api ProjectAPI    beego Router   api u",
        "objectID": "post/Harbor 源码分析",
        "date": "2019-02-20T00:00:00.000Z",
        "tags": [
            "harbor",
            "docker",
            "kubernetes"
        ],
        "keywords": [
            "harbor",
            "docker",
            "kubernetes",
            "源码",
            "registry"
        ],
        "slug": "harbor-code-analysis",
        "gitcomment": true,
        "notoc": true,
        "category": "kubernetes"
    },
    {
        "title": "Helm Chart 模板开发技巧",
        "uri": "post/Helm Chart 模板开发技巧",
        "content": "Helm Chart                          Helm Chart                        Helm Chart               Chart                      Helm   Go Template           Go                              Sprig                         env expandenv     Chart          Tiller                       include required include                                               mytpl                         value     include  mytpl      lower   quote    required                                                  Values who                         value    required  A valid  Values who entry required    Values who                                                          name      Values MyName   quote                                  Kubernetes          port      Values Port       include    Go          template                                 Go                             Helm       include       include  toYaml   value   indent 2           toYaml         value                  indent       YAML                                                       tpl    tpl                                        Chart                  tpl TEMPLATE_STRING VALUES        values template       Values name     name   Tom  template    tpl  Values template      output Tom           external configuration file conf app conf firstName     Values firstName    lastName     Values lastName    values firstName  Peter lastName  Parker template    tpl   Files Get  conf app conf        output firstName Peter lastName Parker    imagePullSecret imagePullSecret    registry                                base64                                       values yaml       imageCredentials  registry  quay io username  someone password  sillyness                    define  imagePullSecret         printf     auths        s       auth       s        Values imageCredentials registry  printf   s  s   Values imageCredentials username  Values imageCredentials password   b64enc    b64enc        end           Secret                    apiVersion  v1 kind  Secret metadata  name  myregistrykey type  kubernetes io dockerconfigjson data   dockerconfigjson     template  imagePullSecret       ConfigMap    Secret         ConfigMap    Secret                      helm upgrade                                                                 sha256sum                      annotations     kind  Deployment spec  template  metadata  annotations  checksum config     include  print   Template BasePath   configmap yaml       sha256sum                     helm upgrade   recreate pods                   Tiller               helm delete              Chart                 annotation            kind  Secret metadata  annotations   helm sh resource policy   keep                   helm sh resource policy   keep   annotation      Tiller       realease                                   Helm                               realese     helm install   replace               Partials           Chart                                                  templates                           Kubernetes                       helpers tpl              Chart     Chart        Chart                          Chart                         Chart           Chart     Chart                                      Chart     charts                           SAP OpenStack Chart    Chart      Kubernetes         OpenStack IaaS       Charts       Github     openstack helm Deis Workflow    Chart       Chart      Deis PaaS        SAP Chart            Chart             Git            requirements yaml         Chart         CI CD pipeline          Workflow     Chart        Helm                YAML   JSON        YAML     YAML   JSON               JSON     YAML                      JSON                      YAML                      YAML        JSON                          Helm                                                                                                       helm upgrade   install   values      https   github com technosophos k8s helm blob master docs chartstipsand_tricks md https   github com sapcc helm charts https   github com deis workflow tree master charts workflow https   godoc org text template https   godoc org github com Masterminds sprig",
        "objectID": "post/Helm Chart 模板开发技巧",
        "date": "2019-04-29T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "helm",
            "golang"
        ],
        "keywords": [
            "kubernetes",
            "helm",
            "chart",
            "template",
            "golang",
            "模板"
        ],
        "slug": "helm-chart-tips-and-tricks",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/bxf3k.jpeg",
                "desc": "https://unsplash.com/photos/gfaxAiOgxSc"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Helm Hooks 的使用",
        "uri": "post/Helm Hooks 的使用",
        "content": "Kubernetes        Helm     Hook        chart       release                           Hooks                    chart             ConfigMap   Secret      chart                                     release              release                  Hooks                           Helm             Hook         metadata     annotations          apiVersion      kind       metadata  annotations   helm sh hook    pre install                    Helm Hooks            Hooks   Helm                 Hooks     pre install        kubernetes               post install     kubernetes               pre delete    kubernetes                   post delete      release           pre upgrade                        post upgrade               pre rollback                       post rollback                crd install             CRD         chart             CRD          Hooks         release                                chart                    helm install foo chart         Tiller Server          Tiller Server    foo    Tiller           kubernetes    Tiller   release            Helm     Helm               install             hook pre install post install          chart                     helm install foo chart         Tiller Server          Tiller Server    foo    Tiller   hook       kubernetes       pre install hook Tiller        hook            0       hook        Tiller           hook Tiller       hook      Tiller           kubernetes   Tiller   post install hook Tiller       hook      Tiller   release               Helm          hook                   hook         Job       Tiller     Job                       Helm                          kubernetes                                hook                                hook           release                Tiller Server     hook                              hook              helm delete         hook                         pre delete  post delete    hook               helm sh hook delete policy   annotation     hook            hook         hook                                Values Chart Release                            metadata            annotation               hook        templates         post install job yaml                hook  apiVersion  batch v1 kind  Job metadata  name      Release Name    post install job lables  release      Release Name    chart      Chart Name    version      Chart Version    annotations                        Job     release      helm sh hook   post install  helm sh hook weight     5   helm sh hook delete policy   hook succeeded spec  template  metadata  name      Release Name    labels  release      Release Name    chart      Chart Name    version      Chart Version    spec  restartPolicy  containers  name  post install job image  alpine command     bin sleep       default  10   Values sleepTime          Job           annotations                                   release         annotations   helm sh hook   post install                    hook            post upgrade     annotations   helm sh hook   post install post upgrade             hook                                                    annotations   helm sh hook weight     5             hook        annotations   helm sh hook delete policy   hook succeeded                  hook succeeded    Tiller   hook         hook    hook failed      hook          Tiller      hook    before hook creation         hook           hook   helm   release         hook                  helm                   already exists           helm sh hook delete policy    before hook creation      helm sh hook delete policy    hook succeeded hook failed                    hook         kubernetes                          hook       kubernetes        helm release                     helm sh hook delete policy    before hook creation    hook            hook        hook       Tiller     release    hook        hook",
        "objectID": "post/Helm Hooks 的使用",
        "date": "2018-10-07T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "helm"
        ],
        "slug": "helm-hooks-usage",
        "keywords": [
            "kubernetes",
            "helm",
            "hook"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1538672074509-c5653fa3ee30.jpeg",
                "desc": "Antônio Prado"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Helm monitor 插件(附视频)",
        "uri": "post/helm monitor",
        "content": "Helm         Kubernetes                                                        kubectl rollout                            Helm     Helm monitro      Prometheus   ElasticSearch                     release  Helm       helm        release    helm upgrade my release company repo common chart           helm rollback my release    Helm       helm plugin install https   github com repo name                       helm foo   help Helm           Helm monitor    Helm monitor        release           Helm monitor       helm plugin install https   github com ContainerSolutions helm monitor           helm monitor   help command monitor release querying Prometheus Elasticsearch given interval care rolling back previous version query return non empty result  Usage  monitor  command  Available Commands  elasticsearch query elasticsearch server help Help command prometheus query prometheus server      5    5xx     0          helm monitor prometheus     prometheus http   prometheus   my release    rate httprequeststotal code    5      5m     0        prometheus     prometheus server           http   localhost 9090     ElasticSearch  Lucene Query      500               helm monitor elasticsearch     elasticsearch http   elasticsearch 9200   my release    status 500 kubernetes labels app app version 2 0 0          elasticsearch     Elasticsearch              http   localhost 9200              DSL          helm monitor elasticsearch my release   elasticsearch query json      Prometheus   Elasticsearch                 Sentry    helm monitor sentry my app     api key     organization sentry     project my project     sentry http   sentry 9000     tag release 2 0 0     regexp  Error database connection    Demo     asciinema src   files 157939 json  cols  145  rows  45      Helm monitor      https   github com ContainerSolutions helm monitor",
        "objectID": "post/helm monitor",
        "subtitle": "Helm release 基于日志或监控的自动回滚",
        "date": "2019-01-22T00:00:00.000Z",
        "tags": [
            "helm",
            "prometheus",
            "elasticsearch"
        ],
        "keywords": [
            "kubernetes",
            "helm",
            "prometheus",
            "elasticsearch",
            "回滚"
        ],
        "slug": "helm-monitor-plugin",
        "gitcomment": true,
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes Helm 初体验",
        "uri": "post/helm 初体验",
        "content": "Helm                                                                                                                                                  kubernetes                yaml                                               yum                        Helm    kubernetes    yum             Kubernetes          Helm             chart chart     tgz       chart   chart           chart  Kubernetes         chart    Helm    chart            Helm          chart      Kubernetes             config             release     chart             Helm   Helm            Helm Client                      chart           Tiller sever           chart    release                release Tiller Server      Kubernetes      server    Helm client Kubernetes API server      Tiller server              Helm client        chart               chart  Kubernetes               Kubernetes        chart      client    charts   server      release         Helm Realese               2 7 2            helm    usr local bin        Helm                         Helm                   Tiller    helm version Client   version Version SemVer  v2 7 2   GitCommit  8478fb4fc723885b155c924d1c8c410b7a9444e6   GitTreeState  clean   Error  cannot connect Tiller     Helm               kubectl        kubectl          kubernetes    apiserver                       helm init    Helm     gcr io                                          helm init   upgrade   tiller image cnych tiller v2 7 2                                   E0125 14 03 19 093131 56246 portforward go 331  error occurred forwarding 55943    44134  error forwarding port 44134 pod d01941068c9dfea1c9e46127578994d1cf8bc34c971ff109dc6faa4c05043a6e  uid   unable port forwarding  socat not found  2018 01 25 14 03 19  0xc420476210   0xc4203ae1e0  Stream removed  broadcasting  3 2018 01 25 14 03 19  0xc4203ae1e0   3  Writing data frame 2018 01 25 14 03 19  0xc420476210   0xc4200c3900  Create stream 2018 01 25 14 03 19  0xc420476210   0xc4200c3900  Stream added  broadcasting  5 Error  cannot connect Tiller            socat       sudo yum install  y socat Helm            Tiller      kubernetes   kube system         kubectl pod  n kube system  l app helm NAME READY STATUS RESTARTS AGE tiller deploy 546cf9696c wq5nl 1 1 Running 0 57m         Helm          Client   version Version SemVer  v2 7 2   GitCommit  8478fb4fc723885b155c924d1c8c410b7a9444e6   GitTreeState  clean   Server   version Version SemVer  v2 7 2   GitCommit  8478fb4fc723885b155c924d1c8c410b7a9444e6   GitTreeState  clean               RBAC     kubernetes    1 8 x         RBAC            Tiller    ServiceAccount                    Helm     Role based Access Control    rbac yaml    apiVersion  v1 kind  ServiceAccount metadata  name  tiller namespace  kube system apiVersion  rbac authorization k8s io v1beta1 kind  ClusterRoleBinding metadata  name  tiller roleRef  apiGroup  rbac authorization k8s io kind  ClusterRole name  cluster admin subjects  kind  ServiceAccount name  tiller namespace  kube system     kubectl      kubectl create  f rbac config yaml serviceaccount  tiller  created clusterrolebinding  tiller  created    tiller  ServceAccount            Tiller                    ServiceAccount           Tiller      ServiceAccount        kubectl patch deploy   namespace kube system tiller deploy  p    spec    template    spec    serviceAccount   tiller                           Helm         Error  no available release name found           Helm                                           Chart    helm create hello helm Creating hello helm   tree hello helm hello helm     Chart yaml     charts     templates       NOTES txt       _helpers tpl       deployment yaml       ingress yaml       service yaml     values yaml 2 directories  7 files       templates     deployment yaml            Chart     nginx                         Helm                        Chart     helm install   hello helm NAME  kilted bobcat LAST DEPLOYED  Thu Jan 25 16 57 46 2018 NAMESPACE  default 2018 01 25 16 57 47  0xc4207d8140   7  Writing data frame STATUS  DEPLOYED RESOURCES    v1 Service NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE kilted bobcat hello helm ClusterIP 10 254 43 90 80 TCP 1s   v1beta1 Deployment NAME DESIRED CURRENT UP TO DATE AVAILABLE AGE kilted bobcat hello helm 1 1 1 0 1s   v1 Pod related  NAME READY STATUS RESTARTS AGE kilted bobcat hello helm 789946b9b xslrm 0 1 ContainerCreating 0 1s NOTES  application URL running commands  export POD_NAME   kubectl pods   namespace default  l  app hello helm release kilted bobcat   o jsonpath    items 0  metadata name    echo  Visit http   127 0 0 1 8080 use application  kubectl port forward  POD_NAME 8080 80                    export POD_NAME   kubectl pods   namespace default  l  app hello helm release kilted bobcat   o jsonpath    items 0  metadata name      kubectl port forward  POD_NAME 8080 80          http   127 0 0 1 8080                nginx        release    helm list NAME REVISION UPDATED STATUS CHART NAMESPACE kilted bobcat 1 Thu Jan 25 16 57 46 2018 DEPLOYED hello helm 0 1 0 default   chart    helm package hello helm Successfully packaged",
        "objectID": "post/helm 初体验",
        "date": "2018-01-25T00:00:00.000Z",
        "publishdate": "2017-01-25T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "helm"
        ],
        "slug": "first-use-helm-on-kubernetes",
        "keywords": [
            "kubernetes",
            "helm",
            "用法"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/Hxev8VTsTuOJ27thHQdK_DSC_0068.jpeg",
                "desc": "Mouth of the cave"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Helm 命名模板的使用",
        "uri": "post/Helm 命名模板的使用",
        "content": "Helm                                                                                                  Helm         Helm       Helm       Helm         Values Helm            Helm                                                                                                                     chart                                                                    chart      define  mychart labels    define                  chart           chart                          define                                       define  ChartName TplName               end                         label         define  mychart labels     labels  from  helm date       htmlDate        end                     ConfigMap       template                     define  mychart labels     labels  from  helm date       htmlDate        end    apiVersion  v1 kind  ConfigMap metadata  name      Release Name    configmap     template  mychart labels     data      range  key   value     Values course        key         value   quote        end                            helm install   dry run   debug    debug  Created tunnel using local port   42058         Source  mychart templates configmap yaml apiVersion  v1 kind  ConfigMap metadata  name  ardent bunny configmap labels  from  helm date  2018 09 22 data  k8s   devops  python   django        define              template                                                      chart      templates            helpers tpl             templates       NOTES txt                        kubernetes                                      chart            Helm   partials                        partials        _helpers tpl                        templates _helpers tpl                  labels             define  mychart labels     labels  from  helm date       htmlDate        end                                                                           templates configmap yaml              template                   mychart lables                                 DEBUG                                                                  chart                     labels             define  mychart labels     labels  from  helm date       htmlDate    chart      Chart Name    version      Chart Version        end                                       helm install   dry run   debug    debug  Created tunnel using local port   42058         Source  mychart templates configmap yaml apiVersion  v1 kind  ConfigMap metadata  name  peeking zorse configmap labels  from  helm date  2018 09 22 chart  version  data  k8s   devops  python   django  chart                                                   template                                            Chart                    template              apiVersion  v1 kind  ConfigMap metadata  name      Release Name    configmap     template  mychart labels       data      range  key   value     Values course        key         value   quote        end        template                                     Values                                 helm install   dry run   debug    debug  Created tunnel using local port   32768         Source  mychart templates configmap yaml apiVersion  v1 kind  ConfigMap metadata  name  oldfashioned mule configmap labels  from  helm date  2018 09 22 chart  mychart version  0 1 0 data  k8s   devops  python   django         chart                     include                  labels           _helpers tpl                 labels             define  mychart labels     from  helm date       htmlDate    chart      Chart Name    version      Chart Version        end                  configmap       labels     data     apiVersion  v1 kind  ConfigMap metadata  name      Release Name    configmap labels      template  mychart labels       data      range  key   value     Values course        key         value   quote        end        template  mychart labels                        helm install   dry run   debug    debug  Created tunnel using local port   42652         Error  YAML parse error mychart templates configmap yaml  error converting YAML JSON  yaml  line 9  mapping values not allowed context Source  mychart templates configmap yaml apiVersion  v1 kind  ConfigMap metadata  name  altered wombat configmap labels  from  helm date  2018 09 22 chart  mychart version  0 1 0 data  k8s   devops  python   django  from  helm date  2018 09 22 chart  mychart version  0 1 0                         YAML          template                                                                                      Source  mychart templates configmap yaml apiVersion  v1 kind  ConfigMap metadata  name  mortal cricket configmap labels  from  helm date  2018 09 22 chart  mychart version  0 1 0 data  k8s   devops  python   django  from  helm date  2018 09 22 chart  mychart version  0 1 0        data                    labels                        labels                                                   data                        Helm             template      include               indent                      include    apiVersion  v1 kind  ConfigMap metadata  name      Release Name    configmap labels",
        "objectID": "post/Helm 命名模板的使用",
        "subtitle": "Kubernetes 包管理工具 Helm 命名模板的使用",
        "date": "2018-09-23T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "helm"
        ],
        "slug": "helm-name-template-usage",
        "keywords": [
            "kubernetes",
            "helm",
            "模板"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1537529380282-810ebbe8c9b1.jpg",
                "desc": "Moraine Lake"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Helm 的基本使用",
        "uri": "post/Helm 的基本使用",
        "content": "Helm         Tiller Server                  Helm Chart                 Helm                 Helm   Repo     Docker Registry      Chart              Chart            Helm            google                                        Chart       helm repo list              helm repo list NAME URL stable https   kubernetes charts storage googleapis com  local http   127 0 0 1 8879 charts               stable             local                               Chart           Chart           index yaml            Chart   HTTP                  Chart             Chart                                  Chart                  OSS Github Pages                                        Github Pages                        https   github com cnych kube charts mirror             Helm                        helm repo remove stable  stable  removed repositories   helm repo add stable https   cnych github io kube charts mirror   stable  added repositories   helm repo list NAME URL stable https   cnych github io kube charts mirror  local http   127 0 0 1 8879 charts   helm repo update Hang tight grab latest chart repositories       Skip local chart repository    Successfully update  stable  chart repository Update Complete    Happy Helming                update                         web        Helm Chart                              Chart               index yaml                   yaml           text yaml   text x yaml       web                      Helm Chart            chart Helm   Charts      Kubernetes                  Release       Chart                                  stable                       helm search          Charts         helm search NAME CHART VERSION APP VERSION DESCRIPTION     stable minio 1 6 3 RELEASE 2018 08 25T01 56 38Z Minio high performance distributed object storage se    stable mission control 0 4 2 3 1 2 Helm chart JFrog Mission Control stable mongodb 4 2 2 4 0 2 NoSQL document oriented database stores JSON like do    stable mongodb replicaset 3 5 6 3 6 NoSQL document oriented database stores JSON like do        stable zetcd 0 1 9 0 0 3 CoreOS zetcd Helm chart Kubernetes                helm search         charts                             helm search mysql NAME CHART VERSION APP VERSION DESCRIPTION     stable mysql 0 10 1 5 7 14 Fast  reliable  scalable  easy use open source rel    stable mysqldump 0 1 0 5 7 21 Helm chart help backup MySQL databases using mysqldump stable prometheus mysql exporter 0 1 0 v0 10 0 Helm chart prometheus stable mariadb 4 4 0 10 1 35 Fast  reliable  scalable  easy use open source rel                   charts              inspect         chart          helm inspect stable mysql appVersion  5 7 14 description  Fast  reliable  scalable  easy use open source relational database system  engine  gotpl home  https   www mysql com  icon  https   www mysql com common logos logo mysql 170x115 png keywords  mysql database sql maintainers  email  o with sportradar com name  olemarkus email  viglesias google com name  viglesiasce name  mysql sources  https   github com kubernetes charts https   github com docker library mysql version  0 10 1 mysql image version ref  https   hub docker com r library mysql tags  image   mysql  imageTag   5 7 14         inspect          chart                            helm search             chart            helm install              chart               helm install                     chart          helm install stable mysql NAME  mewing squid LAST DEPLOYED  Tue Sep 4 23 31 23 2018 NAMESPACE  default STATUS  DEPLOYED RESOURCES    v1 PersistentVolumeClaim NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE mewing squid mysql Pending 1s   v1 Service NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE mewing squid mysql ClusterIP 10 108 197 48 3306 TCP 1s   v1beta1 Deployment NAME DESIRED CURRENT UP TO DATE AVAILABLE AGE mewing squid mysql 1 0 0 0 1s   v1 Pod related  NAME READY STATUS RESTARTS AGE mewing squid mysql 69f587bdf9 z7glv 0 1 Pending 0 0s   v1 Secret NAME TYPE DATA AGE mewing squid mysql Opaque 2 1s   v1 ConfigMap NAME DATA AGE mewing squid mysql test 1 1s NOTES  MySQL accessed via port 3306 following DNS name within cluster  mewing squid mysql default svc cluster local root password run  MYSQLROOTPASSWORD   kubectl secret   namespace default mewing squid mysql  o jsonpath    data mysql root password     base64   decode  echo  connect database  Run Ubuntu pod use client  kubectl run  i   tty ubuntu   image ubuntu 16 04   restart Never    bash  il Install mysql client    apt get update    apt get install mysql client  y Connect using mysql cli  provide password    mysql  h mewing squid mysql  p connect database directly outside K8s cluster  MYSQL_HOST 127 0 0 1 MYSQL_PORT 3306 Execute following command route connection  kubectl port forward svc mewing squid mysql 3306 mysql  h   MYSQLHOST   P  MYSQLPORT   u root  p  MYSQLROOTPASSWORD     mysql chart           chart        release        release      hmewing squid            release          name             helm install stable mysql   name mydb        helm                     release                         mysql      ",
        "objectID": "post/Helm 的基本使用",
        "date": "2018-09-04T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "helm"
        ],
        "slug": "kubernetes-helm-usage",
        "keywords": [
            "kubernetes",
            "helm",
            "用法"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1535807485722-6810baaaf271.jpeg",
                "desc": "nostalgia"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes HPA 使用详解",
        "uri": "post/HPA详解",
        "content": "kubectl scale         Pod                                                                 Kubernetes                  Horizontal Pod Autoscaling Pod           HPA HPA                  Pod                  Pod          HPA                   kubectl autoscale         HPA      HPA Controller  30s         kube controller manager    horizontal pod autoscaler sync period                   Pod                                     Metrics Server   HPA              Heapster    CPU         HPA v2         Metrcis Server   Metrics Server         Kubernetes API              Metrics Server                 Kubernetes API                  https   10 96 0 1 apis metrics k8s io v1beta1 namespaces  pods             API               Pod                  kubelet   Summary API                           API                 Metrics Server    APIServer           Kubernetes     Aggregator               APIServer           API Aggregator                          Kubernetes   APIServer                 APIServer     API       API               Kubernetes         Kubernetes   Aggregator    Service                Service                           API                  API            API      API    kubernetes           API                 API                                   API    API                           APIServer            API    Kubernetes                                                                   HPA           Metrics Server        Metrics Server       Aggregator    Metrics Server                        Kubeadm                                  kube apsierver              requestheader client ca file    requestheader allowed names aggregator   requestheader extra headers prefix X Remote Extra    requestheader group headers X Remote Group   requestheader username headers X Remote User   proxy client cert file    proxy client key file     kube proxy     APIServer                       kube apsierver        enable aggregator routing true                        https   github com kubernetes sigs apiserver builder alpha blob master docs concepts auth md  Aggregator                 Metrics Server                         git clone https   github com kubernetes incubator metrics server   cd metrics server   kubectl apply  f deploy 1 8            metrcis server deploy 1 8  metrics server deployment yaml         containers  name  metrics server image  gcr azk8s cn google_containers metrics server amd64 v0 3 6             Pod           kubectl pods  n kube system  l k8s app metrics server NAME READY STATUS RESTARTS AGE metrics server 6886856d7c g5k6q 1 1 Running 0 2m39s   kubectl logs  f metrics server 6886856d7c g5k6q  n kube system        E1119 09 05 57 234312 1 manager go 111  unable fully collect metrics   unable fully scrape metrics source kubeletsummary ydzs node1  unable fetch metrics Kubelet ydzs node1  ydzs node1   https   ydzs node1 10250 stats summary onlycpuandmemory true  dial tcp  lookup ydzs node1 10 96 0 10 53  no host  unable fully scrape metrics source kubeletsummary ydzs node4  unable fetch metrics Kubelet ydzs node4  ydzs node4   https   ydzs node4 10250 stats summary onlycpuandmemory true  dial tcp  lookup ydzs node4 10 96 0 10 53  no host  unable fully scrape metrics source kubeletsummary ydzs node3  unable fetch metrics Kubelet ydzs node3  ydzs node3   https   ydzs node3 10250 stats summary onlycpuandmemory true  dial tcp  lookup ydzs node3 10 96 0 10 53  no host  unable fully scrape metrics source kubeletsummary ydzs master  unable fetch metrics Kubelet ydzs master  ydzs master   https   ydzs master 10250 stats summary onlycpuandmemory true  dial tcp  lookup ydzs master 10 96 0 10 53  no host  unable fully scrape metrics source kubeletsummary ydzs node2  unable fetch metrics Kubelet ydzs node2  ydzs node2   https   ydzs node2 10250 stats summary onlycpuandmemory true  dial tcp  lookup ydzs node2 10 96 0 10 53  no host         Pod            xxx  no host                    DNS                Metrics Server     kubelet   10250             hostname                etc hosts          hostname   ip            Metrics Server   Pod         hosts            hostname                                DNS         hostname                   CoreDNS           CoreDNS   Configmap        hosts       kubectl edit configmap coredns  n kube system apiVersion  v1 data  Corefile      53   errors health hosts           hosts     10 151 30 11 ydzs master 10 151 30 57 ydzs node3 10 151 30 59 ydzs node4 10 151 30 22 ydzs node1 10 151 30 23 ydzs node2 fallthrough   kubernetes cluster local in addr arpa ip6 arpa   pods insecure upstream fallthrough in addr arpa ip6 arpa   prometheus  9153 proxy    etc resolv conf cache 30 reload   kind  ConfigMap metadata  creationTimestamp  2019 05 18T11 07 46Z name  coredns namespace  kube system               hostname              ip             metrics server          kubelet preferred address types        args    cert dir  tmp   secure port 4443   kubelet preferred address types InternalIP                       kubectl pods  n kube system  l k8s app metrics server NAME READY STATUS RESTARTS AGE metrics server 6dcfdf",
        "objectID": "post/HPA详解",
        "date": "2020-04-07T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "hpa",
            "prometheus"
        ],
        "slug": "k8s-hpa-usage",
        "keywords": [
            "kubernetes",
            "hpa",
            "prometheus",
            "cpu",
            "内存",
            "自定义"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200407200508.png",
                "desc": "Freediver blowing bubble rings in the deep."
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "利用 Hugo Pipes 处理资源文件",
        "uri": "post/hugo pipes使用",
        "content": "Hugo                               Hugo                                                                                                       CSS      JS                                        CSS    JS          webpack gulp                                       webpack config js        webpack                                      webpack       Hugo             Hugo Pipes                      Hugo Pipes            Asset     Asset         asset           assets               asetDir                     Hugo Pipes          resources Get                 asset                      style    recourses Get  sass main scss        Asset       hugo            Permalink   RelPermalink assets           public                    Hugo Pipes      Go                     scss       css          style    resources Get  sass main scss    resources ToCSS   resources Minify   resources Fingerprint      recources Fingerprint                    SRI                 hash                            4  CSS      bootstrap css main css search css reward css     4               assets css      partials          css assets html              bootcss    resources Get  css bootstrap css           maincss    resources Get  css main css           searchcss    resources Get  css search css           indexScratch     Scratch          indexScratch Add  cssassets   slice  bootcss  maincss  searchcss          Site Params reward         rewardcss    resources Get  css reward css           indexScratch Add  cssassets   slice  rewardcss         end        range  Site Params customCSSAssets          indexScratch Add  cssassets   slice  resources Get             end          appcss     indexScratch Get  cssassets    resources Concat  css bundle css    resources Minify   resources Fingerprint          Scratch Set  appcss   appcss RelPermalink          Scratch Set  appcssintegrity   appcss Data Integrity              Scratch                           Add Get Set                https   gohugo io functions scratch           Scratch    Assets                Go                         Scratch Set       CSS                         Scratch Get                      partials head html                 partial  css assets html                  Hugo Pipes                hugo           public css        bundle min 8db0ca8922d045902af41f7c49c511fb32ec40827c92aeff990760820f2a475c css                        CSS                                              Hugo Pipes     CSS                                           JS",
        "objectID": "post/hugo pipes使用",
        "date": "2019-04-17T00:00:00.000Z",
        "tags": [
            "Hugo",
            "Pipes",
            "webpack"
        ],
        "slug": "hugo-pipes-process-assets",
        "keywords": [
            "Hugo",
            "Pipes",
            "压缩",
            "合并",
            "静态资源"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/3m6hw.jpg",
                "desc": "https://unsplash.com/photos/C87vfR6C_aE"
            }
        ],
        "category": "hugo"
    },
    {
        "title": "在 Hugo 文章中添加 Adsense 广告单元",
        "uri": "post/hugo文章中添加adsense广告",
        "content": "Google Adsense                         Hugo    markdown                  layouts _default single html           Content                        Adsense                                                              Hugo                               partial                  layouts partials adsense inarticle html                 adsbygoogle   window adsbygoogle        push                        Site Params Adsense client  Site Params Adsense inArticleSlot            Google AdSense             data ad client data ad slot     config toml         params adsense            params adsense  client    ca pub 12345  inArticleSlot    12345          markdown                                   Adsense             hugo          partial          Adsense           first paragraph  second paragraph  third paragraph                     layouts _default single html      Content                replace  Content     partial  adsense inarticle html       safeHTML",
        "objectID": "post/hugo文章中添加adsense广告",
        "date": "2019-04-15T00:00:00.000Z",
        "tags": [
            "Hugo",
            "Adsense"
        ],
        "slug": "add-adsense-in-hugo-article",
        "keywords": [
            "Hugo",
            "Adsense",
            "广告",
            "Google"
        ],
        "gitcomment": true,
        "category": "hugo"
    },
    {
        "title": "Hugo 集成 Algolia 搜索",
        "uri": "post/hugo集成Algolia搜索",
        "content": "Hugo   Steve Francis    http   spf13 com    Go                             Hugo     Hugo                                                                                                    Google        Hugo                                             Algolia     Algolia     APP                         API                                         InstantSearch                                     https   www algolia com     GitHub   Google                                     Dashboard        Algolia            app     Indices                 qikqiak blog                         Algolia                         json    API                             API                      Algolia     API                              hugo algolia                      hugo aligolia               npm    yarn                       npm install hugo algolia  g           hugo                  config yaml     config toml       config yaml      Algolia    API     baseurl      DefaultContentLanguage   zh cn  hasCJKLanguage  true languageCode   zh cn  title   River s Site  theme   beautifulhugo  metaDataFormat   yaml  algolia  index   qikqiak blog  key   3f541d53f128036d7542f6f2362d4a67  appID   XYLRNJ38SQ    API          dashboard   API Keys        key Admin API Key                          hugo algolia  s JSON index file created public algolia json   updatedAt   2018 02 23T02 36 09 480Z   taskID  249063848950                       public        algolia json            dashboard     Indices                                               index     false    hugo algolia                                          Algolia                                                                beautifulhugo    themes beautifulhugo layouts partials          search html  var client   algoliasearch  XYLRNJ38SQ    3f541d53f128036d7542f6f2362d4a67    var index   client initIndex  qikqiak blog    autocomplete   aa search input     hint  false     source  autocomplete sources hits index   hitsPerPage  8    displayKey   name   templates    suggestion  function suggestion    console log suggestion   return           suggestion _highlightResult title value                    JS     var client   algoliasearch  XYLRNJ38SQ    3f541d53f128036d7542f6f2362d4a67    var index   client initIndex  qikqiak blog        algoliasearch       Application ID       Search Only API Key    initIndex               qikqiak blog                     themes beautifulhugo layouts partials nav html              times  Search blog qikqiak com    partial  search html       close                   search html                      themes beautifulhugo static css search css     import  https   fonts googleapis com css family Montserrat 400 700    aa input container   display  inline block  position  relative  width  100      aa input container span  aa input container input   width  inherit     aa input search   width  300px  padding  12px 28px 12px 12px  border  2px solid  e4e4e4  border radius  4px   webkit transition   2s  transition   2s  font family   Montserrat   sans serif  box shadow  4px 4px 0 rgba 241  241  241  0 35   font size  11px  box sizing  border box  color   333   webkit appearance  none   moz appearance  none  appearance  none     aa input search   webkit search decoration   aa input search   webkit search cancel button   aa input search   webkit search results button   aa input search   webkit search results decoration   display  none     aa input search focus   outline  0  border color   3a96cf  box shadow  4px 4px 0 rgba 58  150  207  0 1      aa input icon   height  16px  width  16px  position  absolute  top  50   right  16px   webkit transform  translateY  50    transform  translateY  50    fill   e4e4e4     aa hint   color   e4e4e4     aa dropdown menu   background color   fff  border  2px solid rgba 228  228  228  0 6   border top width  1px  font family   Montserrat   sans serif  width  300px  margin top  10px  box shadow  4px 4px 0 rgba 241  241  241  0 35   font size  11px  border radius  4px  box sizing  border box     aa suggestion   padding  12px  border top  1px solid rgba 228  228  228  0 6   cursor  pointer   webkit transition   2s  transition   2s  display   webkit box  display   ms flexbox  display  flex   webkit box pack  justify   ms flex pack  justify  justify content  space between   webkit box align  center   ms flex align  center  align items  center     aa suggestion hover   aa suggestion aa cursor   background color  rgba 241  241  241  0 35      aa suggestion   span first child   color   333     aa suggestion   span last child   text transform  uppercase  color   a9a9a9     aa suggestion   span first child em   aa suggestion   span last child em   font weight  700  font style  normal  background color  rgba 58  150  207  0 1   padding  2px 0 2px 2px                  CSS         themes beautifulhugo layouts partials head html head                                                                        https   github com rootsongjc beautifulhugo https   gohugo io tools search  https   www npmjs com package hugo algolia",
        "objectID": "post/hugo集成Algolia搜索",
        "date": "2018-02-23T00:00:00.000Z",
        "publishdate": "2018-02-23T00:00:00.000Z",
        "tags": [
            "Hugo",
            "Algolia"
        ],
        "slug": "hugo-integrated-algolia-search",
        "keywords": [
            "Hugo",
            "Algolia",
            "搜索"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1500531279542-fc8490c8ea4d.jpeg",
                "desc": "Breckenridge, United States"
            }
        ],
        "category": "hugo"
    },
    {
        "title": "Hugo 集成 Gitment 评论插件",
        "uri": "post/hugo集成gitment评论插件",
        "content": "Hugo   Algolia                                                                                     disqus                                                                                              GitHub Issues         Gitment     Gitment      GitHub Issues                                                        Markdown   GFM                  GitHub Pages                    https   github com settings applications new      OAuth Application             Callback URL                https   blog qikqiak com            client id   client secret                       Gitment     Gitment               Hugo     beautifulhugo                                            themes beautifulhugo layouts _default single html                          Params gitment     var gitment   new Gitment   id       Slug                 location href owner      GitHub ID   repo         repo   oauth    client_id      client ID   client_secret      client secret        gitment render  git comments      end           id        location href        URL                 ID           422         URL                      Slug         slug              Params gitment        Gitment                gitment               meta      title  Hugo    Gitment      date  2018 03 05 tags    Hugo    gitment    github   slug  hugo integrated gitment plugin gitment  true category   hugo      gitment    true   slug                        slug    gitment    false            Gitment                              GitHub                    repo   owner                               Demo     Gitment                                           Github issues                 Gitment              Github issues API          Python                                       https   imsun github io gitment",
        "objectID": "post/hugo集成gitment评论插件",
        "date": "2018-03-05T00:00:00.000Z",
        "keywords": [
            "Hugo",
            "评论",
            "gitment",
            "github",
            "Algolia"
        ],
        "tags": [
            "Hugo",
            "gitment",
            "github"
        ],
        "slug": "hugo-integrated-gitment-plugin",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1459909633680-206dc5c67abb.jpeg",
                "desc": "Moon close-up by NASA"
            }
        ],
        "category": "hugo"
    },
    {
        "title": "ingress-nginx 控制器工作原理[译]",
        "uri": "post/ingress-nginx控制器原理",
        "content": "Nginx Ingress              Nginx                      1 NGINX    ingress nginx            nginx conf                          NGINX                upstream                  Nginx          Endpoints           lua nginx module                                  2 NGINX          Kubernetes       synchronization loop pattern                                                           Ingresses Services Endpoints Secrets    Configmaps                                     Kubernetes Informers     FilteredSharedInformer                     informers                                                                                                                      NGINX                    Endpoints            HTTP POST        Endpoints          Nginx    Lua                NGINX                              Endpoints                 NGINX                                                                    NGINX          Go template                          3    NGINX                                    work queue            sync Mutex                                                                                   informer               work queue                      CreationTimestamp     Ingress                     host          Ingress                    Ingress      host   TLS                    Ingresses       annotation     Server                     NGINX Servers               NGINX Upstreams         Ingresses        host       ingress            Annotations        Ingress          Ingresses         annotations         Ingresses      4                           Ingress         TLS        Ingress    Ingress annotations       upstream         load balance    annotation           Ingress             Ingress Service Secret        Ingress              Service    Secret Secret        5                                endpoints           Pod                       Ingress                                NGINX                                      5 1    Endpoints             endpoint                       endpoints                          Nginx     Lua      Lua                        balancerbylua            Lua      endpoints      upstream                Nginx                  endpoint         Nginx            Nginx upstream     annoations                               Nginx                               Nginx                5 2                ingress nginx    synchronization loop pattern                     Ingress          nginx ingress kubernetes io configuration snippet    annotation                                Ingress             nginx ingress           validating admission webhook server        ingress          webhook      ingress       ingresses             nginx                   https   kubernetes github io ingress nginx how it works",
        "objectID": "post/ingress-nginx控制器原理",
        "date": "2020-03-30T00:00:00.000Z",
        "keywords": [
            "ingress",
            "nginx",
            "kubernetes"
        ],
        "tags": [
            "ingress",
            "ingress-nginx",
            "kubernetes",
            "nginx"
        ],
        "slug": "ingress-nginx-how-to-work",
        "gitcomment": true,
        "category": "kubernetes"
    },
    {
        "title": "ingress-nginx 中 Rewrite 的使用",
        "uri": "post/ingress-nginx的rewrite",
        "content": "nginx                 Kubernetes     Ingress Controller            nginx   ingress nginx                           Traefik     Traefik 2 0                                           ingress nginx                         Ingress   annotation                  url rewrite                    todo qikqiak com             todo qikqiak com app                      Kubernetes v1 16 2 ingess nginx       0 26 1      Ingress         apiVersion  extensions v1beta1 kind  Ingress metadata  name  fe namespace  default annotations  kubernetes io ingress class   nginx  spec  rules  host  todo qikqiak com http  paths  backend  serviceName  fe servicePort  3000 path             Ingress                                          URL       Rewrite   ingress nginx                        path       app      rewrite target           Ingress         apiVersion  extensions v1beta1 kind  Ingress metadata  name  fe namespace  default annotations  kubernetes io ingress class   nginx  nginx ingress kubernetes io rewrite target    2 spec  rules  host  todo qikqiak com http  paths  backend  serviceName  fe servicePort  3000 path   app                                               path            app                                     path           app                     rewrite target               todo qikqiak com app                                                                stylesheets              url rewrite                    http   todo qikqiak com stylesheets screen css                                                                    ingress nginx    configuration snippet                   apiVersion  extensions v1beta1 kind  Ingress metadata  name  fe namespace  default annotations  kubernetes io ingress class   nginx  nginx ingress kubernetes io rewrite target    2 nginx ingress kubernetes io configuration snippet    rewrite   stylesheets        app stylesheets  1 redirect        app    rewrite   images        app images  1 redirect        app    spec  rules  host  todo qikqiak com http  paths  backend  serviceName  fe servicePort  3000 path   app             Ingress                                       404                 app root                              app root            apiVersion  extensions v1beta1 kind  Ingress metadata  name  fe namespace  default annotations  kubernetes io ingress class   nginx  nginx ingress kubernetes io app root   app  nginx ingress kubernetes io rewrite target    2 nginx ingress kubernetes io configuration snippet    rewrite   stylesheets        app stylesheets  1 redirect        app    rewrite   images        app images  1 redirect        app    spec  rules  host  todo qikqiak com http  paths  backend  serviceName  fe servicePort  3000 path   app                           http   todo qikqiak com         http   todo qikqiak com app                      path           app                                  slash          configuration snippet          Ingress     apiVersion  extensions v1beta1 kind  Ingress metadata  name  fe namespace  default annotations  kubernetes io ingress class   nginx  nginx ingress kubernetes io app root   app  nginx ingress kubernetes io rewrite target    2 nginx ingress kubernetes io configuration snippet    rewrite    app    1  redirect  rewrite   stylesheets        app stylesheets  1 redirect  rewrite   images        app images  1 redirect  spec  rules  host  todo qikqiak com http  paths  backend  serviceName  fe servicePort  3000 path   app                             slash                        nginx                                                        Traefik",
        "objectID": "post/ingress-nginx的rewrite",
        "date": "2019-11-28T00:00:00.000Z",
        "keywords": [
            "ingress",
            "nginx",
            "kubernetes"
        ],
        "tags": [
            "ingress",
            "ingress-nginx",
            "kubernetes",
            "nginx"
        ],
        "slug": "url-rewrite-on-ingress-nginx",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1574827014593-d03294304a70.jpeg",
                "desc": "rainy mournings "
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "ipvs 基本介绍",
        "uri": "post/ipvs 介绍",
        "content": "ipvs  IP Virtual Server                     4 LAN      Linux        ipvs                        ipvs     TCP UDP                             IP             ipvs vs  iptables     kube proxy   iptables   ipvs        kubernetes v1 8      ipvs      v1 9     beta      v1 11          iptables     v1 1           v1 2      iptables    kube proxy         ipvs   iptables     netfilter     ipvs     iptables             ipvs                    ipvs     iptables                            ipvs                   ipvs    iptables ipvs     iptables       SNAT masquared          ipvs    ipset     DROP masquared               iptables                                   ipvs     ipset       set name   members   usage                                                                                                                              KUBE CLUSTER IP   service IP   port   Mark Masq cases masquerade all true clusterCIDR specified     KUBE LOOP BACK   service IP   port   IP   masquerade solving hairpin purpose     KUBE EXTERNAL IP   service external IP   port   masquerade packages external IPs     KUBE LOAD BALANCER   load balancer ingress IP   port   masquerade packages load balancer type service     KUBE LOAD BALANCER LOCAL   LB ingress IP   port externalTrafficPolicy local   accept packages load balancer externalTrafficPolicy local     KUBE LOAD BALANCER FW   load balancer ingress IP   port loadBalancerSourceRanges   package filter load balancer loadBalancerSourceRanges specified     KUBE LOAD BALANCER SOURCE CIDR   load balancer ingress IP   port   source CIDR   package filter load balancer loadBalancerSourceRanges specified     KUBE NODE PORT TCP   nodeport type service TCP port   masquerade packets nodePort TCP      KUBE NODE PORT LOCAL TCP   nodeport type service TCP port externalTrafficPolicy local   accept packages nodeport service externalTrafficPolicy local     KUBE NODE PORT UDP   nodeport type service UDP port   masquerade packets nodePort UDP      KUBE NODE PORT LOCAL UDP   nodeport type service UDP port externalTrafficPolicy local   accept packages nodeport service externalTrafficPolicy local          ipvs      iptables  1  kube proxy        masquerade all true    kube proxy      masquerade all true     ipvs         Service   Cluster IP            iptables        ipvs     iptables       iptables  t nat  nL Chain PREROUTING  policy ACCEPT  target prot opt source destination KUBE SERVICES    0 0 0 0 0 0 0 0 0 0    kubernetes service portals    Chain OUTPUT  policy ACCEPT  target prot opt source destination KUBE SERVICES    0 0 0 0 0 0 0 0 0 0    kubernetes service portals    Chain POSTROUTING  policy ACCEPT  target prot opt source destination KUBE POSTROUTING    0 0 0 0 0 0 0 0 0 0    kubernetes postrouting rules    Chain KUBE MARK MASQ  2 references  target prot opt source destination MARK    0 0 0 0 0 0 0 0 0 0 MARK 0x4000 Chain KUBE POSTROUTING  1 references  target prot opt source destination MASQUERADE    0 0 0 0 0 0 0 0 0 0    kubernetes service traffic requiring SNAT    mark match 0x4000 0x4000 MASQUERADE    0 0 0 0 0 0 0 0 0 0 match set KUBE LOOP BACK dst dst src Chain KUBE SERVICES  2 references  target prot opt source destination KUBE MARK MASQ    0 0 0 0 0 0 0 0 0 0 match set KUBE CLUSTER IP dst dst ACCEPT    0 0 0 0 0 0 0 0 0 0 match set KUBE CLUSTER IP dst dst 2    kube proxy         CIDR    kube proxy      cluster cidr      ipvs         Service Cluster IP            iptables       kube proxy       CIDR    10 244 16 0 24    ipvs     iptables           iptables  t nat  nL Chain PREROUTING  policy ACCEPT  target prot opt source destination KUBE SERVICES    0 0 0 0 0 0 0 0 0 0    kubernetes service portals    Chain OUTPUT  policy ACCEPT  target prot opt source destination KUBE SERVICES    0 0 0 0 0 0 0 0 0 0    kubernetes service portals    Chain POSTROUTING  policy ACCEPT  target prot opt source destination KUBE POSTROUTING    0 0 0 0 0 0 0 0 0 0    kubernetes postrouting rules    Chain KUBE MARK MASQ  3 references  target prot opt source destination MARK    0 0 0 0 0 0 0 0 0 0 MARK 0x4000 Chain KUBE POSTROUTING  1 references  target prot opt source destination MASQUERADE    0 0 0 0 0 0 0 0 0 0    kubernetes service traffic requiring SNAT    mark match 0x4000 0x4000 MASQUERADE    0 0 0 0 0 0 0 0 0 0 match set KUBE LOOP BACK dst dst src Chain KUBE SERVICES  2 references  target prot opt source destination KUBE MARK MASQ     10 244 16 0 24 0 0 0 0 0 match set KUBE CLUSTER IP dst dst ACCEPT    0 0 0 0 0 0 0 0 0 0 match set KUBE CLUSTER IP dst dst 3  Load Balancer     Service   loadBalancer      ipvs       KUBE LOAD BALANCER   ipset   iptables           LoadBalancerSourceRanges        externalTrafficPolicy local     ipvs     ipset   KUBE LOAD BALANCER LOCAL KUBE LOAD BALANCER FW KUBE LOAD BALANCER SOURCE CIDR        iptables            iptables  t nat  nL Chain PREROUTING  policy ACCEPT  target prot opt source destination KUBE SERVICES    0 0 0 0 0 0 0 0 0 0    kubernetes service portals    Chain OUTPUT  policy ACCEPT  target prot opt source destination KUBE SERVICES    0 0 0 0 0 0 0 0 0 0    kubernetes service portals   ",
        "objectID": "post/ipvs 介绍",
        "subtitle": "如何在 kubernetes 中启用 ipvs",
        "date": "2018-08-23T00:00:00.000Z",
        "keywords": [
            "ipvs",
            "iptables",
            "kubernetes",
            "kube-proxy"
        ],
        "tags": [
            "ipvs",
            "iptables",
            "kubernetes",
            "kubeadm"
        ],
        "slug": "how-to-use-ipvs-in-kubernetes",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1534939023197-ee1747a69141.jpeg",
                "desc": "Sittin’ On The Dock Of The Bay"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Istio 实训免费视频课程",
        "uri": "post/Istio 实训免费视频课程",
        "content": "Istio      Google Lyft IBM                 Service Mesh                                                  Istio         Kubernetes                                               Istio     Kubernetes            Istio                               CNCF                                               1 CNCF             9   1 Kubernetes               13   12 CNCF              KCSP kubernetes Certified Service Provider                 kubernetes    kubernetes    kubernetes     kubernetes                kubernetes             kubernetes                                                    Cloud Native Lives kubernetes          kubernetes         K8S                     kubernetes           Kuberntes                  Kubernetes            Istio                     https   bbs huaweicloud com forum thread 13022 1 1 html                      k8s                istio                    0 1     Kubernetes               Kubernetes",
        "objectID": "post/Istio 实训免费视频课程",
        "date": "2019-01-21T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "istio",
            "课程"
        ],
        "keywords": [
            "kubernetes",
            "CloudNative",
            "课程",
            "华为",
            "istio"
        ],
        "slug": "k8s-istio-course",
        "gitcomment": true,
        "category": "kubernetes"
    },
    {
        "title": "Jenkins 共享库示例",
        "uri": "post/Jenkins共享库示例",
        "content": "Jenkins Pipeline                                                                                   Jenkins                                               Pipeline                             shared library        Groovy               Pipeline                                  Git                                  Groovy                                       Groovy                  3            Groovy        Git         Jenkins            Jenkins                           Library  your shared library                                            Steps    Steps   Jenkins                   Jenkins Pipeline           Steps                 Step                            vars YourStepName groovy            call          usr bin env groovy    vars YourStepName groovy def call        something here                                                           src your package name                 Groovy            usr bin env groovy    com qikqiak GlobalVars groovy package com qikqiak class GlobalVars   static String foo    bar          Jenkins Pipeline     import                      GlobalVars foo            pipeline library demo              Git              vars           step     vars          groovy                       sayHi groovy                usr bin env groovy def call String name  QIKQIAK     echo  Hello    name                 call            name           QIKQIAK       name                  src com qikqiak GlobalVars groovy                  usr bin env groovy package com qikqiak class GlobalVars   static String foo    bar       Pipeline                     import com qikqiak GlobalVars    println GlobalVars foo                  tree         README md     src       com       qikqiak       GlobalVars groovy     vars     sayHi groovy 4 directories  3 files           GitHub    https   github com cnych pipeline library demo                   Jenkins               Jenkins   Web          Jenkins                      Global Pipeline Libraries                                 share lib demo          Pipeline script            Library  pipeline library demo  _ import com qikqiak GlobalVars stage  Demo     echo  Hello world  sayHi      println GlobalVars foo           Library  pipeline library demo                              Libray           import                          import                               Pipeline",
        "objectID": "post/Jenkins共享库示例",
        "date": "2020-05-20T00:00:00.000Z",
        "keywords": [
            "jenkins"
        ],
        "tags": [
            "jenkins",
            "shared library",
            "共享库"
        ],
        "slug": "jenkins-shared-library-demo",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200520190406.png",
                "desc": "https://unsplash.com/photos/_dXcM3gFfh0"
            }
        ],
        "category": "devops"
    },
    {
        "title": "Job和CronJob 的使用方法",
        "uri": "post/Job和CronJob的使用",
        "content": "Pod              HPA                        HPA                     Job                                                        Kubernetes         Job CronJob                  Job                               Pod     CronJob    Job          Job    Job                   Job              YAML    apiVersion  batch v1 kind  Job metadata  name  job demo spec  template  metadata  name  job demo spec  restartPolicy  containers  name  counter image  busybox command   bin sh    c   for 9 8 7 6 5 4 3 2 1  echo  i  done    Job RestartPolicy   Never OnFailure      Always     Job                           Always                     Job    job demo yaml    kubectl create  f job yaml job  job demo  created            Job        kubectl jobs NAME DESIRED SUCCESSFUL AGE job demo 1 1 1m        Pod            kubectl logs                kubectl pods NAME READY STATUS RESTARTS AGE job demo p6zst 0 1 Completed 0 14h   kubectl logs job demo p6zst 9 8 7 6 5 4 3 2 1 CronJob CronJob     Job                                                       Linux  crontab          CronJob        crontab                         Job    crontab       crontab                            1   0 59  2   0 23   3  1 31  4  1 12  5   0 7 0 7        6              CronJob        Job    apiVersion  batch v2alpha1 kind  CronJob metadata  name  cronjob demo spec  successfulJobsHistoryLimit  10 failedJobsHistoryLimit  10 schedule    1        jobTemplate  spec  template  spec  restartPolicy  OnFailure containers  name  hello image  busybox args   bin sh    c   for 9 8 7 6 5 4 3 2 1  echo  i  done       Kind CronJob        spec schedule                         crontab           spec jobTemplate                   Job                   spec successfulJobsHistoryLimit  spec failedJobsHistoryLimit                                Job                Job              Cron Job  Job                                    0        Job                     cronjob   kubectl create  f cronjob demo yaml cronjob  cronjob demo  created        kubectl run     CronJob    kubectl run hello   schedule   1          restart OnFailure   image busybox     bin sh  c  date  echo Hello Kubernetes cluster  cronjob batch  hello  created   kubectl cronjob NAME SCHEDULE SUSPEND ACTIVE LAST SCHEDULE AGE hello  1       False 0 13s   kubectl jobs NAME DESIRED SUCCESSFUL AGE hello 1528533240 1 1 1m hello 1528533300 1 0 1s   pods   kubectl pods   selector job name hello 1528533240   output jsonpath   items  metadata name     kubectl logs  pods Sat Jun 9 08 34 19 UTC 2018 Hello Kubernetes cluster        Cron Job         kubectl          kubectl delete cronjob hello cronjob batch  hello  deleted            Job       Cron Job     Job            Job             Job       Pod       Job       Job     Pod",
        "objectID": "post/Job和CronJob的使用",
        "date": "2018-06-09T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "Pod",
            "Job",
            "CronJob"
        ],
        "slug": "use-job-cronjob",
        "keywords": [
            "kubernetes",
            "job",
            "cronjob",
            "pod"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1503863937795-62954a3c0f05.jpeg",
                "desc": "Morning glory"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 1.17 有什么新特性？",
        "uri": "post/k8s1.17新特性",
        "content": "Kubernetes 1 17         release                                                      IPv4 IPv6                                                          536 Services          1053 kubeadm machine         1152                     563    IPv4 IPv6             1053 Kubeadm machine           Alpha     cluster lifecycle            kubernetes                     kubeadm             terraform kubeadm                 kubeadm                           alpha                   json yaml   go template   kubeadm                      kubeadm token list TOKEN TTL EXPIRES USAGES DESCRIPTION EXTRA GROUPS 7vg8cr pks5g06s84aisb27 2019 06 05T17 13 55 03 00 authentication signing default bootstrap token generated  kubeadm init   system bootstrappers kubeadm default node token             o     experimental output                kubeadm token list  o json    kind    BootstrapToken    apiVersion    output kubeadm k8s io v1alpha1    creationTimestamp   null   token    7vg8cr pks5g06s84aisb27    description    The default bootstrap token generated  kubeadm init      expires    2019 06 05T14 13 55Z    usages      authentication    signing      groups      system bootstrappers kubeadm default node token            PR   KEP                 1143     Kubernetes     node role             Alpha     architecture",
        "objectID": "post/k8s1.17新特性",
        "date": "2019-12-07T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "ingress",
            "traefik",
            "nginx",
            "haproxy",
            "kong"
        ],
        "keywords": [
            "kubernetes",
            "ingress",
            "traefik",
            "nginx",
            "haproxy",
            "kong"
        ],
        "slug": "what-is-new-in-k8s-1.17",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1534181220741-388dc50c711d.jpg",
                "desc": "In the middle of the nowhere"
            }
        ],
        "category": "kubernetes",
        "draft": true
    },
    {
        "title": "k8s技术圈一周精选[第1期]",
        "uri": "post/k8s技术圈一周精选[第1期]",
        "content": "2018     1 4                                                                                                                 1        2         3  kubelet sidecar     4  kubernetes                        Kubernetes",
        "objectID": "post/k8s技术圈一周精选[第1期]",
        "date": "2018-03-18T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "知识星球",
            "k8s技术圈"
        ],
        "keywords": [
            "kubernetes",
            "知识星球",
            "k8s技术圈",
            "精选"
        ],
        "slug": "k8s-tech-weekly-collection-phase1",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1506188232657-23c9c893ac2b.jpeg",
                "desc": "Girl Cave"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "k8s技术圈一周精选[第2期]",
        "uri": "post/k8s技术圈一周精选[第2期]",
        "content": "k8s        1                                                                                         2                                                    1  Helm      2  nodeAffinity    3       ingress   ingress controller 4  flannel      5           6  Helm        7  docker    jenkins                  Kubernetes",
        "objectID": "post/k8s技术圈一周精选[第2期]",
        "date": "2018-03-25T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "知识星球",
            "k8s技术圈"
        ],
        "keywords": [
            "kubernetes",
            "知识星球",
            "k8s技术圈",
            "精选"
        ],
        "slug": "k8s-tech-weekly-collection-phase2",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1437843947241-9e73e69172fb.jpeg",
                "desc": "Arthur's Seat, Edinburgh@United Kingdom"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "k8s技术圈一周精选[第3期]",
        "uri": "post/k8s技术圈一周精选[第3期]",
        "content": "k8s                                                                1           2            3  kubectl    no host                   Kubernetes",
        "objectID": "post/k8s技术圈一周精选[第3期]",
        "date": "2018-04-01T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "知识星球",
            "k8s技术圈"
        ],
        "keywords": [
            "kubernetes",
            "知识星球",
            "k8s技术圈",
            "精选"
        ],
        "slug": "k8s-tech-weekly-collection-phase3",
        "gitcomment": true,
        "toc": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1516054237813-0df813b7f496.jpeg",
                "desc": "This lake has so much salt that some bacterias created this color in the water transforming in a very beautiful and unique place."
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "k8s技术圈一周精选[第6期]",
        "uri": "post/k8s技术圈一周精选[第6期]",
        "content": "k8s                                                      1   pod            emptydir                   v1 7               hostPath  emptyDir  gitRepo                      Kubernetes            storage kubernetes io overlay    var lib docker     storage kubernetes io scratch    var lib kubelet     Kubernetes    storage kubernetes io scratch                  storage kubernetes io overlay                  64MB           apiVersion  v1 kind  Pod metadata  name  ls1 spec  restartPolicy  containers  name  hello image  busybox command    df   resources  requests  storage kubernetes io overlay  64Mi   emptyDir    64MB        apiVersion  v1 kind  Pod metadata  name  ls1 spec  restartPolicy  containers  name  hello image  busybox command    df   volumeMounts  name  data mountPath   data volumes  name  data emptyDir  sizeLimit  64Mi 2 kubeadm         join         kubeadm                    join               token           join                     kubeadm token create          token       openssl      CA     hash      openssl x509  pubkey  in  etc kubernetes pki ca crt   openssl rsa  pubin  outform der 2  dev null   openssl dgst  sha256  hex   sed  s              join        kubeadm join   token   discovery token ca cert hash sha256             1 10   kubeadm        join       kubeadm token create   print join command 3 ServiceAccount               ServiceAccount     Role    ClusterRole                                    ServiceAccount                     Pod       Kubernetes             Pod   CRUD               CRUD Pod            Pod      ServiceAccount     token           Pod    ca crt        APIServer     token                  Pod      APIServer                             TLS             client go      InCluster               tokenFile   CAFile     tokenFile     var run secrets kubernetes io serviceaccount token     rootCAFile     var run secrets kubernetes io serviceaccount ca crt  config  _    rest InClusterConfig            config        clientset clientset  _    kubernetes NewForConfig config          clientset                        Pod      ServiceAccount              default     ServiceAccount         token         Pod                                      ServiceAccount     Pod      4 Docerkfile                      Dockerfile                             yes        yum install  y                                                                 Dockerfile                                                            commit                                  docker                 https   forums docker com t dockerfile how to answer install question from application 5240 2      expect            RUN apt get install expect ADD install_script RUN install_script            usr bin expect set timeout 2 spawn    your_script  expect  Question 1      send  yes n    expect  Question 2      send  no n    interact 5 kubeadm                  v1 14 5                   apiserver        tls bad                         dns        CoreDNS                 kube proxy                apiserver                   apiserver       IP                            IP              kubeadm                    apiserver                IP           kubernetes   kubeadm       apiVersion  kubeadm k8s io v1beta1 kind  ClusterConfiguration networking  dnsDomain  cluster local podSubnet  10 244 0 0 16 serviceSubnet  10 96 0 0 12 kubernetesVersion  v1 15 2 imageRepository  gcr azk8s cn google_containers apiVersion  kubeproxy config k8s io v1alpha1 kind  KubeProxyConfiguration mode   ipvs  apiVersion  kubeadm k8s io v1beta1 kind  InitConfiguration localAPIEndpoint  advertiseAddress  10 151 30 11 bindPort  6443           InitConfiguration    advertiseAddress          IP         kubeadm               kubeadm                       kubeadm config print init defaults                              godoc        https   godoc org k8s io kubernetes cmd kubeadm app apis kubeadm v1beta2  6 Pod               Pod                   Pod                 8                           Pod                     Pod                      PodPreset           PodPreset   kube apiserver       runtime config    settings k8s io v1alpha1 true        admission control    PodPreset         kube apiserver                             kubectl podpresets        PodPresents       apiVersion  settings k8s io v1alpha1 kind  PodPreset metadata  name  tz env spec  selector  matchLabels  env  name  TZ values  Asia Shanghai                  selector   matchLabels    matchLabels                                                Pod               TZ               PodPreset   namespace                            7 Prometheus    Kubelet      kubernetes 1 11      kubelet     10255          prometheus    kubelet                  node                 https                     metrics         403               kubelet              authentication token webhook   authorization mode Webhook      prometheus    rbac                 apiGroups     resources  nodes metrics verbs  8 Lease API         1 14            kube node lease                                kubectl ns NAME STATUS AGE default Active 10d kube node lease Active 10",
        "objectID": "post/k8s技术圈一周精选[第6期]",
        "date": "2019-11-09T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "知识星球",
            "k8s技术圈"
        ],
        "keywords": [
            "kubernetes",
            "知识星球",
            "k8s技术圈",
            "精选"
        ],
        "slug": "k8s-tech-weekly-collection-phase6",
        "gitcomment": true,
        "notoc": true,
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 集群均衡器 Descheduler",
        "uri": "post/K8S集群平衡器",
        "content": "Kubernetes                       kube scheduler                                                Kubernetes                       kube scheduler                    Kubernetes                               Pod                  kube scheduler                                                                                           Pod                                                      Pod      Pending                                                                        Pod    kube scheduler                    APIServer     K8S            K8S                              scheduling context        K8S                                                           Pod                             Pod                                                                                                                                  kube scheduler                         Pod              Pod                   Kubernetes                    Kubernetes                                                      Pod                           Pod                 Pod                           Kubernetes                                                                             Pod                                                                 Pod                            Pod           kube scheduler                                 Pod                                  Descheduler               kubernetes sigs                   Descheduler                                        RemoveDuplicates LowNodeUtilization RemovePodsViolatingInterPodAntiAffinity RemovePodsViolatingNodeAffinity   RemovePodsViolatingNodeTaints                                                           RemoveDuplicates            Pod     RS RC Deployment    Job                      Pod         Pod                  Pod                        Pod                RS    RC     Pod                                                       Pod                                   false     apiVersion   descheduler v1alpha1  kind   DeschedulerPolicy  strategies   RemoveDuplicates   enabled  false LowNodeUtilization                        Pod    kube scheudler                                nodeResourceUtilizationThresholds                      thresholds              CPU     Pod                                                       targetThresholds              Pod                thresholds   targetThresholds                      targetThresholds         CPU     Pod        thresholds   targetThresholds                          apiVersion   descheduler v1alpha1  kind   DeschedulerPolicy  strategies   LowNodeUtilization   enabled  true params  nodeResourceUtilizationThresholds  thresholds   cpu    20  memory   20  pods   20 targetThresholds   cpu    50  memory   50  pods   50   LowNodeUtilization             numberOfNodes                                                                                numberOfNodes  0  RemovePodsViolatingNodeTaints                 NoSchedule     Pod         podA   Pod        key value NoSchedule                                            Pods                        apiVersion   descheduler v1alpha1  kind   DeschedulerPolicy  strategies   RemovePodsViolatingNodeTaints   enabled  true RemovePodsViolatingNodeAffinity                     Pod      podA   Pod         nodeA podA                  requiredDuringSchedulingIgnoredDuringExecution              nodeA                              nodeB      podA       nodeA                 apiVersion   descheduler v1alpha1  kind   DeschedulerPolicy  strategies   RemovePodsViolatingNodeAffinity   enabled  true params  nodeAffinityType   requiredDuringSchedulingIgnoredDuringExecution  RemovePodsViolatingInterPodAntiAffinity                 Pod       Pod          podA    Pod    podB   podC                                    podA              podB   podC          podB   podC                                                            false     apiVersion   descheduler v1alpha1  kind   DeschedulerPolicy  strategies   RemovePodsViolatingInterPodAntiAffinity   enabled  false       Descheduler    Github      README            Kubernetes        Job    CronJob        Deschduler                      Descheduler   Pod   kube system         critical pod                 kubelet                RBAC       rbac yaml  kind  ClusterRole apiVersion  rbac authorization k8s io v1 metadata  name  descheduler cluster role namespace  kube system rules  apiGroups       resources    events   verbs    create    update   apiGroups       resources    nodes   verbs    get    watch    list   apiGroups       resources    pods   verbs    get    watch    list    delete   apiGroups       resources    pods eviction   verbs    create   apiVersion  v1 kind  ServiceAccount metadata  name  descheduler sa namespace  kube system apiVersion  rbac authorization k8s io v1 kind  ClusterRoleBinding metadata  name  descheduler cluster role binding namespace  kube system roleRef  apiGroup  rbac authorization k8s io kind  ClusterRole name  descheduler cluster role subjects  name  descheduler sa kind  ServiceAccount namespace  kube system          ConfigMap         Descheduler      ",
        "objectID": "post/K8S集群平衡器",
        "subtitle": "通过 Descheduler 实现 Kubernetes 的二次调度",
        "date": "2020-03-16T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "scheduler",
            "descheduler"
        ],
        "keywords": [
            "kubernetes",
            "scheduler",
            "均衡",
            "调度",
            "descheduler"
        ],
        "slug": "k8s-cluster-balancer",
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200316122224.png",
                "desc": "https://github.com/kubernetes-sigs/descheduler"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "如何在 Keynote 中插入高亮代码？",
        "uri": "post/keynote中插入高亮代码",
        "content": "Golang                             PPT          PPT                           PPT                                keynote                                RTF                           highlight       Mac            homebrew            brew install highlight                                 package main import  fmt  func main     fmt Println  Hello World                               pbpaste   highlight   syntax go   style github  k  Fira Code   K 36  u  utf 8   t 4  O rtf   pbcopy     syntax          u               style         K                                                    hello go                 highlight   style github  k  Fira Code   K 36  u  utf 8   t 4  O rtf hello go   pbcopy                 keynote                                     keynote                                  function light        z   2    src  pbpaste  else src  cat  2  fi  src   highlight  O rtf   syntax  1   font Inconsolata   style solarized dark   font size 24   pbcopy       light js func js           https   gist github com jimbojsb 1630790",
        "objectID": "post/keynote中插入高亮代码",
        "date": "2019-04-24T00:00:00.000Z",
        "tags": [
            "keynote",
            "highlight",
            "Mac"
        ],
        "slug": "insert-code-on-keynote",
        "keywords": [
            "keynote",
            "highlight",
            "Mac",
            "高亮",
            "PPT"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/jws2z.jpeg",
                "desc": "San Francisco covered by fog"
            }
        ],
        "category": "极客"
    },
    {
        "title": "使用 kubeadm 更新 kubernetes 集群",
        "uri": "post/kubeadm更新集群",
        "content": "v1 10 0                    v1 14 x                                          kubeadm            kubeadm                                     1 10 x     1 14 x kubeadm                        1 10       1 11          1 11     1 12                                                       v1 11 0                 kubeadm config       kubeadm config view api  advertiseAddress  10 151 30 11 bindPort  6443 controlPlaneEndpoint     auditPolicy  logDir   var log kubernetes audit logMaxAge  2 path     authorizationModes  Node RBAC certificatesDir   etc kubernetes pki cloudProvider     criSocket   var run dockershim sock etcd  caFile     certFile     dataDir   var lib etcd endpoints  null image     keyFile     imageRepository  k8s gcr io kubeProxy  config  bindAddress  0 0 0 0 clientConnection  acceptContentTypes     burst  10 contentType  application vnd kubernetes protobuf kubeconfig   var lib kube proxy kubeconfig conf qps  5 clusterCIDR  10 244 0 0 16 configSyncPeriod  15m0s conntrack  max  null maxPerCore  32768 min  131072 tcpCloseWaitTimeout  1h0m0s tcpEstablishedTimeout  24h0m0s enableProfiling  false healthzBindAddress  0 0 0 0 10256 hostnameOverride     iptables  masqueradeAll  false masqueradeBit  14 minSyncPeriod  0s syncPeriod  30s ipvs  minSyncPeriod  0s scheduler     syncPeriod  30s metricsBindAddress  127 0 0 1 10249 mode     nodePortAddresses  null oomScoreAdj   999 portRange     resourceContainer   kube proxy udpIdleTimeout  250ms kubeletConfiguration     kubernetesVersion  v1 10 0 networking  dnsDomain  cluster local podSubnet  10 244 0 0 16 serviceSubnet  10 96 0 0 12 nodeName  ydzs master privilegedPods  false token     tokenGroups  system bootstrappers kubeadm default node token tokenTTL  24h0m0s tokenUsages  signing authentication unifiedControlPlaneImage         imageRepository     gcr azk8s cn google_containers           kubeadm config yaml                 grc io                  kubeadm    yum makecache fast    yum install  y kubeadm 1 11 0 0 kubectl 1 11 0 0   kubeadm version kubeadm version   version Info Major  1   Minor  11   GitVersion  v1 11 0   GitCommit  91e7b4fd31fcd3d5f436da26c980becec37ceefe   GitTreeState  clean   BuildDate  2018 06 27T20 14 41Z   GoVersion  go1 10 2   Compiler  gc   Platform  linux amd64        kubeadm upgrade plan           dl k8s io                                  kubeadm                                  upgrade plan               kubeadm upgrade plan  preflight  Running pre flight checks   upgrade  Making sure cluster healthy   upgrade config  Making sure configuration correct   upgrade config  Reading configuration cluster     upgrade config  FYI  look config file  kubectl  n kube system cm kubeadm config  oyaml  I0518 18 50 12 844665 9676 feature_gate go 230  feature gates    map     upgrade  Fetching available versions upgrade  upgrade versions  Cluster version  v1 10 0  upgrade versions  kubeadm version  v1 11 0  upgrade versions  WARNING  Couldn t fetch latest stable version internet  unable URL  https   dl k8s io release stable txt   https   dl k8s io release stable txt  dial tcp 35 201 71 162 443  i o timeout  upgrade versions  WARNING  Falling back current kubeadm version latest stable version  upgrade versions  WARNING  Couldn t fetch latest version v1 10 series internet  unable URL  https   dl k8s io release stable 1 10 txt   https   dl k8s io release stable 1 10 txt  dial tcp 35 201 71 162 443  i o timeout Components upgraded manually upgraded control plane  kubeadm upgrade apply   COMPONENT CURRENT AVAILABLE Kubelet 3 x v1 10 0 v1 11 0 Upgrade latest stable version  COMPONENT CURRENT AVAILABLE API Server v1 10 0 v1 11 0 Controller Manager v1 10 0 v1 11 0 Scheduler v1 10 0 v1 11 0 Kube Proxy v1 10 0 v1 11 0 CoreDNS 1 1 3 Kube DNS 1 14 8 Etcd 3 1 12 3 2 18 apply upgrade executing following command  kubeadm upgrade apply v1 11 0         dry run             kubeadm upgrade apply v1 11 0   config kubeadm config yaml   dry run          config                                                                         kubeadm upgrade apply v1 11 0   config kubeadm config yaml kubeadm upgrade apply v1 11 0   config kubeadm config yaml  preflight  Running pre flight checks  I0518 18 57 29 134722 12284 feature_gate go 230  feature gates    map     upgrade  Making sure cluster healthy   upgrade config  Making sure configuration correct   upgrade config  Reading configuration options file  kubeadm config yaml I0518 18 57 29 179231 12284 feature_gate go 230  feature gates    map     upgrade apply  Respecting   cri socket flag set higher priority config file   upgrade version  chosen change cluster version  v1 11 0   upgrade versions  Cluster version  v1 10 0  upgrade versions  kubeadm version  v1 11 0  upgrade confirm  sure want proceed upgrade   y N   y  upgrade prepull  Will prepull images components  kube apiserver kube controller manager kube scheduler etcd   upgrade apply  Upgrading Static Pod hosted control plane version  v1 11 0     Static pod  kube apiserver ydzs master hash  3abd7df4382a9b60f60819f84de40e11 Static pod  kube controller manager ydzs master hash  1a0f3ccde96238d310",
        "objectID": "post/kubeadm更新集群",
        "date": "2019-05-18T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "kubelet",
            "kubeadm"
        ],
        "keywords": [
            "kubernetes",
            "kubelet",
            "kubeadm",
            "更新",
            "kubectl",
            "docker"
        ],
        "slug": "use-kubeadm-upgrade-k8s",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20190518122741.png",
                "desc": "https://unsplash.com/photos/NuYKNgI3ZW0"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubelet 状态更新机制",
        "uri": "post/Kubelet状态保障",
        "content": "Kubernetes   Node                   Pod                             Down     Pod                     Kubelet              Kubernetes                               Kubelet            kubelet            apiserver       node status update frequency           10s       kube controller manager      node monitor period      kubelet         5s    node         kubernetes    node   notready            node monitor grace period        40s    node         kubernetes    node   unhealthy            node startup grace period        1m0s    node         kubernetes       node    pod          pod eviction timeout        5m0s    kube controller manager   kubelet                          apiserver     etcd                           node status update frequency   5s       etcd           6 7s         Kubelet            nodeStatusUpdateRetry        5    Kubelet     tryUpdateNodeStatus          Kubelet     Golang   http Client                      API Server         TCP                   nodeStatusUpdateRetry     node status update frequency                  Kubernetes   controller manager       node monitor period       nodeStatusUpdateRetry     node monitor grace period         unhealthy       pod eviction timeout    Pod  kube proxy     watcher API    Pod      kube proxy           iptables      Pod   Service   Endpoints                     Pod                                                                          node status update frequency   10s       node monitor period   5s       node monitor grace period   40s       pod eviction timeout   5m                                          node status update frequency   4s       node monitor period   2s       node monitor grace period   20s       pod eviction timeout   30s          Pod    50s            20s     Down     pod eviction timeout  30s                etcd                     2s              1000           15000                etcd       etcd                           5           nodeStatusUpdateRetry     3 5                   15 25                                             node status update frequency   20s       node monitor period   5s       node monitor grace period   2m       pod eviction timeout   1m          20s      node    controller manager    node            2m60 205 30    node      Node     down    1m               1000     1        60s 20s 1000 3000                                                  node status update frequency   1m       node monitor period   5s       node monitor grace period   5m       pod eviction timeout   1m   Kubelet    1m                      5m 1m 5 25          Node        1m    pod                                         https   github com kubernetes sigs kubespray blob master docs kubernetes reliability md",
        "objectID": "post/Kubelet状态保障",
        "date": "2019-05-15T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "kubelet"
        ],
        "keywords": [
            "kubernetes",
            "kubelet",
            "状态",
            "同步",
            "apiserver"
        ],
        "slug": "kubelet-sync-node-status",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1557870496-fa8f75b9dd78.jpeg",
                "desc": "https://unsplash.com/photos/_DocR2F7HIs"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "kubernetes dashboard 升级之路",
        "uri": "post/kubernetes dashboard 升级",
        "content": "kubernetes           kubernetes   v1 8 2       dashboard    1 6 x     dashboard                                                1 7 x                                  dashboard                                       basic auth       1 6 x   dashboard      basic auth                 haproxy nginx  traefik ingress haproxy nginx     haproxy  nginx    basic auth                      https            traefik ingress       https        traefik       nginx       nginx   https           haproxy         ConfigMap  kind  ConfigMap apiVersion  v1 metadata  name  haproxy conf namespace  kube system data  haproxy config     userlist users user admin insecure password admin global log 127 0 0 1 local0 debug stats timeout 30s defaults log global mode http option httplog option dontlognull timeout connect 5000 timeout client 50000 timeout server 50000 timeout http request 15s timeout http keep alive 15s frontend k8s ui bind   8440 mode http acl authok httpauth users  http request auth unless auth_ok default_backend k8s ui backend k8s ui mode http balance roundrobin server k8s ui 1 kubernetes dashboard kube system svc cluster local 80 check       haproxy Deployment Service  apiVersion  extensions v1beta1 kind  Deployment metadata  name  haproxy namespace  kube system labels  k8s app  haproxy spec  template  metadata  labels  k8s app  haproxy spec  containers  name  haproxy image  haproxy latest imagePullPolicy  IfNotPresent ports  containerPort  8440 name  k8s ui protocol  TCP volumeMounts  name  haproxy config volume mountPath   usr local etc haproxy volumes  name  haproxy config volume configMap  name  haproxy conf items  key  haproxy config path  haproxy cfg kind  Service apiVersion  v1 metadata  name  haproxy namespace  kube system labels  k8s app  haproxy spec  ports  port  8440 targetPort  k8s ui name  k8s ui selector  k8s app  haproxy         ingress      apiVersion  extensions v1beta1 kind  Ingress metadata  name  traefik system namespace  kube system spec  rules  host  k8s local http  paths  path    backend  serviceName  haproxy servicePort  k8s ui       https   k8s local    basic auth      traefik ingress          haprox  nginx               ingress      basic auth     ingress          annotations                        htpasswd     htpasswd  bc auth admin admin            auth   secret   kubectl create secret generic system basic auth   from file auth  n kube system        auth type basic auth secret system basic auth     ingress       traefik ingress controller hosts   basic auth        htpasswd    apiVersion  extensions v1beta1 kind  Ingress metadata  name  traefik system namespace  kube system annotations  ingress kubernetes io auth type  basic ingress kubernetes io auth secret  system basic auth spec  rules  host  k8s local http  paths  path    backend  serviceName  haproxy servicePort  k8s ui     Dashboard         dashboard  basic auth           1 7 1                                dashboard   yaml             kubectl delete  f dashboard                            wget https   raw githubusercontent com kubernetes dashboard master src deploy recommended kubernetes dashboard yaml           Service  NodePort             dashboard      kubectl create  f kubernetes dashboard yaml         dashboard           kubectl svc kubernetes dashboard  n kube system NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE haproxy ClusterIP 10 254 125 90 8440 TCP 8442 TCP 2d kubernetes dashboard NodePort 10 254 122 185 443 31694 TCP 10s                 IP      31694      dashboard        dashboard      https                                  dashboard                dashboard   Kubeconfig token                      Kubeconfig                               default                  dashboard      Kubeconfig  token        Kubeconfig     token        token              token       admin     admin           yaml    admin                   token   dashbaord               Service Account        Bearer token   API server          Kubernetes       kind  ClusterRoleBinding apiVersion  rbac authorization k8s io v1beta1 metadata  name  admin annotations  rbac authorization kubernetes io autoupdate   true  roleRef  kind  ClusterRole name  cluster admin apiGroup  rbac authorization k8s io subjects  kind  ServiceAccount name  admin namespace  kube system apiVersion  v1 kind  ServiceAccount metadata  name  admin namespace  kube system labels  kubernetes io cluster service   true  addonmanager kubernetes io mode  Reconcile    admin                     token          kubectl secret  n kube system grep admin token admin token d5jsg kubernetes io service account token 3 1d   kubectl secret admin token d5jsg  o jsonpath   data token   n kube system  base64  d         base64         dashboard              token                        kubernetes                                    Kubeconfig                     Kubeconfig                 https          bashboard                                    https           dashboard     https                         ls certs  dashboard crt dashboard key   kubectl create secret generic kubernetes dashboard certs   from file certs  n kube syste",
        "objectID": "post/kubernetes dashboard 升级",
        "date": "2017-11-13T00:00:00.000Z",
        "publishdate": "2017-11-13T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "dashboard",
            "https"
        ],
        "keywords": [
            "kubernetes",
            "dashboard",
            "https",
            "登录",
            "认证",
            "升级"
        ],
        "slug": "update-kubernetes-dashboard-more-secure",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/21689420_1963460803943335_1928791974941294592_n.jpg",
                "desc": "It was an exciting feeling to be there alone at this huge lake, witnessing the spectacle of nature"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 部署策略详解",
        "uri": "post/Kubernetes Deployment 策略",
        "content": "Kubernetes                                                                                                    recreate                  rolling update                        blue green                         canary                         A B  a b testing         HTTP   cookie                A B                         Kubernetes                             Istio Linkerd Traefik       Nginx Haproxy         Kubernetes                                                                      Recreate                 Recreate Deployment                               spec  replicas  3 strategy  type  Recreate                     A        A     B                                                    app v1 yaml  apiVersion  v1 kind  Service metadata  name  my app labels  app  my app spec  type  NodePort ports  name  http port  80 targetPort  http selector  app  my app apiVersion  apps v1 kind  Deployment metadata  name  my app labels  app  my app spec  replicas  3 selector  matchLabels  app  my app strategy  type  Recreate selector  matchLabels  app  my app template  metadata  labels  app  my app version  v1 0 0 annotations  prometheus io scrape   true  prometheus io port   9101  spec  containers  name  my app image  containersol k8s deployment strategies ports  name  http containerPort  8080 name  probe containerPort  8086 env  name  VERSION value  v1 0 0 livenessProbe  httpGet  path   live port  probe initialDelaySeconds  5 periodSeconds  5 readinessProbe  httpGet  path   ready port  probe periodSeconds  5 app v2 yaml         apiVersion  apps v1 kind  Deployment metadata  name  my app labels  app  my app spec  replicas  3 strategy  type  Recreate selector  matchLabels  app  my app template  metadata  labels  app  my app version  v2 0 0 annotations  prometheus io scrape   true  prometheus io port   9101  spec  containers  name  my app image  containersol k8s deployment strategies ports  name  http containerPort  8080 name  probe containerPort  8086 env  name  VERSION value  v2 0 0 livenessProbe  httpGet  path   live port  probe initialDelaySeconds  5 periodSeconds  5 readinessProbe  httpGet  path   ready port  probe periodSeconds  5              Deployment                       VERSION                 Recreate      1         1     2                         kubectl apply  f app v1 yaml service  my app  created deployment apps  my app  created     1          kubectl pods  l app my app NAME READY STATUS RESTARTS AGE my app 7b4874cd75 m5kct 1 1 Running 0 19m my app 7b4874cd75 pc444 1 1 Running 0 19m my app 7b4874cd75 tlctl 1 1 Running 0 19m   kubectl svc my app NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE my app NodePort 10 108 238 76 80 32532 TCP 5m   curl http   127 0 0 1 32532 Host  my app 7b4874cd75 pc444  Version  v1 0 0       1                                       watch kubectl po  l app my app       2       kubectl apply  f app v2 yaml                   Pod              3  Pod      Terminating     3  Pod              Pod                      sleep 0 1  curl http   127 0 0 1 32532  done curl   7  Failed connect 127 0 0 1 32532  Connection refused curl   7  Failed connect 127 0 0 1 32532  Connection refused        Host  my app f885c8d45 sp44p  Version  v2 0 0 Host  my app f885c8d45 t8g7g  Version  v2 0 0 Host  my app f885c8d45 sp44p  Version  v2 0 0                                                                    2                             kubectl delete  l app my app                                          rolling update                                                                            B                   Readiness Probe                                                                      Kubernetes     Deployment               spec  replicas  3 strategy  type  RollingUpdate rollingUpdate  maxSurge  2            Pod maxUnavailable  1              Pod              app v1 yaml                            app v2 rolling update yaml         apiVersion  apps v1 kind  Deployment metadata  name  my app labels  app  my app spec  replicas  10 maxUnavailable   0                                     strategy  type  RollingUpdate rollingUpdate  maxSurge  1 maxUnavailable  0 selector  matchLabels  app  my app template  metadata  labels  app  my app version  v2 0 0 annotations  prometheus io scrape   true  prometheus io port   9101  spec  containers  name  my app image  containersol k8s deployment strategies ports  name  http containerPort  8080 name  probe containerPort  8086 env  name  VERSION value  v2 0 0 livenessProbe  httpGet  path   live port  probe initialDelaySeconds  5 periodSeconds  5 readinessProbe  httpGet  path   ready port  probe                       initialDelaySeconds  15 periodSeconds  5                      2       strategy type RollingUpdate     Deployment                                        1         2             2              1      kubectl apply  f app v1 yaml service  my app  created deployment apps  my app  created     1          kubectl pods  l app my app NAME READY STATUS RESTARTS AGE my app 7b4874cd75 h8c4d 1 1 Running 0 47s my app 7b4874cd75 p4l8f 1 1 Running 0 47s my app 7b4874cd75 qnt7p 1 1 Runnin",
        "objectID": "post/Kubernetes Deployment 策略",
        "date": "2019-01-24T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "deployment"
        ],
        "keywords": [
            "kubernetes",
            "deployment",
            "灰度",
            "蓝绿",
            "AB测试"
        ],
        "slug": "k8s-deployment-strategies",
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/cfhel.jpg",
                "desc": "部署策略"
            }
        ],
        "gitcomment": true,
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes Deployment滚动升级",
        "uri": "post/kubernetes deployment实现滚动升级",
        "content": "k8s      1 7 7                Deployment  Replication Controller rc   Deployment   rc                                                      Deployment                                                     Recreate     Pod      RollingUpdate           Pod                            Deployment       Deployment    Replica Set    Replica Set       Pod   Deployment    rs              Deployment    Kubernetes       Replica Set                              Deployment       Replica Set   3 nginx pod yaml      apiVersion  apps v1beta1 kind  Deployment metadata  name  nginx deploy labels  k8s app  nginx demo spec  replicas  3 template  metadata  labels  app  nginx spec  containers  name  nginx image  nginx 1 7 9 ports  containerPort  80           nginx deployment yaml         kubectl create  f nginx deployment yaml deployment  nginx deploy  created                Deployment    kubectl deployments NAME DESIRED CURRENT UP TO DATE AVAILABLE AGE nginx deploy 3 0 0 0 1s                kubectl deployments NAME DESIRED CURRENT UP TO DATE AVAILABLE AGE nginx deploy 3 3 3 3 4m       Deployment     3 Replica Set           rs pod    kubectl rs NAME DESIRED CURRENT READY AGE nginx deploy 431080787 3 3 3 6m   kubectl pod   show labels NAME READY STATUS RESTARTS AGE LABELS nginx deploy 431080787 53z8q 1 1 Running 0 7m app nginx pod template hash 431080787 nginx deploy 431080787 bhhq0 1 1 Running 0 7m app nginx pod template hash 431080787 nginx deploy 431080787 sr44p 1 1 Running 0 7m app nginx pod template hash 431080787    Deployment yaml    replicas 3         3 POD         Deployment           yaml    nginx     nginx 1 13 3    spec            minReadySeconds  5 strategy  indicate strategy want rolling update type  RollingUpdate rollingUpdate  maxSurge  1 maxUnavailable  1 minReadySeconds  Kubernetes                        Kubernetes                                                 maxSurge                   POD      maxSurage 1 replicas 5    Kubernetes    1    Pod        POD            5 1 POD  maxUnavaible             POD             maxSurge  0        0    maxUnavaible 1    Kubernetes           1 POD                     kubectl apply  f nginx deployment yaml deployment  nginx deploy  configured         rollout            kubectl rollout status deployment nginx deploy Waiting rollout finish  1 3 new replicas updated   deployment  nginx deploy  successfully rolled        kubectl rollout pause deployment        kubectl rollout resume deployment           rs       kubectl rs NAME DESIRED CURRENT READY AGE nginx deploy 2078889897 0 0 0 47m nginx deploy 3297445372 3 3 3 42m nginx deploy 431080787 0 0 0 1h   AGE                  3     yaml                describe               Name  nginx deploy Namespace  default CreationTimestamp  Wed  18 Oct 2017 16 58 52  0800 Labels  k8s app nginx demo Annotations  deployment kubernetes io revision 3 kubectl kubernetes io last applied configuration   apiVersion   apps v1beta1   kind   Deployment   metadata    annotations      labels    k8s app   nginx demo    name   nginx deploy   namespace   defa    Selector  app nginx Replicas  3 desired   3 updated   3 total   3 available   0 unavailable StrategyType  RollingUpdate MinReadySeconds  0 RollingUpdateStrategy  25  max unavailable  25  max surge Pod Template  Labels  app nginx Containers  nginx  Image  nginx 1 13 3 Port  80 TCP Environment  Mounts  Volumes  Conditions  Type Status Reason                    Progressing True NewReplicaSetAvailable Available True MinimumReplicasAvailable OldReplicaSets  NewReplicaSet  nginx deploy 3297445372  3 3 replicas created  Events  FirstSeen LastSeen Count SubObjectPath Type Reason Message                                                                     50m 50m 1 deployment controller Normal ScalingReplicaSet Scaled replica set nginx deploy 2078889897 1 45m 45m 1 deployment controller Normal ScalingReplicaSet Scaled down replica set nginx deploy 2078889897 0 45m 45m 1 deployment controller Normal ScalingReplicaSet Scaled replica set nginx deploy 3297445372 1 39m 39m 1 deployment controller Normal ScalingReplicaSet Scaled down replica set nginx deploy 431080787 2 39m 39m 1 deployment controller Normal ScalingReplicaSet Scaled replica set nginx deploy 3297445372 2 38m 38m 1 deployment controller Normal ScalingReplicaSet Scaled down replica set nginx deploy 431080787 1 38m 38m 1 deployment controller Normal ScalingReplicaSet Scaled replica set nginx deploy 3297445372 3 38m 38m 1 deployment controller Normal ScalingReplicaSet Scaled down replica set nginx deploy 431080787 0   Deployment                 Deployment          POD                                            Deployment                  Deployment         kubectl rollout history deployment nginx deploy deployments  nginx deploy  REVISION CHANGE CAUSE 1 2 3 kubectl apply   filename Desktop nginx deployment yaml   record true              Deployment         record                                 REVISION       kubectl rollout history deployment nginx deploy   revision 3 deployments  nginx deploy  revision  3 Pod Template  Labels  app nginx pod template hash 3297445372 Annotati",
        "objectID": "post/kubernetes deployment实现滚动升级",
        "date": "2017-10-18T00:00:00.000Z",
        "publishdate": "2017-10-18T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "deployment"
        ],
        "keywords": [
            "kubernetes",
            "deployment",
            "滚动",
            "升级",
            "回滚",
            "更新"
        ],
        "bigimg": [
            {
                "src": "/img/posts/22280765_1473377219422921_7316093626113589248_n.jpg",
                "desc": "峨眉山@四川 Sep 30,2017"
            }
        ],
        "slug": "kubernetes-rollout-update",
        "category": "kubernetes",
        "gitcomment": true
    },
    {
        "title": "Kubernetes Downward API 基本用法",
        "uri": "post/kubernetes Downward API用法",
        "content": "k8s                      POD         kubernetes             Downward API     Downward API           POD                             POD                  Volume     POD                                  Downward API   POD   IP          namespace                                        yaml      test env pod yaml  apiVersion  v1 kind  Pod metadata  name  test env pod namespace  kube system spec  containers  name  test env pod image  busybox latest command     bin sh     c    env   env  name  POD_NAME valueFrom  fieldRef  fieldPath  metadata name name  POD_NAMESPACE valueFrom  fieldRef  fieldPath  metadata namespace name  POD_IP valueFrom  fieldRef  fieldPath  status podIP                       env   valueFrom            POD   name   namespace          POD                     metata             POD   IP             POD IP       POD                       status            fieldRef   POD             resourceFieldRef                          kubectl        POD    kubectl create  f test env pod yaml pod  test env pod  created POD                   kubectl logs test env pod  n kube system  grep POD POD_IP 172 30 19 24 POD_NAME test env pod POD_NAMESPACE kube system        POD   IP NAME NAMESPACE               Volume   Downward API                   Volume         POD              Downward API  POD   Label Annotation       Volume                                      yaml     test volume pod yaml  apiVersion  v1 kind  Pod metadata  name  test volume pod namespace  kube system labels  k8s app  test volume node env  test annotations  build  test own  qikqiak spec  containers  name  test volume pod container image  busybox latest command    sh     c   args  true      e  etc podinfo labels     echo  en   n n   cat  etc podinfo labels  fi      e  etc podinfo annotations     echo  en   n n   cat  etc podinfo annotations  fi  sleep 3600  done  volumeMounts  name  podinfo mountPath   etc podinfo volumes  name  podinfo downwardAPI  items  path   labels  fieldRef  fieldPath  metadata labels path   annotations  fieldRef  fieldPath  metadata annotations        labels   annotaions            etc podinfo          POD     kubectl create  f test volume pod yaml pod  test volume pod  created           kubectl logs test volume pod  n kube system k8s app  test volume  node env  test  build  test  kubernetes io config seen  2018 03 02T17 51 10 856356259 08 00  kubernetes io config source  api  own  qikqiak                  POD   Labels   Annotations          etc podinfo      lables   annotations                       POD                   Downward API                      initContainer  POD",
        "objectID": "post/kubernetes Downward API用法",
        "date": "2018-03-02T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "pod",
            "downward"
        ],
        "keywords": [
            "kubernetes",
            "pod",
            "downward",
            "用法"
        ],
        "slug": "use-downward-api-get-pod-info",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1493219686142-5a8641badc78.jpeg",
                "desc": "Draw Something"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "kubernetes PodPreset 的使用",
        "uri": "post/kubernetes PodPreset使用",
        "content": "kubernetes    sentry       sentry     3        POD   WEB Celery Worker Crontab                                                                                    3    3                      3      kubernetes             PodPreset        Pod        Pod                secret volume volume mount              PodPreset      kubernetes 1 8         PodPreset PodPreset     Pod                  API         label selector        Pod   PodPreset  kubernetes           PodPreset       PodPreset                    Pod                           PodPresets    PodPreset                Pod               PodPreset               Pod             Pod              PodPreset              Pod               Pod spec        PodPreset            podpreset admission kubernetes io podpreset           Pod           PodPrestet      PodPreset            Pod  PodPreset          Pod   Kubernetes     Pod Spec    Env EnvFrom   VolumeMounts     Kubernetes    Pod          spec    Volume     Kubernetes    Pod Spec               Pod       Pod Preset                   Pod   Pod Spec       podpreset admission kubernetes io exclude  true      PodPreset    PodPreset            kubernetes 1 8                 PodPreset       PodPreset        podpreset API        admission control NamespaceLifecycle LimitRanger ServiceAccount DefaultStorageClass ResourceQuota PodPreset    runtime config rbac authorization k8s io v1alpha1 true settings k8s io v1alpha1 true      kube apiserver                         kube apiserver                 sentry          PodPreset    sentry podpreset yaml  apiVersion  settings k8s io v1alpha1 kind  PodPreset metadata  name  sentry env namespace  kube ops spec  selector  matchLabels  app  sentry env  name  CFORCEROOT value   true  name  SENTRYREDISHOST value   redis  name  SENTRYREDISPORT value   6379  name  SENTRYREDISDB value   2  name  SENTRYRABBITMQHOST value   rabbitmq 5672  name  SENTRYRABBITMQUSERNAME value   root  name  SENTRYRABBITMQPASSWORD value   root  name  SENTRYSECRETKEY value   xxxxxxxxxxxxx  name  SENTRYPOSTGRESHOST value   postgresql  name  SENTRYPOSTGRESPORT value   5432  name  SENTRYDBNAME value   sentry  name  SENTRYDBUSER value   sentry  name  SENTRYDBPASSWORD value   sentry321           PodPreset        app  sentry          POD                    sentry                sentry deployment yaml  apiVersion  extensions v1beta1 kind  Deployment metadata  labels  app  sentry name  sentry namespace  kube ops spec  template  metadata  labels  app  sentry spec  containers  image  sentry 8 22 0 imagePullPolicy  Always name  sentry ports  containerPort  9000 name  web image  sentry 8 22 0 imagePullPolicy  Always name  sentry worker command    sentry    run    worker   image  sentry 8 22 0 imagePullPolicy  Always name  sentry cron command    sentry    run    cron             kubectl create  f sentry podpreset yaml   kubectl create  f sentry deployment yaml         dashboard       kubectl         sentry POD                     https   kubernetes io docs tasks inject data application podpreset",
        "objectID": "post/kubernetes PodPreset使用",
        "date": "2018-01-23T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "PodPreset"
        ],
        "keywords": [
            "kubernetes",
            "PodPreset",
            "用法"
        ],
        "slug": "how-to-use-podpreset-in-kubernetes",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1498637841888-108c6b723fcb.jpeg",
                "desc": "Transfagarasan by Drone"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes Pod 安全策略(PSP)配置",
        "uri": "post/Kubernetes PSP详解",
        "content": "Kubernetes              Pod                  Pod      PSP                   Pod             Pod      PodSecurityPolicy   Kubernetes API           Kubernetes                                                    kube controller manager      RBAC                         Admission Controller Admission Controller           kube apiserver                                                                           kube apiserver    enable admission plugins             1 10                admision control                       PodSecurityPolicy    kube apiserver     enabled admission plugins         kube apiserver    enable admission plugins NamespaceLifecycle LimitRanger ServiceAccount DefaultStorageClass DefaultTolerationSeconds MutatingAdmissionWebhook ValidatingAdmissionWebhook ResourceQuota PodSecurityPolicy          Kubernetes               PodSecurityPolicy                 PSP                                  Pod                    Nginx   Deployment YAML           nginx yaml  apiVersion  apps v1 kind  Deployment metadata  name  nginx deploy namespace  default labels  app  nginx spec  replicas  1 selector  matchLabels  app  nginx template  metadata  labels  app  nginx spec  containers  name  nginx image  nginx 1 15 4           Deployment    kubectl apply  f nginx yaml deployment apps nginx deploy created        Deployment               default         pod replicaset deployment    kubectl po rs deploy  l app nginx NAME READY STATUS RESTARTS AGE NAME DESIRED CURRENT READY AGE replicaset extensions nginx deploy 77f7d4c6b4 1 0 0 40s NAME READY UP TO DATE AVAILABLE AGE deployment extensions nginx deploy 0 1 0 0 40s      replicaset   deployment           replicaset           Pod           ServiceAccount    ServiceAccount Controller Manager               Pod       Deployment StatefulSet Job    DasemonSet          Pod            kube controller manager                  ServiceAccount                             use service account credentials true                       kubeadm                        kube controller manager                Kubernetes         ServiceAccount    kubectl serviceaccount  n kube system   egrep  o   A Za z0 9    controller  attachdetach controller calico kube controller certificate controller clusterrole aggregation controller cronjob controller daemon set controller deployment controller disruption controller endpoint controller expand controller job controller namespace controller node controller pv protection controller pvc protection controller replicaset controller replication controller resourcequota controller service account controller service controller statefulset controller ttl controller    ServiceAccount                         PodSecurityPolicy                           ServiceAccount                                              2                                    hostNetwork      Pod                             Pod     kube system           Pod                           psp restrictive yaml  apiVersion  policy v1beta1 kind  PodSecurityPolicy metadata  name  restrictive spec  privileged  false hostNetwork  false allowPrivilegeEscalation  false defaultAllowPrivilegeEscalation  false hostPID  false hostIPC  false runAsUser  rule  RunAsAny fsGroup  rule  RunAsAny seLinux  rule  RunAsAny supplementalGroups  rule  RunAsAny volumes   configMap   downwardAPI   emptyDir   persistentVolumeClaim   secret   projected  allowedCapabilities              psp       kubectl apply  f psp restrictive yaml podsecuritypolicy policy restrictive configured               Pod                       Pod                  kube proxy       hostNetwork    kubectl pods  n kube system  l k8s app kube proxy NAME READY STATUS RESTARTS AGE kube proxy 4z4vf 1 1 Running 0 18d   kubectl pods  n kube system kube proxy 4z4vf  o yaml  grep hostNetwork hostNetwork  true                         psp permissive yaml  apiVersion  policy v1beta1 kind  PodSecurityPolicy metadata  name  permissive spec  privileged  true hostNetwork  true hostIPC  true hostPID  true seLinux  rule  RunAsAny supplementalGroups  rule  RunAsAny runAsUser  rule  RunAsAny fsGroup  rule  RunAsAny hostPorts  min  0 max  65535 volumes                psp       kubectl apply  f psp permissive yaml podsecuritypolicy policy permissive configured   kubectl psp NAME PRIV CAPS SELINUX RUNASUSER FSGROUP SUPGROUP READONLYROOTFS VOLUMES permissive true RunAsAny RunAsAny RunAsAny RunAsAny false   restrictive false   RunAsAny RunAsAny RunAsAny RunAsAny false configMap downwardAPI emptyDir persistentVolumeClaim secret projected                      Kubernetes              Pod         ServiceAccount                       RBAC    RBAC       Pod              RBAC                              ClusterRoleBinding     ServiceAccount    replicaset controller                         RoleBinding                             kube system             daemonset controller    kube proxy Pod                                                                              restrictive    ClusterRole        ClusterRoleBinding  restrictive             ServiceAccount       psp restrictive rbac yaml  kind  Cluste",
        "objectID": "post/Kubernetes PSP详解",
        "date": "2019-09-15T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "psp",
            "kubeadm",
            "RBAC"
        ],
        "keywords": [
            "kubernetes",
            "RBAC",
            "psp",
            "kubeadm",
            "安全策略",
            "PodSecurityPolicy"
        ],
        "slug": "setup-psp-in-k8s",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1568397917828-25e02104303f.jpeg",
                "desc": "A wonderful morning in summer!"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes RBAC 详解",
        "uri": "post/kubernetes RBAC 详解",
        "content": "Kubernetes                  ConfigMap Secret                     Kubernetes                                                                RBAC              RBAC  rbac authorization k8s io API Group                 Kubernetes API           RBAC     apiserver        authorization mode RBAC      kubeadm      1 6            RBAC        Master     apiserver    Pod        cat  etc kubernetes manifests kube apiserver yaml       authorization mode Node RBAC                                   apiserver     RBAC API    Kubernetes                          API         CRUD Create Read Update Delete                                  Pods ConfigMaps Deployments Nodes Secrets Namespaces                    create delete list update edit watch exec            API Group        Pods   Core API Group  Deployements   apps API Group   Kubernetes   RBAC                                 Rule              API Group             Role   ClusterRole                     Rules              Role                        namespace       ClusterRole                             Role   ClusterRole  Kubernetes            API              Pod ConfigMap                                kubectl           Subject                        3          User Account                                     KeyStone   Goolge                                                            API       Group                              cluster admin Service Account        Kubernetes API              namespace                           API                                ServiceAccount             RoleBinding   ClusterRoleBinding                        Subject      Role                                       RoleBinding         namespace             ClusterRoleBinding         namespace                  RBAC                  namespace             User Account      kube system         username  haimaxy group  youdianzhishi  1                   Kubernetes   User Account   API                                                                     OpenSSL        User              cfssl           haimaxy            haimaxy key    openssl genrsa  out haimaxy key 2048                         haimaxy csr          subj           CN      O        openssl req  new  key haimaxy key  out haimaxy csr  subj   CN haimaxy O youdianzhis         Kubernetes   CA       kubeadm      CA       etc kubernetes pki                                        CA               ca crt ca key                                      500     openssl x509  req  in haimaxy csr  CA  etc kubernetes pki ca crt  CAkey  etc kubernetes pki ca key  CAcreateserial  out haimaxy crt  days 500                             ls haimaxy csr haimaxy key haimaxy crt                                      Context     kubectl config set credentials haimaxy   client certificate haimaxy crt   client key haimaxy key           haimaxy                Context    kubectl config set context haimaxy context   cluster kubernetes   namespace kube system   user haimaxy          haimaxy                           kubectl                                       kubectl pods   context haimaxy context Error server  Forbidden   pods forbidden  User  haimaxy  cannot list pods namespace  default   2                                       YAML              Deployment Pod ReplicaSets           haimaxy role yaml  apiVersion  rbac authorization k8s io v1 kind  Role metadata  name  haimaxy role namespace  kube system rules  apiGroups        extensions    apps   resources    deployments    replicasets    pods   verbs    get    list    watch    create    update    patch    delete                  Pod   core    API Group  YAML          Deployment   apps    API Group ReplicaSets  extensions   API Group                   rules     apiGroups            API Group       extensions    apps     verbs                                                               Role    kubectl create  f haimaxy role yaml                haimaxy context                3           Role                   Role        haimaxy                      RoleBinding     kube system              haimaxy role       haimaxy       haimaxy rolebinding yaml  apiVersion  rbac authorization k8s io v1 kind  RoleBinding metadata  name  haimaxy rolebinding namespace  kube system subjects  kind  User name  haimaxy apiGroup     roleRef  kind  Role name  haimaxy role apiGroup        YAML        subjects                                   User    haimaxy   kubectl             kubectl create  f haimaxy rolebinding yaml  4                 haimaxy context             kubectl pods   context haimaxy context                kubectl         namespace                                  n default        kubectl   context haimaxy context pods   namespace default Error server  Forbidden   pods forbidden  User  haimaxy  cannot list pods namespace  default                     default                        namespace  ServiceAccount                                     subjects               ServiceAccount                      kube system           pods   deployments         ServiceAccount       kubectl create sa haimaxy sa  n kube system           YAML           ",
        "objectID": "post/kubernetes RBAC 详解",
        "subtitle": "深入理解 Kubernetes RBAC 的用法",
        "date": "2018-06-22T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "RBAC"
        ],
        "keywords": [
            "kubernetes",
            "RBAC"
        ],
        "slug": "use-rbac-in-k8s",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1529579134665-75dfc9c5ccef.jpeg",
                "desc": "China"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 下升级Prometheus2.0",
        "uri": "post/kubernetes 下升级prometheus2.0",
        "content": "prometheus2 0                                https   prometheus io blog 2017 11 08 announcing prometheus 2 0              2 0                                 kubernetes   prometheus               Kubernetes  Prometheus               yaml     github                  1 8 2       RABC           Prometheus    ServiceAccount  apiVersion  v1 kind  ServiceAccount metadata  name  prometheus namespace  kube ops apiVersion  rbac authorization k8s io v1beta1 kind  ClusterRole metadata  name  prometheus namespace  kube ops rules  apiGroups       resources  nodes nodes proxy services endpoints pods verbs    get    list    watch   nonResourceURLs     metrics   verbs    get   apiVersion  rbac authorization k8s io v1beta1 kind  ClusterRoleBinding metadata  name  prometheus namespace  kube ops roleRef  apiGroup  rbac authorization k8s io kind  ClusterRole name  prometheus subjects  kind  ServiceAccount name  prometheus namespace  kube ops        Prometheus       2 0 0                                               storage local path  storage tsdb path     apiVersion  extensions v1beta1 kind  Deployment metadata  labels  k8s app  prometheus name  prometheus namespace  kube ops spec  replicas  1 template  metadata  labels  k8s app  prometheus spec  serviceAccountName  prometheus containers  image  prom prometheus v2 0 0 name  prometheus command    bin prometheus  args     config file  etc prometheus prometheus yml     storage tsdb path  prometheus     storage tsdb retention 15d  ports  containerPort  9090 protocol  TCP name  http volumeMounts  mountPath    prometheus  name  data subPath  prometheus data mountPath    etc prometheus  name  config volume resources  requests  cpu  100m memory  100Mi limits  cpu  200m memory  1Gi volumes  name  data persistentVolumeClaim  claimName  opspvc configMap  name  prometheus config name  config volume   args                      kubernetessdconfigs    api_servers                  apiVersion  v1 kind  ConfigMap metadata  name  prometheus config namespace  kube ops data  prometheus yml    global  scrape_interval  30s scrape_timeout  30s scrape_configs  job_name   prometheus  static_configs  targets    localhost 9090   job_name   kubernetes apiservers  kubernetessdconfigs  role  endpoints scheme  https tls_config  ca_file   var run secrets kubernetes io serviceaccount ca crt bearertokenfile   var run secrets kubernetes io serviceaccount token relabel_configs  sourcelabels   metakubernetesnamespace  metakubernetesservicename  metakubernetesendpointportname  action  keep regex  default kubernetes https job_name   kubernetes nodes  scheme  https tls_config  ca_file   var run secrets kubernetes io serviceaccount ca crt bearertokenfile   var run secrets kubernetes io serviceaccount token kubernetessdconfigs  role  node relabel_configs  action  labelmap regex  metakubernetesnodelabel     targetlabel  address_ replacement  kubernetes default svc 443 sourcelabels   metakubernetesnodename  regex       targetlabel  metricspath replacement   api v1 nodes   1  proxy metrics job_name   kubernetes cadvisor  scheme  https tls_config  ca_file   var run secrets kubernetes io serviceaccount ca crt bearertokenfile   var run secrets kubernetes io serviceaccount token kubernetessdconfigs  role  node relabel_configs  action  labelmap regex  metakubernetesnodelabel     targetlabel  address_ replacement  kubernetes default svc 443 sourcelabels   metakubernetesnodename  regex       targetlabel  metricspath replacement   api v1 nodes   1  proxy metrics cadvisor job_name   kubernetes node exporter  scheme  http tls_config  ca_file   var run secrets kubernetes io serviceaccount ca crt bearertokenfile   var run secrets kubernetes io serviceaccount token kubernetessdconfigs  role  node relabel_configs  action  labelmap regex  metakubernetesnodelabel     sourcelabels   metakubernetes_role  action  replace targetlabel  kubernetesrole sourcelabels   address_  regex        10250  replacement     1  31672  targetlabel  address_          prometheus     targets            grafana               Kubernetes  Prometheus        https   github com cnych k8s repo               Kubernetes",
        "objectID": "post/kubernetes 下升级prometheus2.0",
        "date": "2017-11-22T00:00:00.000Z",
        "publishdate": "2017-11-22T00:00:00.000Z",
        "slug": "update-prometheus-2-in-kubernetes",
        "tags": [
            "kubernetes",
            "prometheus",
            "grafana"
        ],
        "keywords": [
            "kubernetes",
            "prometheus2",
            "grafana",
            "升级"
        ],
        "bigimg": [
            {
                "src": "/img/posts/22277538_1987368801539992_4665344475080425472_n.jpg",
                "desc": "It is always a new adventure, and I am always impressed with how beautiful nature is"
            }
        ],
        "category": "kubernetes",
        "gitcomment": true
    },
    {
        "title": "kubernetes 如何发音？",
        "uri": "post/kubernetes 如何发音",
        "content": "kubernetes                       kub  netis                         github issue          https   github com kubernetes kubernetes issues 44308       kubernetes  k8s                                                                       Algorithms    A9  kubernetes   k8s     k    8     s     k8s          K8s abbreviation derived replacing 8 letters  ubernete  8",
        "objectID": "post/kubernetes 如何发音",
        "subtitle": "kubernetes 如何发音？为何缩写为 k8s？",
        "date": "2018-08-19T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "发音",
            "k8s"
        ],
        "keywords": [
            "kubernetes",
            "发音",
            "k8s"
        ],
        "slug": "kubernetes-how-to-pronunciation",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1521312793923-3d0b6e488ecd.jpeg",
                "desc": "Abandoned Boat in São Tomé"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "kubernetes 持久化存储(一)",
        "uri": "post/kubernetes 数据持久化(一)",
        "content": "hostPath    emptyDir                                                                         CPU                                        Kubernetes      PV   PVC                        PV      PersistentVolume                      PV                                      Ceph GlusterFS NFS                       PVC      PersistentVolumeClaim         PVC            PVC   Pod      Pod        PVC      PV    Pod      CPU       PVC                                                    PVC          PVC                                                                                   Kubernetes                 StorageClass    StorageClass                                            StorageClass                                                    NFS                      NFS                10 151 30 57     NFS          data k8s          systemctl stop firewalld service   systemctl disable firewalld service      nfs   yum  y install nfs utils rpcbind             chmod 755  data k8s     nfs nfs           etc exports                       vi  etc exports  data k8s   rw sync norootsquash         data k8s                                      IP        rw       sync               norootsquash     NFS               root                       UID   GID      nobody       nfs                                nfs     rpc    rpc                                           rpcbind   systemctl start rpcbind service   systemctl enable rpcbind   systemctl status rpcbind   rpcbind service   RPC bind service Loaded  loaded   usr lib systemd system rpcbind service  disabled  vendor preset  enabled  Active  active  running  Tue 2018 07 10 20 57 29 CST  1min 54s ago Process  17696 ExecStart  sbin rpcbind  w  RPCBIND_ARGS  code exited  status 0 SUCCESS  Main PID  17697  rpcbind  Tasks  1 Memory  1 1M CGroup   system slice rpcbind service   17697  sbin rpcbind  w Jul 10 20 57 29 master systemd 1   Starting RPC bind service    Jul 10 20 57 29 master systemd 1   Started RPC bind service        Started               nfs       systemctl start nfs service   systemctl enable nfs   systemctl status nfs   nfs server service   NFS server services Loaded  loaded   usr lib systemd system nfs server service  enabled  vendor preset  disabled  Drop In   run systemd generator nfs server service d   order with mounts conf Active  active  exited  Tue 2018 07 10 21 35 37 CST  14s ago Main PID  32067  code exited  status 0 SUCCESS  CGroup   system slice nfs server service Jul 10 21 35 37 master systemd 1   Starting NFS server services    Jul 10 21 35 37 master systemd 1   Started NFS server services       Started     NFS Server                             rpcinfo  p grep nfs 100003 3 tcp 2049 nfs 100003 4 tcp 2049 nfs 100227 3 tcp 2049 nfs_acl 100003 3 udp 2049 nfs 100003 4 udp 2049 nfs 100227 3 udp 2049 nfs_acl               cat  var lib nfs etab  data k8s   rw sync wdelay hide nocrossmnt secure norootsquash noallsquash nosubtreecheck securelocks acl nopnfs anonuid 65534 anongid 65534 sec sys secure norootsquash noallsquash          nfs server                10 151 30 62     nfs          nfs    nfs                systemctl stop firewalld service   systemctl disable firewalld service      nfs   yum  y install nfs utils rpcbind                    rpc      nfs    systemctl start rpcbind service   systemctl enable rpcbind service   systemctl start nfs service   systemctl enable nfs service                            nfs            nfs            showmount  e 10 151 30 57 Export list 10 151 30 57   data k8s                    mkdir  p  root course kubeadm data   nfs                 mount  t nfs 10 151 30 57  data k8s  root course kubeadm data                                nfs                        touch  root course kubeadm data test txt     nfs          ls  ls  data k8s  total 4 4  rw r  r    1 root root 4 Jul 10 21 50 test txt         test txt             nfs        PV       NFS                 PV   PVC   PV                                               PV       nfs         1G             ReadWriteOnce       Recyle     YAML       pv1 demo yaml  apiVersion  v1 kind  PersistentVolume metadata  name  pv1 spec  capacity  storage  1Gi accessModes  ReadWriteOnce persistentVolumeReclaimPolicy  Recycle nfs  path   data k8s server  10 151 30 57 Kubernetes     PV             Ceph GlusterFs NFS    HostPath       HostPath                               Kubernetes PV                                                                   kubectl         kubectl create  f pv1 demo yaml persistentvolume  pv1  created   kubectl pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE pv1 1Gi RWO Recycle Available 12s        pv1             Available    pv1        PVC                       Capacity               PV                 PV   capacity                            storage 1Gi           IOPS            AccessModes       AccessModes      PV                                            ReadWriteOnce RWO                   ReadOnlyMany ROX                 ReadWriteMany RWX                         PV                                                      Volume            persistentVolu",
        "objectID": "post/kubernetes 数据持久化(一)",
        "subtitle": "PV 和 PVC 的使用",
        "date": "2018-07-18T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "pv",
            "pvc",
            "nfs",
            "StorageClass"
        ],
        "keywords": [
            "kubernetes",
            "pv",
            "pvc",
            "nfs",
            "StorageClass",
            "持久化",
            "存储"
        ],
        "slug": "kubernetes-persistent-volume1",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1531826912410-2811a685b572.jpeg",
                "desc": "Moony colors"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "kubernetes 持久化存储(二)",
        "uri": "post/kubernetes 数据持久化(二)",
        "content": "PV   PVC             PV                      PVC              PV                                                                            StatefulSet                PV                       PV             StorageClass     Provisioner     StorageClass                                nfs              nfs client               Provisioner                nfs                         PV        PV    namespace    pvcName    pvName            NFS                   PV       archieved   namespace    pvcName    pvName           NFS            nfs client              nfs                       10 151 30 57         data k8s            nfs client             nfs client                    Deployment                   nfs    nfs client yaml  kind  Deployment apiVersion  extensions v1beta1 metadata  name  nfs client provisioner spec  replicas  1 strategy  type  Recreate template  metadata  labels  app  nfs client provisioner spec  serviceAccountName  nfs client provisioner containers  name  nfs client provisioner image  quay io external_storage nfs client provisioner latest volumeMounts  name  nfs client root mountPath   persistentvolumes env  name  PROVISIONER_NAME value  fuseim pri ifs name  NFS_SERVER value  10 151 30 57 name  NFS_PATH value   data k8s volumes  name  nfs client root nfs  server  10 151 30 57 path   data k8s           NFSSERVER   NFSPATH             nfs                      nfs client provisioner  serviceAccount             sa             nfs client sa yaml  apiVersion  v1 kind  ServiceAccount metadata  name  nfs client provisioner kind  ClusterRole apiVersion  rbac authorization k8s io v1 metadata  name  nfs client provisioner runner rules  apiGroups       resources    persistentvolumes   verbs    get    list    watch    create    delete   apiGroups       resources    persistentvolumeclaims   verbs    get    list    watch    update   apiGroups    storage k8s io   resources    storageclasses   verbs    get    list    watch   apiGroups       resources    events   verbs    list    watch    create    update    patch   apiGroups       resources    endpoints   verbs    create    delete    get    list    watch    patch    update   kind  ClusterRoleBinding apiVersion  rbac authorization k8s io v1 metadata  name  run nfs client provisioner subjects  kind  ServiceAccount name  nfs client provisioner namespace  default roleRef  kind  ClusterRole name  nfs client provisioner runner apiGroup  rbac authorization k8s io             nfs client provisioner  ServiceAccount           nfs client provisioner runner  ClusterRole   ClusterRole              persistentvolumes                     ServiceAccount      PV      nfs client   Deployment                 StorageClass     nfs client class yaml  apiVersion  storage k8s io v1 kind  StorageClass metadata  name  course nfs storage provisioner  fuseim pri ifs   choose name  match deployment s env PROVISIONER_NAME            course nfs storage  StorageClass        provisioner           Deployment    PROVISIONER_NAME                               kubectl create  f nfs client yaml   kubectl create  f nfs client sa yaml   kubectl create  f nfs client class yaml                 kubectl pods NAME READY STATUS RESTARTS AGE     nfs client provisioner 7648b664bc 7f9pk 1 1 Running 0 7h       kubectl storageclass NAME PROVISIONER AGE course nfs storage fuseim pri ifs 11s    PVC    StorageClass                            PV        PVC     test pvc yaml  kind  PersistentVolumeClaim apiVersion  v1 metadata  name  test pvc spec  accessModes  ReadWriteMany resources  requests  storage  1Mi          PVC      ReadWriteMany          1Mi                 PVC              StorageClass                       PVC              PV                     PV                        StorageClass                 PV           PVC         StorageClass                annotations         kind  PersistentVolumeClaim apiVersion  v1 metadata  name  test pvc annotations  volume beta kubernetes io storage class   course nfs storage  spec  accessModes  ReadWriteMany resources  requests  storage  1Mi                course nfs storage   StorageClass   Kubernetes              kubectl patch         kubectl patch storageclass course nfs storage  p    metadata     annotations    storageclass kubernetes io is default class   true                                                          kubectl create  f test pvc yaml persistentvolumeclaim  test pvc  created   kubectl pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE     test pvc Bound pvc 73b5ffd2 8b4b 11e8 b585 525400db4df7 1Mi RWX course nfs storage 2m                test pvc   PVC              Bound              VOLUME           STORAGECLASS                    StorageClass   course nfs storage        PV        kubectl pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE     pvc 73b5ffd2 8b4b 11e8 b585 525400db4df7 1Mi RWX Delete Bound default test pvc course nfs storage 8m                       PV         RWX       Delete    PV                         StorageClass             StorageClass                                    StorageClass       PVC      te",
        "objectID": "post/kubernetes 数据持久化(二)",
        "subtitle": "StorageClass 的使用",
        "date": "2018-07-19T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "pv",
            "pvc",
            "nfs",
            "StorageClass"
        ],
        "keywords": [
            "kubernetes",
            "pv",
            "pvc",
            "nfs",
            "StorageClass",
            "持久化",
            "存储",
            "StatefulSet"
        ],
        "slug": "kubernetes-persistent-volume2",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1531902118092-4d55c50cc5fa.jpeg",
                "desc": "StorageClass"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "kubernetes 日志架构",
        "uri": "post/Kubernetes 日志收集",
        "content": "Kubernetes                                                                                                                                                                              stdout   stderr                             JSON                docker logs    kubectl logs                                                          Pod                                           Pod                    cluster level logging        Kubernetes                             Kubernetes                Kubernetes                                 apiVersion  v1 kind  Pod metadata  name  counter spec  containers  name  count image  busybox args    bin sh   c   i 0  true  echo   i    date    i    i 1    sleep 1  done            counter pod yaml   Pod                 Pod    kubectl create  f counter pod yaml pod  counter  created            kubectl logs             kubectl logs counter 0  Thu Dec 27 15 47 04 UTC 2018 1  Thu Dec 27 15 47 05 UTC 2018 2  Thu Dec 27 15 47 06 UTC 2018 3  Thu Dec 27 15 47 07 UTC 2018        Kubernetes      Kubernetes                          3                    agent         Pod       sidecar                                                           agent              agent                                 agent                                          agent                   DaemonSet                            agent                                                                                       stdout   stderr            sidecar                                               stdout   stderr                           JSON                   agent                                                                     sidecar                          Pod         sidecar                          stdout                                sidecar                                                     stdout    stderr           kubectl logs                 Pod                      apiVersion  v1 kind  Pod metadata  name  counter spec  containers  name  count image  busybox args   bin sh  c   i 0  true  echo   i    date       var log 1 log  echo    date  INFO  i      var log 2 log  i    i 1    sleep 1  done volumeMounts  name  varlog mountPath   var log volumes  name  varlog emptyDir        Pod                   sidecar                               stdout           YAML          two files counter pod streaming sidecar yaml  apiVersion  v1 kind  Pod metadata  name  counter spec  containers  name  count image  busybox args   bin sh  c   i 0  true  echo   i    date       var log 1 log  echo    date  INFO  i      var log 2 log  i    i 1    sleep 1  done volumeMounts  name  varlog mountPath   var log name  count log 1 image  busybox args    bin sh   c   tail  n 1  f  var log 1 log   volumeMounts  name  varlog mountPath   var log name  count log 2 image  busybox args    bin sh   c   tail  n 1  f  var log 2 log   volumeMounts  name  varlog mountPath   var log volumes  name  varlog emptyDir             Pod    kubectl create  f two files counter pod streaming sidecar yaml pod  counter  created                              kubectl logs counter count log 1 0  Mon Jan 1 00 00 00 UTC 2001 1  Mon Jan 1 00 00 01 UTC 2001 2  Mon Jan 1 00 00 02 UTC 2001       kubectl logs counter count log 2 Mon Jan 1 00 00 00 UTC 2001 INFO 0 Mon Jan 1 00 00 01 UTC 2001 INFO 1 Mon Jan 1 00 00 02 UTC 2001 INFO 2                  agent                                                                             stdout                               sidecar        agent                                                   sidecar                                      sidecar                                    Pod                        kubectl logs                  kubelet                Stackdriver    fluentd                                     ConfigMap      Kubernetes       fluentd            ConfigMap        apiVersion  v1 kind  ConfigMap metadata  name  fluentd config data  fluentd conf    type tail format none path  var log 1 log pos_file  var log 1 log pos tag count format1 type tail format none path  var log 2 log pos_file  var log 2 log pos tag count format2 type google_cloud                  var log 1 log    var log 2 log            google_cloud            Stackdriver                               fluentd             apiVersion  v1 kind  Pod metadata  name  counter spec  containers  name  count image  busybox args   bin sh  c   i 0  true  echo   i    date       var log 1 log  echo    date  INFO  i      var log 2 log  i    i 1    sleep 1  done volumeMounts  name  varlog mountPath   var log name  count agent image  k8s gcr io fluentd gcp 1 30 env  name  FLUENTD_ARGS value   c  etc fluentd config fluentd conf volumeMounts  name  varlog mountPath   var log name  config volume mountPath   etc fluentd config volumes  name  varlog emptyDir     name  config volume configMap  name  fluentd config     Pod          count agent     count                                                      fluentd    logstash fluent bit                                                                                  Kubernetes                                                   https   k",
        "objectID": "post/Kubernetes 日志收集",
        "date": "2018-12-28T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "ElasticSearch",
            "fluentd"
        ],
        "slug": "kubernetes-logs-architecture",
        "keywords": [
            "kubernetes",
            "EFK",
            "ElasticSearch",
            "Kibana",
            "Fluentd",
            "架构"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/xlj4j.jpg",
                "desc": "Maple leaves"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "kubernetes 日志收集方案",
        "uri": "post/kubernetes 日志收集方案",
        "content": "kubernetes                     EFK                     Log Service    Log                                                                                    DT                         ELK  EFK          ElasticSearch                                                                     ES             ElasticSearch                              Kubernetes                                     Project  k8slog project       Agent           fluentd     curl http   aliacs k8s oss aliyuncs com conf 2Flogging 2Ffluentd pilot yml   fluentd pilot yml    yaml       env                FLUENTDOUTPUT      aliyunsls                  ALIYUNSLS_PROJECT                  project     ALIYUNSLSREGIONENDPOINT                                                       ALIYUNSLSACCESSKEY_ID           accesskeyid  ALIYUNSLSACCESSKEY_SECRET           accesskeysecret  ALIYUNSLSNEEDCREATE_LOGSTORE    Logstore              true         apiVersion  extensions v1beta1 kind  DaemonSet metadata  name  fluentd pilot namespace  kube system labels  k8s app  fluentd pilot kubernetes io cluster service   true  spec  template  metadata  labels  k8s app  fluentd es kubernetes io cluster service   true  version  v1 22 annotations  scheduler alpha kubernetes io critical pod     scheduler alpha kubernetes io tolerations      key    node alpha kubernetes io ismaster    effect    NoSchedule     spec  containers  name  fluentd pilot image  registry cn hangzhou aliyuncs com wangbs fluentd pilot latest resources  limits  memory  200Mi requests  cpu  100m memory  200Mi env  name   FLUENTD_OUTPUT  value   aliyun_sls  name   ALIYUNSLS_PROJECT  value   k8slog project  name   ALIYUNSLSREGIONENDPOINT  value   cn shanghai log aliyuncs com  name   ALIYUNSLSACCESSKEY_ID  value   xxxxxxx  name   ALIYUNSLSACCESSKEY_SECRET  value   xxxxxx  name   ALIYUNSLSNEEDCREATE_LOGSTORE  value   true  volumeMounts  name  sock mountPath   var run docker sock name  root mountPath   host readOnly  true terminationGracePeriodSeconds  30 volumes  name  sock hostPath  path   var run docker sock name  root hostPath  path                     kubectl ds  n kube system NAME DESIRED CURRENT READY UP TO DATE AVAILABLE NODE SELECTOR AGE fluentd pilot 4 4 4 4 4 5h           Fluentd                          aliyunlogsfluentd stdout                 fluentd           Project  Logstore     Logstore                   Logstore stdout                                    Fluentd pilot              kubedns         aliyunlogskubedns stuout     kubedns                                  EFK           Kubernetes     EFK",
        "objectID": "post/kubernetes 日志收集方案",
        "date": "2017-11-22T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "ElasticSearch",
            "阿里云"
        ],
        "slug": "kubernetes-logs-collect",
        "keywords": [
            "kubernetes",
            "EFK",
            "ElasticSearch",
            "Kibana",
            "Fluentd",
            "阿里云"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/23734057_146614452628759_6006637352594702336_n.jpg",
                "desc": "Cherish all moments."
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 服务质量 Qos 解析",
        "uri": "post/kubernetes 服务质量",
        "content": "QoS  Quality Service                                    kubernetes               QoS Quality Service    pod               pod                   CPU                 kubernetes            QoS           QoS     Guaranteed Burstable   Best Effort            Guaranteed             pod       Pod             CPU      limits pod           CPU      requests   limits         requests  limits requests   0  pod            limits  containers  name  foo resources  limits  cpu  10m memory  1Gi name  bar resources  limits  cpu  100m memory  100Mi pod            requests   limits        requests  limits  containers  name  foo resources  limits  cpu  10m memory  1Gi requests  cpu  10m memory  1Gi name  bar resources  limits  cpu  100m memory  100Mi requests  cpu  100m memory  100Mi   foo bar resources requests limits     pod QoS    Guaranteed  Burstable       pod         requests limits        pod QoS  Burstable    foo   resource    bar     containers  name  foo resources  limits  cpu  10m memory  1Gi requests  cpu  10m memory  1Gi name  bar   foo     limits    bar   CPU limits  containers  name  foo resources  limits  memory  1Gi name  bar resources  limits  cpu  100m          requests    limits  limits      resource           limits    requests  requests    limits  Best Effort          Pod      resources    requests limits  pod QoS  Best Effort    foo   bar    requests limits  containers  name  foo resources  name  bar resources    QoS         Kubernetes   cgroup pod  QoS          kill      pod            OOM       OOM      0 1000 OOM      OOM_ADJ          Guaranteed    Pod OOMADJ       998   Best Effort    Pod OOMADJ      1000   Burstable    Pod OOM_ADJ     2 999     kuberntes        kubelet docker OOMADJ       999      OOM kill  OOMADJ             OOM        pod                   kill    OOM_ADJ    999   kubernetes      OOM  kill   QoS pods kill       Best Effort pods                pods     kill   Burstable pods               Best Effort          kill        pods    kill    Guaranteed pods               Burstable   Best Effort          kill        pods    kill    QoS               QoS pods       Guaranteed                                                   Guaranteed                  Burstable Best Effort",
        "objectID": "post/kubernetes 服务质量",
        "subtitle": "Pod 资源 requests 和 limits 如何配置?",
        "date": "2018-09-07T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "Qos"
        ],
        "keywords": [
            "kubernetes",
            "Qos"
        ],
        "slug": "kubernetes-qos-usage",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1536236155319-1edab471917c.jpeg",
                "desc": "Studio, Warsaw"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "kubernetes 下实现socket.io 的集群模式",
        "uri": "post/kubernetes 集群下实现socket.io 的集群模式",
        "content": "socket io                                                                                             kubernetes          socket io                 https   github com cnych k8s socketio cluster demo                        kubernetes                     POD         socket io                  POD                                                         POD                    POD                                            Session ID                           socket io                       Nginx ip_hash            ip        hash                                         kubernetes        traefik ingress                          Nginx                                             sessionAffinity               sessionAffinity    sessionAffinity                                           kubernetes   sessionAffinity          Service       service spec sessionAffinity    ClientIP       sessionAffinity None                     ClientIP      ip_hash              traefik ingress       Service     traefik annotation  apiVersion  v1 kind  Service metadata  name  socket demo namespace  kube apps annotations  traefik backend loadbalancer stickiness   true  traefik backend loadbalancer stickiness cookieName   socket  labels  k8s app  socket demo spec  sessionAffinity   ClientIP  ports  name  socketio port  80 protocol  TCP targetPort  3000 selector  k8s app  socket demo      annotations sessionAffinity                socket io                     hostname                       IP                   sessionAffinity                                                         hostname                POD                                              socket io                multiple Socket IO nodes accepting connections  want broadcast events everyone  or even everyone certain room  you ll need passing messages processes computers    interface charge routing messages call Adapter  implement own top socket io adapter  by inheriting it  use one provide top Redis  socket io redis  var io   require  socket io   3000   var redis   require  socket io redis    io adapter redis   host   localhost   port  6379                                            socket io adapter         socket io redis        socket io redis   adapter                      const express   require  express    const socketRedis   require  socket io redis    const os   require  os    const app   express    const http   require  http   Server app   const io   require  socket io   http   const port   process env PORT    3000  app use express static __dirname     static     app engine  html   require  ejs   renderFile   app set  view engine    html    app get      function  req  res    res render  index      os   os hostname           function onConnection socket   socket on  drawing    data     socket broadcast emit  drawing   data      io adapter socketRedis  host   redis   port  6379     io on  connection   onConnection   http listen port        console log  listening port     port       kubernetes    yaml      apiVersion  extensions v1beta1 kind  Deployment metadata  name  socket demo namespace  kube apps labels  k8s app  socket demo spec  replicas  3 template  metadata  labels  k8s app  socket demo spec  containers  image  cnych socketdemo k8s imagePullPolicy  Always name  socketdemo ports  containerPort  3000 protocol  TCP resources  limits  cpu  100m memory  100Mi requests  cpu  50m memory  50Mi apiVersion  v1 kind  Service metadata  name  socket demo namespace  kube apps annotations  traefik backend loadbalancer stickiness   true  traefik backend loadbalancer stickiness cookieName   socket  labels  k8s app  socket demo spec  sessionAffinity  None ports  name  socketio port  80 protocol  TCP targetPort  3000 selector  k8s app  socket demo                                     kubernetes     socket io            traefik backend loadbalancer stickiness cookieName                                                     socket io          polling         socket io          trasports   polling    websocket     sessionAffinity   traefik  cookieName                      sessionAffinity   None     traefik annotaions       socket io redis          join leave          adapter   remoteJoin remoteLeave                                      traefik sticky sessions kubernetes service socket io docs socket io redis",
        "objectID": "post/kubernetes 集群下实现socket.io 的集群模式",
        "date": "2017-11-21T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "socket.io",
            "cluster"
        ],
        "keywords": [
            "kubernetes",
            "socket.io",
            "cluster",
            "集群",
            "nodejs"
        ],
        "slug": "socketio-multiple-nodes-in-kubernetes",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/23498828_2151213871773296_819155850823204864_n.jpg",
                "desc": "A pal and a skateboard and headed outside in South Australia."
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes使用Prometheus搭建监控平台",
        "uri": "post/Kubernetes使用Prometheus搭建监控平台",
        "content": "Kubernetes                                                          Dashboard                                           Pod          Kubernetes          influxdb grafana heapster                    Prometheus         Prometheus   k8s                     Kubernetes                k8s                                       kubernetes            Prometheus    Prometheus SoundCloud                 Google           Google Kubernetes             influxdb                                                              metrics            Prometheus              Prometheus       ConfigMap      Prometheus         apiVersion  v1 kind  ConfigMap metadata  name  prometheus config namespace  kube ops data  prometheus yml    global  scrape_interval  30s scrape_timeout  30s scrape_configs  job_name   prometheus  static_configs  targets    localhost 9090   job_name   kubernetes nodes cadvisor  tls_config  ca_file   var run secrets kubernetes io serviceaccount ca crt bearertokenfile   var run secrets kubernetes io serviceaccount token kubernetessdconfigs  api_servers   https   10 43 0 1  in_cluster  true role  node relabel_configs  action  labelmap regex  metakubernetesnodelabel     sourcelabels   metakubernetes_role  action  replace targetlabel  kubernetesrole sourcelabels   address_  regex        10250  replacement     1  4194  targetlabel  address_ job_name   kubernetes apiserver cadvisor  tls_config  ca_file   var run secrets kubernetes io serviceaccount ca crt bearertokenfile   var run secrets kubernetes io serviceaccount token kubernetessdconfigs  api_servers   https   10 43 0 1  in_cluster  true role  apiserver relabel_configs  action  labelmap regex  metakubernetesnodelabel     sourcelabels   metakubernetes_role  action  replace targetlabel  kubernetesrole sourcelabels   address_  regex        10250  replacement     1  10255  targetlabel  address_ job_name   kubernetes node exporter  tls_config  ca_file   var run secrets kubernetes io serviceaccount ca crt bearertokenfile   var run secrets kubernetes io serviceaccount token kubernetessdconfigs  api_servers   https   10 43 0 1  in_cluster  true role  node relabel_configs  action  labelmap regex  metakubernetesnodelabel     sourcelabels   metakubernetes_role  action  replace targetlabel  kubernetesrole sourcelabels   address_  regex        10250  replacement     1  31672  targetlabel  address_           prometheus config yaml           kubectl create  f prometheus config yaml     job_name kubernetes apiserver cadvisor   10250     10255 10255   kubelet   metrics        curl     curl http    10255 metrics job_name kubernetes nodes cadvisor   10250     4194 4194   kubernetes           k8s 1 7      10255       1 7   cadvisor          kubelet                job_name kubernetes node exporter   10250    31672     node exporter   NodePort                    node exporter                       DaemonSet     PODS  apiVersion  extensions v1beta1 kind  DaemonSet metadata  name  node exporter namespace  kube ops labels  k8s app  node exporter spec  template  metadata  labels  k8s app  node exporter spec  containers  image  prom node exporter name  node exporter ports  containerPort  9100 protocol  TCP name  http apiVersion  v1 kind  Service metadata  labels  k8s app  node exporter name  node exporter namespace  kube ops spec  ports  name  http port  9100 nodePort  31672 protocol  TCP type  NodePort selector  k8s app  node exporter         node exporter yaml           kubectl create  f node exporter yaml      Deployment  Prometheus yaml      apiVersion  extensions v1beta1 kind  Deployment metadata  labels  name  prometheus deployment name  prometheus namespace  kube ops spec  replicas  1 template  metadata  labels  app  prometheus spec  containers  image  prom prometheus v1 0 1 name  prometheus command    bin prometheus  args    config file  etc prometheus prometheus yml    storage local path  prometheus    storage local retention 24h  ports  containerPort  9090 protocol  TCP volumeMounts  mountPath    prometheus  name  data subPath  prometheus mountPath    etc prometheus  name  config volume resources  requests  cpu  100m memory  100Mi limits  cpu  200m memory  1Gi volumes  name  data emptyDir     configMap  name  prometheus config name  config volume         prometheus deploy yaml           kubectl create  f prometheus deploy yaml              Prometheus UI        kubectl port forward           POD kubectl pod  l app prometheus  n kube ops  o go template   template    range  items     metadata name    end      kubectl port forward  POD 9090 9090         http   localhost 9090      Prometheus           ingress      yaml      apiVersion  extensions v1beta1 kind  Ingress metadata  name  traefik default ingress annotations  kubernetes io ingress class   traefik  spec  tls  secretName  traefik ssl rules  host  prometheus local           http  paths  path    backend  serviceName  prometheus servicePort  9090         prometheus ingress yaml           kubectl create  f prometheus ingress yaml          traefik                 Status   targets                   targets                            Prometheus   API ",
        "objectID": "post/Kubernetes使用Prometheus搭建监控平台",
        "slug": "kubernetes-monitor-prometheus-grafana",
        "date": "2017-10-17T00:00:00.000Z",
        "publishdate": "2017-10-17T00:00:00.000Z",
        "keywords": [
            "kubernetes",
            "监控",
            "prometheus",
            "grafana",
            "influxdb"
        ],
        "tags": [
            "kubernetes",
            "prometheus",
            "grafana",
            "influxdb"
        ],
        "bigimg": [
            {
                "src": "/img/posts/k8s-prometheus-grafana-cover.png",
                "desc": ""
            }
        ],
        "category": "kubernetes",
        "gitcomment": true
    },
    {
        "title": "Kubernetes Deployment 故障排查常见方法[译]",
        "uri": "post/Kubernetes故障排查常见方法[译]",
        "content": "visual guide troubleshooting Kubernetes deployments               Kubernetes Deployment             PDF                                                         Kubernetes                      Deployment               Pod        Service                         Pod    Ingress                                                            HelloWorld          YAML                apiVersion  apps v1 kind  Deployment metadata  name  my deployment labels  track  canary spec  selector  matchLabels  any name  my app template  metadata  labels  any name  my app spec  containers  name  cont1 image  learnk8s app 1 0 0 ports  containerPort  8080 apiVersion  v1 kind  Service metadata  name  my service spec  ports  port  80 targetPort  8080 selector  name  app apiVersion  networking k8s io v1beta1 kind  Ingress metadata  name  my ingress spec  rules  http  paths  backend  serviceName  app servicePort  80 path                                        80            8080                                   label                                                           Deployment   Service        Deployment   Service        Service   Deployment                Service      Pod       Deployment             Pod   Service                   Service selector      Pod          Service   targetPort    Pod      containerPort     Service   port            Service                       VIP                               YAML    Label     ports targetPort       apiVersion  apps v1 kind  Deployment metadata  name  my deployment labels  track  canary spec  selector  matchLabels  any name  my app template  metadata  labels  any name  my app spec  containers  name  cont1 image  learnk8s app 1 0 0 ports  containerPort  8080 apiVersion  v1 kind  Service metadata  name  my service spec  ports  port  80 targetPort  8080 selector  any name  my app   Deployment     track  canary                   Deployment Service                                          matchLabels             Pod           Deployment      Pod                                      Pod              kubectl pods   show labels                  Pod    kubectl pods   selector any name my app   show labels    any name my app      any name  my app         kubectl    port forward       service          kubectl port forward service  3000 80 service               YAML    my service  3000               80   service    port                                                      Service   Ingress        Ingress               Ingress                 Pod            Ingress                    Ingress   Service           Ingress   servicePort      service   port  Ingress   serviceName      service   name        Ingress   Service                                                    my service   80   apiVersion  v1 kind  Service metadata  name  my service spec  ports  port  80 targetPort  8080 selector  any name  my app apiVersion  networking k8s io v1beta1 kind  Ingress metadata  name  my ingress spec  rules  http  paths  backend  serviceName  my service servicePort  80 path               Ingress                      kubectl port forward            Ingress            Service              Ingress      Pod       kubectl pods   all namespaces NAMESPACE NAME READY STATUS kube system coredns 5644d7b6d9 jn7cq 1 1 Running kube system etcd minikube 1 1 Running kube system kube apiserver minikube 1 1 Running kube system kube controller manager minikube 1 1 Running kube system kube proxy zvf2h 1 1 Running kube system kube scheduler minikube 1 1 Running kube system nginx ingress controller 6fc5bcc 1 1 Running    Ingress Pod                         kubectl describe pod nginx ingress controller 6fc5bcc     namespace kube system     grep Ports Ports  80 TCP  443 TCP  18080 TCP         Pod      kubectl port forward nginx ingress controller 6fc5bcc 3000 80   namespace kube system              3000             Ingress     Pod    80        http   localhost 3000                                                  Service selector    Pod       Service   targetPort    Pod      containerPort    Service                                    IP    Ingress   servicePort      Service   port Serivce       Ingress    serviceName              YAML                             Pod                                        3            Deployment          Kubernetes                     Deployment                                   Pods              Service           Pod              Ingress      1 Pod                   Pod          Pod                     kubectl pods NAME READY STATUS RESTARTS AGE app1 0 1 ImagePullBackOff 0 47h app2 0 1 Error 0 47h app3 76f9fcd46b xbv4k 1 1 Running 1 47h             Pod                     Pod      Running     Ready                             Pod         kubectl logs       Pod       kubectl describe pod     Pod            kubectl pod         Kubernetes    Pod   YAML    kubectl exec  it bash   Pod                                                        Pod    Pod                       ImagePullBackoff ImageInspectError ErrImagePull ErrImageNeverPull RegistryUnavailable InvalidImageName          CrashLoopBackOff RunContainerError Kill",
        "objectID": "post/Kubernetes故障排查常见方法[译]",
        "date": "2019-12-10T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "deployment"
        ],
        "keywords": [
            "kubernetes",
            "deployment",
            "故障",
            "排查"
        ],
        "slug": "troubleshooting-deployments",
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/trouble-deploy-cover.png",
                "desc": "A visual guide on troubleshooting Kubernetes deployments"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes API 资源使用",
        "uri": "post/Kubernetes的API应该用哪个组和版本",
        "content": "Kubernetes       API                                     CLI  REST API                    API                                                                       YAML       Deployment                     apiVersion  apps v1beta2 apiVersion  apps v1                                     Kubernetes             kubectl                        https   akomljen com kubernetes api resources which group and version to use  API Resources               Kubernetes        API       kubectl api resources  o wide NAME SHORTNAMES APIGROUP NAMESPACED KIND VERBS bindings true Binding  create  componentstatuses cs false ComponentStatus  get list  configmaps cm true ConfigMap  create delete deletecollection list patch update watch  endpoints ep true Endpoints  create delete deletecollection list patch update watch  events ev true Event  create delete deletecollection list patch update watch  limitranges limits true LimitRange  create delete deletecollection list patch update watch  namespaces ns false Namespace  create delete list patch update watch  nodes no false Node  create delete deletecollection list patch proxy update watch  persistentvolumeclaims pvc true PersistentVolumeClaim  create delete deletecollection list patch update watch  persistentvolumes pv false PersistentVolume  create delete deletecollection list patch update watch  pods po true Pod  create delete deletecollection list patch proxy update watch  podtemplates true PodTemplate  create delete deletecollection list patch update watch  replicationcontrollers rc true ReplicationController  create delete deletecollection list patch update watch  resourcequotas quota true ResourceQuota  create delete deletecollection list patch update watch  secrets true Secret  create delete deletecollection list patch update watch  serviceaccounts sa true ServiceAccount  create delete deletecollection list patch update watch  services svc true Service  create delete list patch proxy update watch  mutatingwebhookconfigurations admissionregistration k8s io false MutatingWebhookConfiguration  create delete deletecollection list patch update watch  validatingwebhookconfigurations admissionregistration k8s io false ValidatingWebhookConfiguration  create delete deletecollection list patch update watch  customresourcedefinitions crd apiextensions k8s io false CustomResourceDefinition  create delete deletecollection list patch update watch  apiservices apiregistration k8s io false APIService  create delete deletecollection list patch update watch  controllerrevisions apps true ControllerRevision  create delete deletecollection list patch update watch  daemonsets ds apps true DaemonSet  create delete deletecollection list patch update watch  deployments deploy apps true Deployment  create delete deletecollection list patch update watch  replicasets rs apps true ReplicaSet  create delete deletecollection list patch update watch  statefulsets sts apps true StatefulSet  create delete deletecollection list patch update watch               1 11 0        kubectl      api resources                     SHORTNAMES              deployments      deploy             kubectl     APIGROUP                              yaml       apiVersion  v1 KIND        VERBS               ClusterRole RBAC                   API    API          kubectl api resources   api group apps  o wide NAME SHORTNAMES APIGROUP NAMESPACED KIND VERBS controllerrevisions apps true ControllerRevision  create delete deletecollection list patch update watch  daemonsets ds apps true DaemonSet  create delete deletecollection list patch update watch  deployments deploy apps true Deployment  create delete deletecollection list patch update watch  replicasets rs apps true ReplicaSet  create delete deletecollection list patch update watch  statefulsets sts apps true StatefulSet                    kubectl explain                  kubectl explain configmap DESCRIPTION  ConfigMap holds configuration data pods consume  FIELDS  apiVersion APIVersion defines versioned schema representation object  Servers convert recognized schemas latest internal value  may reject unrecognized values  info  https   git k8s io community contributors devel api conventions md resources data Data contains configuration data  key consist alphanumeric characters        _       kind Kind string value representing REST resource object represents  Servers may infer endpoint client submits requests to  Cannot updated  CamelCase  info  https   git k8s io community contributors devel api conventions md types kinds metadata Standard object s metadata  info  https   git k8s io community contributors devel api conventions md metadata   kubectl explain                     YAML                                   explain         group version         api version                explain                   api version          kubectl explain replicaset   api version apps v1 API Versions                        API       kubectl api versions admissionregistration k8s io v1beta1 apiextensions k8s io v1beta1 apiregistration k8s io v1beta1 apps v1 apps v1beta1 apps v1beta2 authentication k8s io v1 authent",
        "objectID": "post/Kubernetes的API应该用哪个组和版本",
        "subtitle": "应该使用哪个 Group 和 Version?",
        "date": "2018-12-07T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "api"
        ],
        "keywords": [
            "kubernetes",
            "api",
            "Group",
            "Version"
        ],
        "slug": "k8s-api-resources-group-and-version",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1543928069-4ce45659e968.jpeg",
                "desc": "API Resource"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "kubernetes ConfigMap 和 Secrets",
        "uri": "post/kubernetes的ConfigMap和Secret",
        "content": "Token                                            settings py                                                                                                                                     10            A            A             10                                                                                                     Docker       Dockerfile                                                                                          kubernetes                          Gist  https   gist github com cnych d40756ce6e03035551b6a023135a78d9 1                    WEB       TOKEN   LANGUAGE                 hardcode app py     coding  utf 8    flask import Flask  jsonify app   Flask name   app route      def index    TOKEN    abcdefg123456  LANGUAGE    English  return jsonify token TOKEN  lang LANGUAGE  name     main   app run host  0 0 0 0   port 5000             TOKEN    LANGUAGE                                BUG                                2                                                   python     os     getenv         read env app py     coding  utf 8    import os flask import Flask  jsonify app   Flask name   app route      def index    TOKEN   os getenv  TOKEN       LANGUAGE   os getenv  LANGUAGE       return jsonify token TOKEN  lang LANGUAGE  name     main   app run host  0 0 0 0   port 5000                                       Unix    MacOS Linux                                export TOKEN abcdefg0000   export LANGUAGE English    Windows             cmd                       setx TOKEN  abcdefg0000  setx LANGUAGE  English                                  flask               TOKEN abcdefg0000 LANGUAGE English python read env app py Running http   0 0 0 0 5000   Press CTRL C quit  127 0 0 1      10 Feb 2018 15 15 14   GET   HTTP 1 1  200               http   127 0 0 1 5000                  lang    English    token    abcdefg0000                         3     Docker                                                                                       Docker                     Dockerfile          ENV              python 3 6 4        RUN mkdir  p  usr src app WORKDIR  usr src app      RUN pip install flask      ADD    usr src app        ENV TOKEN abcdefg0000 ENV LANGUAGE English      EXPOSE 5000      CMD python read env app py          Dockerfile    read env app py                      docker build  t cnych envtest                  cnych envtest            docker run   name envtest   rm  p 5000 5000  it cnych envtest Running http   0 0 0 0 5000   Press CTRL C quit              e              docker run   name envtest   rm  e TOKEN abcdefg88888  e LANGUAGE English  p 5000 5000  it cnych envtest Running http   0 0 0 0 5000   Press CTRL C quit             http   127 0 0 1 5000                             lang    English    token    abcdefg88888    4     Kubernetes              Kubernetes                      Kubernetes Deployment        Docker             Deployment    A B         Deployment                 Dockerfile          Kubernetes Deployment  YAML                      Deployment             read env yaml  apiVersion  extensions v1beta1 kind  Deployment metadata  name  envtest labels  name  envtest spec  replicas  1 template  metadata  labels  name  envtest spec  containers  name  envtest image  cnych envtest ports  containerPort  5000 env  name  TOKEN value   abcd123456  name  LANGUAGE value   English        POD   env                                  TOKEN   LANGUAGE         5     Kubernetes   Secrets   ConfigMap      Docker Kubernetes                                                  Deployment                     Deployment                     Kubernetes    Secrets            ConfigMap                              Secret   ConfigMap           Secret      Base64                                 API      Secret                                ConfigMap             TOKEN     Secret    kubectl create secret generic token   from literal TOKEN abcd123456000     LANGUAGE       ConfigMap    kubectl create configmap language   from literal LANGUAGE English                    Secret   ConfigMap    kubectl secret NAME TYPE DATA AGE default token 6s2bc kubernetes io service account token 3 42d token Opaque 1 1m   kubectl configmap NAME DATA AGE language 1 1m             Kubernetes Demployment   YAML     final read env yaml  apiVersion  extensions v1beta1 kind  Deployment metadata  name  envtest labels  name  envtest spec  replicas  1 template  metadata  labels  name  envtest spec  containers  name  envtest image  cnych envtest ports  containerPort  5000 env  name  TOKEN valueFrom  secretKeyRef  name  token key  TOKEN name  LANGUAGE valueFrom  configMapKeyRef  name  language key  LANGUAGE           env        secret   ConfigMap      6     Secret   ConfigMap              Kubernetes                                              POD                                                   Secret    ConfigMap    kubectl create configmap language   from literal LANGUAGE Chinese  o yaml   dry run   kubectl replace  f   configmap  language  replaced   kubectl create secret generic token   from literal TOKEN bbbbb123456  o yaml   dr",
        "objectID": "post/kubernetes的ConfigMap和Secret",
        "subtitle": "快速了解 kubernetes 中 ConfigMap 和 Secrets 的用法",
        "date": "2018-02-10T00:00:00.000Z",
        "publishdate": "2017-01-18T00:00:00.000Z",
        "keywords": [
            "kubernetes",
            "ConfigMap",
            "Secretes",
            "使用"
        ],
        "tags": [
            "kubernetes",
            "ConfigMap",
            "Secretes"
        ],
        "slug": "understand-kubernetes-configmap-and-secrets",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1470328358326-dee4879da669.jpeg",
                "desc": "Forest bride in flowing dress"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "kubernetes 的资源配额控制器",
        "uri": "post/kubernetes的资源配额控制器",
        "content": "kubernetes       namespace           namespace                                               kubernetes                           ResourceQuotaController                                                                               kubernetes   3                   CPU   Memory      POD       POD               Namespace                                      Docker   CPU        POD             POD                 CPU memory    Namespace                    CPU          POD RC Service                   apiserver   admission control     ResourceQuota   namespace       ResourceQuota      namespace                            namespace           ResourceQuota     ResourceQuotaController                                                                               namespace              ResourceQuotaController                                                                                    cpu            POD     CPU                limits cpu            POD     CPU                memory            POD                     limits memory            POD                     requests cpu            POD     CPU                requests memory            POD                           cat compute resources yaml apiVersion  v1 kind  ResourceQuota metadata  name  compute resources namespace  myspace spec  hard  requests cpu   1  requests memory  1Gi limits cpu   2  limits memory  2Gi EOF   kubectl create  f compute resources yaml                ResourceQuota      kubectl describe quota compute resources  n myspace Name  compute resources Namespace  myspace Resource Used Hard limits cpu 0 2 limits memory 0 2Gi requests cpu 0 1 requests memory 0 1Gi               namespace           cpu   memory                        request       limit           Pod                         yaml            admission control      LimitRanger  apiVersion  v1 kind  LimitRange metadata  name  limits spec  limits  default  cpu  200m memory  200Mi type  Container                namespace                             Storage Class                                                                                                                       requests storage       PVC                     persistentvolumecliaims   namespace       PVC         storageclass storage k8s io requests storage       storage class name     PVC                       storageclass storage k8s io persistentvolumeclaims   namespace        storage class name     PVC                                                                                                                              configmaps   namespace        configmap         persistentvolumeclaims   namespace        PVC         pods   namespace              POD       POD   status phase   Failed   Succeeded               replicationcontrollers   namespace        replication controllers         resourcequotas   namespace        resource quotas         services   namespace       service        services loadbalancers   namespace        load balancer     service         services nodeports   namespace        node port     service         secrets   namespace        secret               cat object counts yaml apiVersion  v1 kind  ResourceQuota metadata  name  object counts namespace  myspace spec  hard  pods   40  configmaps   10  replicationcontrollers   20  secrets   10  services   10  services nodeports   2  EOF   kubectl create  f object counts yaml                      kubectl describe quota object counts  n myspace Name  object counts Namespace  myspace Resource Used Hard configmaps 0 10 pods 0 40 replicationcontrollers 0 20 secrets 1 10 services 0 10 services nodeports 0 2                      scope                                                                                                                                                              Terminating      spec activeDeadlineSeconds    0   POD     NotTerminating      spec activeDeadlineSeconds nil   POD     BestEffort          best effort       POD     NotBestEffort           best effort       POD     BestEffort                PODS Terminating  NotTerminating   NotBestEffort           cpu limits cpu limits memory memory pods requests cpu requests memory          CPU       namespace                                                                                                                      https   kubernetes io docs tasks administer cluster quota memory cpu namespace  https   kubernetes io docs tasks administer cluster quota api object                Kubernetes",
        "objectID": "post/kubernetes的资源配额控制器",
        "date": "2018-03-23T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "resource",
            "quato"
        ],
        "keywords": [
            "kubernetes",
            "resource",
            "quato",
            "资源配额"
        ],
        "slug": "kubernetes-resource-quota-usage",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1517965319782-7b911f164cc2.jpeg",
                "desc": "Alabama Hills@United States"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 线下3天闭门集训",
        "uri": "post/Kubernetes线下培训",
        "content": "Kubernetes                                                                                                                                                Kubernetes                   Kubernetes               Docker         Kubernetes                        1     Docker   Kubernetes           2                   Kubernetes 3     Kubernetes                  4         Kubernetes    CI CD           https   jinshuju net f tQKU3u               k8s                                       kubernetes",
        "objectID": "post/Kubernetes线下培训",
        "subtitle": "Kubernetes 快速学习进阶之路",
        "date": "2019-03-18T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "培训",
            "课程"
        ],
        "keywords": [
            "kubernetes",
            "培训",
            "课程",
            "线下"
        ],
        "slug": "k8s-offline-training",
        "gitcomment": true,
        "category": "kubernetes",
        "draft": true
    },
    {
        "title": "Kubernetes 网络故障常见排查方法",
        "uri": "post/Kubernetes网络故障排查",
        "content": "Kubernetes                                          Kubernetes                                                                                                          Kubernetes                            Kubernetes       Netfilter             IP                  IP       IP forward   bridge   IP forward IP forward                                   Linux                                                                                         Pod         connect 10 100 225 223 port 5000 failed  Connection timed Failed connect 10 100 225 223 port 5000  Connection timed Closing connection 0 curl   7  Failed connect 10 100 225 223 port 5000  Connection timed Tcpdump            SYN         ACK          ipv4 forwarding      sysctl net ipv4 ip_forward 0        net ipv4 ip_forward   0      will turn things back live server sysctl  w net ipv4 ip_forward 1 Centos will setting apply reboot echo net ipv4 ip_forward 1     etc sysconf d 10 ipv4 forwarding on conf       sysctl  p    bridge netfilter       iptables       Linux Bridges         Docker   Kubernetes              Linux                                  Pod                                     host unreachable   connection refused           bridge netfilter      sysctl net bridge bridge nf call iptables 0       net bridge bridge nf call iptables   0      Note distributions may compiled kernel  check cat  lib modules   uname  r  modules builtin   grep netfilter modprobe br_netfilter      iptables    sysctl  w net bridge bridge nf call iptables 1 echo net bridge bridge nf call iptables 1     etc sysconf d 10 bridge nf call iptables conf sysctl  p       Kubernetes                             IP                             Kubernetes         VxLan Overlay        IP         UDP    8472                       100          ping 10 244 1 4 PING 10 244 1 4  10 244 1 4   56 data bytes  C    10 244 1 4 ping statistics     5 packets transmitted  0 packets received  100  packet loss                                                   UDP     iperf                   iperf  s  p 8472  u        iperf  c 172 28 128 103  u  p 8472  b 1K                                    iptables          https   serverfault com questions 696182 debugging iptables and common firewall pitfalls Pod CIDR    Kubernetes                     Overlay          Pod              IP                               Kubernetes              Pod                              Pod   Pod                   curl http   172 28 128 132 5000 curl   7  Failed connect 172 28 128 132 port 5000  No route host              Pod IP       kubectl pods  o wide NAME READY STATUS RESTARTS AGE IP NODE netbox 2123814941 f7qfr 1 1 Running 4 21h 172 28 27 2 172 28 128 103 netbox 2123814941 ncp3q 1 1 Running 4 21h 172 28 21 3 172 28 128 102 testbox 2460950909 5wdr4 1 1 Running 3 21h 172 28 128 132 172 28 128 101       IP    apiserver     kubernetes           ip addr list 3  eth1  mtu 1500 qdisc pfifo_fast state group default qlen 1000 link ether 52 54 00 2c 6c 50 brd ff ff ff ff ff ff inet 172 28 128 103 24 brd 172 28 128 255 scope global eth1 validlft forever preferredlft forever inet6 fe80  5054 ff fe2c 6c50 64 scope link validlft forever preferredlft forever           IP                                         VLAN   VPC                      CNI     kubelet  pod cidr      IP                                                tcpdump Tcpdump                                         tcpdump                                        kubectl exec  ti testbox 2460950909 5wdr4     bin bash   curl http   172 28 21 3 5000 curl   7  Failed connect 172 28 21 3 port 5000  No route host                                IP          tcpdump  i host 172 28 21 3 tcpdump  verbose output suppressed  use  v  vv full protocol decode listening any  link type LINUX_SLL  Linux cooked   capture size 262144 bytes 20 15 59 903566 IP 172 28 128 132 60358   172 28 21 3 5000  Flags  S   seq 3042274422  win 28200  options  mss 1410 sackOK TS val 10056152 ecr 0 nop wscale 7   length 0 20 15 59 903566 IP 172 28 128 132 60358   172 28 21 3 5000  Flags  S   seq 3042274422  win 28200  options  mss 1410 sackOK TS val 10056152 ecr 0 nop wscale 7   length 0 20 15 59 905481 ARP  Request who has 172 28 21 3 tell 10 244 27 0  length 28 20 16 00 907463 ARP  Request who has 172 28 21 3 tell 10 244 27 0  length 28 20 16 01 909440 ARP  Request who has 172 28 21 3 tell 10 244 27 0  length 28 20 16 02 911774 IP 172 28 128 132 60358   172 28 21 3 5000  Flags  S   seq 3042274422  win 28200  options  mss 1410 sackOK TS val 10059160 ecr 0 nop wscale 7   length 0 20 16 02 911774 IP 172 28 128 132 60358   172 28 21 3 5000  Flags  S   seq 3042274422  win 28200  options  mss 1410 sackOK TS val 10059160 ecr 0 nop wscale 7   length 0                                 IP            tcpdump              http   bencane com 2014 10 13 quick and practical reference for tcpdump  Netbox                                                         iproute2 net tools ethtool library python 3 3 RUN apt get update    apt get  y install iproute2 net tools ethtool nano CMD    usr bin python     m    SimpleHTTPServer    5000            Deployme",
        "objectID": "post/Kubernetes网络故障排查",
        "date": "2019-04-27T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "iptables",
            "Netfilter",
            "tcpdump"
        ],
        "keywords": [
            "kubernetes",
            "Netfilter",
            "网络",
            "Linux",
            "iptables",
            "tcpdump",
            "防火墙"
        ],
        "slug": "troubleshooting-k8s-network",
        "gitcomment": true,
        "notoc": true,
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes翻船事故汇总",
        "uri": "post/Kubernetes翻船事故汇总",
        "content": "GitHub           Kubernetes       Kubernetes                                        Service Mesh                         Kubernetes                                        SRE Ops              Kubernetes                      Kubernetes                30                       GKE                    DNS                   https   k8s af     Kubernetes                         Kubernetes      10     9          Datadog   KubeCon Barcelona 2019 https   www youtube com watch v QKI JRs2RIE    CoreDNS ndots 5 IPVS conntrack imagePullPolicy  Always DaemonSet NAT        API   OOMKill kube2iam cluster autoscaler PodPriority      spec replicas AWS ASG     CronJob Pod    zombies readinessProbe exec cgroup freeze kubectl    unknown AP server    pending pod deployments      Spotify Accidentally Deleted its Kube Clusters No User Impact   Spotify   KubeCon Barcelona 2019 involved  GKE  cluster deletion  browser tabs  Terraform  global state file  git PRs  GCP permissions impact  no impact end users",
        "objectID": "post/Kubernetes翻船事故汇总",
        "date": "2019-04-27T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "iptables",
            "Netfilter",
            "tcpdump"
        ],
        "keywords": [
            "kubernetes",
            "Netfilter",
            "网络",
            "Linux",
            "iptables",
            "tcpdump",
            "防火墙"
        ],
        "slug": "troubleshooting-k8s-network",
        "gitcomment": true,
        "notoc": true,
        "draft": true,
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 调度器介绍",
        "uri": "post/kubernetes调度器介绍",
        "content": "kube scheduler  kubernetes                                          Pod                                             kubernetes                                                         kube scheduler                                                        Pod                                       kubernetes                      Pod                                                    kube scheduler   kubernetes                              Pod        Node                            API Server     PodSpec NodeName     Pod     Pod        binding                                                                                                                                    Pod                                                     kubernetes                                                     kubernetes       kubernetes          kubernetes pkg scheduler                                   kubernetes pkg scheduler    scheduler go                 algorithm       predicates                priorities              algorithmprovider       defaults               Scheduler                   pkg scheduler scheduler go      kube scheduler             cmd kube scheduler scheduler go                                          Predicates                          Priorities                                     Predicates                                               Node                                 Pod        Pending                                                   Pod      Pending                                        Priorities                                           priorites                           Pod                                         API Server   REST API    kubectl      Pod    API Server                 etcd            API Server       bind   Pod             Pod                                   Predicates                         Node       Pod        request         Pod                        Priorities                       Node                            Deployment       Pod                                             Node     Pod    binding             etcd            Node       kubelet        Pod         Predicates                          PodFitsResources              Pod       PodFitsHost    Pod     NodeName           NodeName    PodFitsHostPorts          port     Pod     port    PodSelectorMatches      Pod     label        NoDiskConflict     mount    volume   Pod      volume               CheckNodeDiskPressure                 CheckNodeMemoryPressure                                                  k8s io kubernetes pkg scheduler algorithm predicates predicates go   Priorities                                                         LeastRequestedPriority      CPU                                                  Pod           SelectorSpreadPriority                 Deployment    RC       Pod                      Pod               Pod     controller       controller         Pod    Pod           ImageLocalityPriority                                       NodeAffinityPriority                                                                        k8s io kubernetes pkg scheduler algorithm priorities                      0 10                                                     finalScoreNode    weight1   priorityFunc1     weight2   priorityFunc2         weightn   priorityFuncn             kube scheduler                                            kube scheduler             policy config file                            Predicates Priority                                                        Policy          kind     Policy    apiVersion     v1    predicates        name     PodFitsHostPorts      name     PodFitsResources      name     NoDiskConflict      name     NoVolumeZoneConflict      name     MatchNodeSelector      name     HostName       priorities        name     LeastRequestedPriority    weight    1     name     BalancedResourceAllocation    weight    1     name     ServiceSpreadingPriority    weight    1     name     EqualPriority    weight    1                                                                podSpec schedulerName                          apiVersion  v1 kind  Pod metadata  name  nginx labels  app  nginx spec  schedulerName  my scheduler              my scheduler containers  name  nginx image  nginx 1 10                            my scheduler            API       Pod     phase Pending schedulerName my scheduler pod      Pod                    Binding                                                       Priorities                                 pod priority     Pod            Pod                          Pod        Pod               Pod           PriorityClass         Namespace      apiVersion  v1 kind  PriorityClass metadata  name  high priority value  1000000 globalDefault  false description   This priority class used XYZ service pods only       value  32                    globalDefault      PriorityClassName   Pod            PriorityClass      true       Pod  spec priorityClassName       PriorityClass      apiVersion  v1 kind  Pod metadata  name  nginx labels  app  nginx spec  containers  name  nginx ima",
        "objectID": "post/kubernetes调度器介绍",
        "subtitle": "kubernetes 核心组件 kube-scheduler 调度流程和策略分析",
        "date": "2018-10-11T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "scheduler",
            "调度"
        ],
        "keywords": [
            "kubernetes",
            "scheduler",
            "亲和性",
            "调度",
            "affinity"
        ],
        "slug": "kube-scheduler-introduction",
        "gitcomment": true,
        "notoc": true,
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 零宕机滚动更新",
        "uri": "post/Kubernetes零宕机滚动更新",
        "content": "Kubernetes    Kubernetes                         Kubernetes                                              Kubernetes   Deployment               Pod                                           down         Pod                     Pod                Kubernetes                           3                      3    Pod                         Pod            Pod                            Deployment                          maxSurge                    apiVersion  apps v1 kind  Deployment metadata  name  zero downtime labels  app  zero downtime spec  replicas  3 selector  matchLabels  app  zero downtime strategy  type  RollingUpdate rollingUpdate  maxSurge  1 maxUnavailable  0 template  image nginx         zero downtime        nginx       3      Deployment                      Pod    Pod                  Pod           Pod                  Kubernetes       Pod                        liveness   readiness              Pod            kubectl pods NAME READY STATUS RESTARTS AGE zero downtime d449b5cc4 k8b27 1 1 Running 0 3m9s zero downtime d449b5cc4 n2lc4 1 1 Running 0 3m9s zero downtime d449b5cc4 sdw8b 1 1 Running 0 3m9s     zero downtime d449b5cc4 k8b27 1 1 Running 0 3m9s zero downtime d449b5cc4 n2lc4 1 1 Running 0 3m9s zero downtime d449b5cc4 sdw8b 1 1 Running 0 3m9s zero downtime d569474d4 q9khv 0 1 ContainerCreating 0 12s     zero downtime d449b5cc4 n2lc4 1 1 Running 0 3m9s zero downtime d449b5cc4 sdw8b 1 1 Running 0 3m9s zero downtime d449b5cc4 k8b27 1 1 Terminating 0 3m29s zero downtime d569474d4 q9khv 1 1 Running 0 1m     zero downtime d449b5cc4 n2lc4 1 1 Running 0 5m zero downtime d449b5cc4 sdw8b 1 1 Running 0 5m zero downtime d569474d4 q9khv 1 1 Running 0 1m zero downtime d569474d4 2c7qz 0 1 ContainerCreating 0 10s         zero downtime d569474d4 2c7qz 1 1 Running 0 40s zero downtime d569474d4 mxbs4 1 1 Running 0 13s zero downtime d569474d4 q9khv 1 1 Running 0 67s                                           Pod                                                                                                                                                                       HTTP       keep alive   HTTP                        Apache Bench AB Test     Fortio Istio                                                                                       Fortio             500      8      keep alive                 zero qikqiak com      3  Pod     fortio load  a  c 8  qps 500  t 60s  http   zero qikqiak com        fortio               https   github com fortio fortio     a                                                                                Starting 1000 qps 8 thread s   gomax 2  1m0s   7500 calls  total 60000  Ended 1m0 006243654s   5485 calls  qps 91 407 Aggregated Sleep Time   count 5485 avg  17 626081     15 min  54 753398956 max 0 000709054 sum  96679 0518       Code 200   5463  99 6    Code 502   20  0 4    Response Header Sizes   count 5485 avg 213 14166     13 53 min 0 max 214 sum 1169082 Response Body Total Sizes   count 5485 avg 823 18651     44 41 min 0 max 826 sum 4515178                            502                                  Kubernetes Ingress             Service                                                    Ingress                                                                           Pod                         Kubernetes                                      zero downtime    Service             DNS       Service   ClusterIP       Service     Pod              kube proxy      iptables         Kubernetes     Pods        Endpoints            Endpoints                Pod     Kubernetes Ingress                           Ingresss                                       Ingress Controller    nginx ingress traefik        watch Endpoints         Pod            iptables                       Kubernetes                                 Pod              Kubernetes         Pod     Pod         Terminating      Endpoints              SIGTERM     Pod      SIGTERM                             Pod   Endpoints                               Pod                                                          Pod                                                    Pod                                                                     SIGTERM                   readiness                                                      Pod                                 preStop                                                                                    SIGTERM                Kubernetes    Endpoints        Pod     Pod                                                                   zero downtime    Deployment       preStop     apiVersion  apps v1 kind  Deployment metadata  name  zero downtime labels  app  zero downtime spec  replicas  3 selector  matchLabels  app  zero downtime template  spec  containers  name  zero downtime image  nginx livenessProbe      readinessProbe      lifecycle  preStop  exec  command     bin bash     c    sleep 20   strategy             preStop       20s      Pod          sleep    20s            Endpoints      kube proxy     Endpoints              Pod      Terminating                           Terminating   Pod ",
        "objectID": "post/Kubernetes零宕机滚动更新",
        "date": "2020-02-11T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "rolling-update"
        ],
        "keywords": [
            "kubernetes",
            "rolling-update",
            "宕机",
            "滚动更新"
        ],
        "slug": "zero-downtime-rolling-update-k8s",
        "gitcomment": true,
        "category": "kubernetes",
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1581375279144-bb3b381c7046.png",
                "desc": "Painted, sliced avocado"
            }
        ]
    },
    {
        "title": "在现有 Kubernetes 集群上安装 KubeSphere",
        "uri": "post/kubesphere安装",
        "content": "KubeSphere   Kubernetes                                                                                           Kubernetes                                                                                                                                       KubeSphere                                     Kubernetes                            Kubernetes       KubeSphere            KubeSphere                   kubeadm     Kubernetes 1 15 2      Helm v2 14 1       NFS                     https   github com kubesphere ks installer                 StorageClass         StorageClass                 apiVersion  storage k8s io v1 kind  StorageClass metadata  name  dynamic data annotations  storageclass kubernetes io is default class   true  provisioner  fuseim pri ifs    annotations     storageclass kubernetes io is default class   true          kubectl sc NAME PROVISIONER AGE dynamic data  default  fuseim pri ifs 4h41m              Clone   Kubernetes      master               master             1             kubesphere system   kubesphere monitoring system  namespace    cat          ca crt   ca key        kubeadm              etc kubernetes pki    kubectl  n kubesphere system create secret generic kubesphere ca     from file ca crt  etc kubernetes pki ca crt     from file ca key  etc kubernetes pki ca key 3   etcd  secret           etcd          etcd            secret   kubectl  n kubesphere monitoring system create secret generic kube etcd client certs     from file etcd client ca crt  etc kubernetes pki etcd ca crt     from file etcd client crt  etc kubernetes pki etcd healthcheck client crt     from file etcd client key  etc kubernetes pki etcd healthcheck client key           kubeadm                etcd            cat  etc kubernetes manifests etcd yaml        livenessProbe  exec  command   bin sh  ec ETCDCTL_API 3 etcdctl   endpoints https    127 0 0 1  2379   cacert  etc kubernetes pki etcd ca crt   cert  etc kubernetes pki etcd healthcheck client crt   key  etc kubernetes pki etcd healthcheck client key foo                   etcd          4           KubeSphere                                                          1 openldap             ks account        openldap                       openldap                     rm  cannot remove   container service slapd assets config bootstrap ldif readonly user   Directory not empty rm  cannot remove   container service slapd assets config bootstrap schema mmc   Directory not empty rm  cannot remove   container service slapd assets config replication   Directory not empty rm  cannot remove   container service slapd assets config tls   Directory not empty    container run startup slapd failed status 1            roles ks core prepare templates ks account init yaml j2     openldap    Deployment              copy service        image     openldaprepo       openldaptag    imagePullPolicy  IfNotPresent args              copy service name  openldap          2              metricsserver           metricsserver_enable     False   3          Waitting ks sonarqube port become open         NodePort          sonarqube                                        sonarqube_enable     False   4        istio                              istio           istio             KubeSphere            deploy kubesphere yaml  apiVersion  v1 data  ks config yaml    kubeapiserverhost  10 151 30 11 6443 etcdtlsenable  True etcdendpointips  10 151 30 11 disableMultiLogin  True elk_prefix  logstash metricsserverenable  False sonarqube_enable  False istio_enable  False kind  ConfigMap metadata  name  kubesphere config namespace  kubesphere system              ConfigMap         kubeapiserverhost         APIServer    etcdendpointips    etcd       IP       2379          etcd            IP                        False                 kubectl apply  f deploy kubesphere yaml   kubectl pods  n kubesphere system NAME READY STATUS RESTARTS AGE ks account 575d4fd8f r5476 1 1 Running 0 44m ks apigateway 5c56f79976 jxmd4 1 1 Running 0 44m ks apiserver 5d56bc8976 678hj 1 1 Running 0 41m ks console 75b6cb84c ldsn7 1 1 Running 0 42m ks console 75b6cb84c pzqcx 1 1 Running 0 42m ks controller manager 78bfd56fbf dtcg2 1 1 Running 0 43m ks docs 65bd89559b 58lpp 1 1 Running 0 3h16m kubesphere installer x7q8z 0 1 Completed 0 45m openldap 5bd67c84c6 gw8f5 1 1 Running 0 114m redis 6cf6fc98b5 nsqfn 1 1 Running 0 3h19m                                                                Job                            kubectl logs  n kubesphere system   kubectl pod  n kubesphere system  l job name kubesphere installer  o jsonpath    items 0  metadata name     f           Job            KubeSphere                    Ingress       KubeSphere  kubesphere ingress yaml    apiVersion  extensions v1beta1 kind  Ingress metadata  name  kubesphere namespace  kubesphere system annotations  kubernetes io ingress class  nginx spec  rules  host  ks qikqiak com http  paths  path  backend  serviceName  ks console servicePort  80           kubectl create  f kubesphere ingress yaml                                     admin    P 88w0rd KubeSphere                           ",
        "objectID": "post/kubesphere安装",
        "date": "2019-08-13T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "devops",
            "KubeSphere",
            "istio"
        ],
        "keywords": [
            "kubernetes",
            "drone",
            "CI",
            "CD",
            "github",
            "动态",
            "helm"
        ],
        "slug": "install-kubesphere-on-k8s",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1558981420-c532902e58b4.jpeg",
                "desc": "https://unsplash.com/photos/AyH9hAmiX9Y"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Kustomize 配置 Kubernetes 应用",
        "uri": "post/Kustomize的使用",
        "content": "Kubernetes                                    Helm Helm                    tiller                             Helm Chart                      go template               Docker   Kubernetes                           Kustomize             Kustomize                       kubectl 1 14                                    kubectl                              Helm          Kustomize   Kubernetes                                                            Docker                                                                                                  Git                                                      Mac            brew            brew install kustomize                          Release                 PATH                                https   github com Kubernetes sigs kustomize           Kustomize           yaml                             base        k8s base                                                                 kubectl apply  f   k8s base                        Service   Deployment                          service yaml       apiVersion  v1 kind  Service metadata  name  sl demo app spec  ports  name  http port  8080 selector  app  sl demo app deployment yaml       apiVersion  apps v1 kind  Deployment metadata  name  sl demo app spec  selector  matchLabels  app  sl demo app template  metadata  labels  app  sl demo app spec  containers  name  app image  foo bar latest ports  name  http containerPort  8080 protocol  TCP                 kustomization yaml     apiVersion  kustomize config k8s io v1beta1 kind  Kustomization resources  service yaml deployment yaml                                    kubectl apply  f   k8s base      kustomization yaml                     validate false                                                           kubectl apply  k k8s base service sl demo app created deployment apps sl demo app created                           kustomize build     kubectl apply  k       kubectl kustomize               kubectl 1 14            kustomize    kustomize build                               kustomize build k8s base apiVersion  v1 kind  Service metadata  name  sl demo app spec  ports  name  http port  8080 selector  app  sl demo app apiVersion  apps v1 kind  Deployment metadata  name  sl demo app spec  selector  matchLabels  app  sl demo app template  metadata  labels  app  sl demo app spec  containers  image  foo bar latest name  app ports  containerPort  8080 name  http protocol  TCP                                                        Kustomize                                               k8s overlays prod         kustomzization yaml            apiVersion  kustomize config k8s io v1beta1 kind  Kustomization bases        base                     tree       k8s     base       deployment yaml       kustomization yaml       service yaml     overlays     prod     kustomization yaml                        base            kustomzie build k8s overlays prod apiVersion  v1 kind  Service metadata  name  sl demo app spec  ports  name  http port  8080 selector  app  sl demo app apiVersion  apps v1 kind  Deployment metadata  name  sl demo app spec  selector  matchLabels  app  sl demo app template  metadata  labels  app  sl demo app spec  containers  image  foo bar latest name  app ports  containerPort  8080 name  http protocol  TCP           prod                   base                                                                                      kustomization yaml                              custom env yaml  apiVersion  apps v1 kind  Deployment metadata  name  sl demo app spec  template  spec  containers  name  app    1  env  name  CUSTOMENVVARIABLE value  Value defined Kustomize          1        name        kustomize                    yaml                                               k8s overlays prod kustomization yaml       apiVersion  kustomize config k8s io v1beta1 kind  Kustomization bases        base patchesStrategicMerge  custom env yaml                           kustomize build k8s overlays prod apiVersion  v1 kind  Service metadata  name  sl demo app spec  ports  name  http port  8080 selector  app  sl demo app apiVersion  apps v1 kind  Deployment metadata  name  sl demo app spec  selector  matchLabels  app  sl demo app template  metadata  labels  app  sl demo app spec  containers  env  name  CUSTOMENVVARIABLE value  Value defined Kustomize    image  foo bar latest name  app ports  containerPort  8080 name  http protocol  TCP         env                        env        deployment yaml                                                             base                                         YAML                       replica and rollout strategy yaml             apiVersion  apps v1 kind  Deployment metadata  name  sl demo app spec  replicas  10 strategy  rollingUpdate  maxSurge  1 maxUnavailable  1 type  RollingUpdate        kustomization yaml    patchesStrategicMerge             apiVersion  kustomize config k8s io v1beta1 kind  Kustomization bases        base patchesStrategicMerge  custom env yaml replica and rollout strategy yaml           kustomize build             kustomize build k",
        "objectID": "post/Kustomize的使用",
        "date": "2019-08-16T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "helm",
            "kustomize"
        ],
        "keywords": [
            "kubernetes",
            "helm",
            "kustomize",
            "模板"
        ],
        "slug": "kustomize-101",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1565780421727-543646cefafb.jpeg",
                "desc": "Out of a foggy and windless Hindmarsh Island sunrise"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Grafana Loki 简明教程",
        "uri": "post/Loki简明教程",
        "content": "Loki   Grafana Labs                                                                                      Prometheus            Like Prometheus  logs     Prometheus        1                 Loki                 Prometheus                                              chunks                 S3    GCS                       chunks             Loki                         Loki          1 1     Loki                                  ID                                              ID  1 2      Loki                   Loki                                         Loki                  Loki                             1 3    Distributor                                                                                             gPRC                                        Hashing                                                           ID          Consul                                Token                             Token          Token                                                           Loki          Dynamo                                                       Ingester                            DynamoDB S3 Cassandra                                                                                                                                                                                          chunks                                                       Loki              3                         Loki                                                                                                                                                                                              Handoff                                                      flush                         Token       chunks                            flush     chunks                                    BoltDB                                          BoltDB                DB       Querier                LogQL                                                                                                                    Chunk           Loki                                                       DynamoDB Bigtable    Cassandra             KV        DynamoDB Bigtable Cassandra              S3      Loki                                         Loki                          NoSQL     DynamoDB Bigtable   Cassandra                                 key           KEY                    KEY                                                             DynamoDB         KEY             DynamoDB        KEY      KEY       KEY     Bigtable   Cassandra                 KEY     KEY    KEY     KEY                                               Loki                                   1 4          EFK Elasticsearch Fluentd Kibana                     Elasticsearch           JSON                                      JSON            Query DSL     Lucene                          Loki                                        S3 GCS   Cassandra                                                         Loki        LogQL                                     LogQL                              Fluentd              Elasticsearch Fluentd                                                  Promtail    Loki                                                 Loki Promtail              Kubernetes Pods          Docker                      systemd         Loki                Prometheus             Prometheus                            Promtail                                                                Kibana           Elasticsearch                      Kibana                                                                       Grafana       Prometheus   Loki                                                              Kibana    Grafana                2            Tanka      Tanka   Grafana       Ksonnect      Grafana               Tanka                                      3     2 1    Helm    Loki                Kubernetes           Helm          Loki   chart       helm repo add loki https   grafana github io loki charts            chart       helm repo update    Loki            helm upgrade   install loki loki loki stack          helm upgrade   install loki   namespace loki loki loki        helm upgrade   install loki loki loki   set  key1 val1 key2 val2         Loki     Loki  Promtail  Grafana  Prometheus    helm upgrade   install loki loki loki stack   set grafana enabled true prometheus enabled true prometheus alertmanager persistentVolume enabled false prometheus server persistentVolume enabled false    Loki     Loki  Promtail  Grafana  Prometheus    helm upgrade   install loki loki loki stack     set fluent bit enabled true promtail enabled false grafana enabled true prometheus enabled true prometheus alertmanager persistentVolume enabled false prometheus server persistentVolume enabled false    Grafana    Helm    Grafana   Kubernetes                  helm install stable grafana  n loki grafana     Grafana                     kubectl secret   namespace loki grafana  o jsonpath    data admin password     base64   decode   echo     Grafana UI                 kubectl port forward   namespace service l",
        "objectID": "post/Loki简明教程",
        "subtitle": "云原生日志收集工具 Loki 使用教程",
        "date": "2020-08-19T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "Loki",
            "grafana"
        ],
        "keywords": [
            "kubernetes",
            "Loki",
            "Grafana",
            "日志"
        ],
        "slug": "grafana-loki-usage",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200819114930.png",
                "desc": "Grafana Loki"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Mac 下安装 cryptography 失败",
        "uri": "post/Mac 下安装 cryptography 失败问题",
        "content": "Mac    cryptography            openssl opensslv h  file not found       pip install cryptography     building  _openssl  extension cc  fno strict aliasing  fno common  dynamic  arch i386  arch x8664  g  Os  pipe  fno common  fno strict aliasing  fwrapv  DENABLEDTRACE  DMACOSX  DNDEBUG  Wall  Wstrict prototypes  Wshorten 64 to 32  DNDEBUG  g  fwrapv  Os  Wall  Wstrict prototypes  DENABLEDTRACE  arch i386  arch x8664  pipe  I System Library Frameworks Python framework Versions 2 7 include python2 7  c build temp macosx 10 12 intel 2 7 openssl c  o build temp macosx 10 12 intel 2 7 build temp macosx 10 12 intel 2 7 openssl o build temp macosx 10 12 intel 2 7 _openssl c 434 10  fatal error   openssl opensslv h  file not found  include   1 error generated  error  command  cc  failed exit status 1            openssl         brew          brew install openssl                                       openssl         env LDFLAGS   L  brew   prefix openssl  lib  CFLAGS   I  brew   prefix openssl  include  pip install cryptography",
        "objectID": "post/Mac 下安装 cryptography 失败问题",
        "date": "2018-07-05T00:00:00.000Z",
        "tags": [
            "mac",
            "python"
        ],
        "keywords": [
            "mac",
            "python",
            "pip",
            "cryptography"
        ],
        "slug": "install-cryptography-failed-in-mac",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1530636100082-7781dfaa6ab3.jpeg",
                "desc": "Eagle on the Way"
            }
        ],
        "category": "python"
    },
    {
        "title": "Memcached的一些坑!!!",
        "uri": "post/Memcached的一些坑",
        "content": "django                                     502                                                                                                   API   15             API                                      API             2M   Memcache          value                                 Memcached          Memcached      item                 Memcached          2G                    Memcached     30                           REALTIME_MAXDELTA 606024 30        250               KEYMAXLENGTH 250                  item     1MB   1MB         POWER_BLOCK 1048576          slab                 I 10m            128M         200   conn_init    freetotal            1024   settings maxconns 1024                 settings factor 1 25  settings chunk_size 48    slab           memcached       socket         libevent                       memcached                                        memcached                                                          item           10m                                                                              1m                        memcached       C              memcached  d  m 2048  l 10 0 0 40  p 11211  d  memcached             m                    M  2048  2 G     l     IP         localhost  p           11211",
        "objectID": "post/Memcached的一些坑",
        "date": "2014-05-28T00:00:00.000Z",
        "tags": [
            "django",
            "Memcached"
        ],
        "slug": "some-pits-of-memcached",
        "category": "django",
        "gitcomment": true
    },
    {
        "title": "Nginx中如何设置301跳转",
        "uri": "post/nginx中设置301跳转",
        "content": "www                    SEO                                                DNS                     dnspod                                                        301   301      302        nginx        nginx   301       server   listen 80  server_name kuaidiantv com www kuaidiantv com  index index html    host     www kuaidiantv com      rewrite         http   www kuaidiantv com  1 permanent           http   atulhost com 301 redirect in nginx",
        "objectID": "post/nginx中设置301跳转",
        "date": "2016-02-27T21:21:00.000Z",
        "tags": [
            "ops",
            "nginx",
            "301"
        ],
        "slug": "nginx-301-redirect",
        "category": "ops",
        "gitcomment": true
    },
    {
        "title": "Kubernetes Operator 快速入门教程",
        "uri": "post/Operator 快速入门教程",
        "content": "Kubernetes                 Promethues Operator                     Prometheus                        Pod Deployment    Prometheus Operator       CoreOS                Operator Framework                   Operator                                 Operator Framework         Operator     Kubernetes Operator Operator    CoreOS          Kubernetes API                                             Operator    Kubernetes                                    Operator     CRD            Kubernetes 1 7                                                                        Kubernetes         Operator      Kubernetes API                                       Pods Services                Operator Framework Operator Framework      CoreOS             Operator                    Operator SDK          Kubernetes API                       Operator     Operator Lifecycle Manager OLM                        Operator            Workflow Operator SDK                Operator  1     SDK        Operator    2            CRD        API 3       SDK API   watch     4     Operator     reconcile    5     Operator SDK       Operator        Demo              Webserver   Kubernetes                 Deployment             Service       Pod   label             Ingress    type NodePort     Service                                                 CRD                                                                 Deployment   Service                            Deployment   Service                      AppService   CRD                         apiVersion  app example com v1 kind  AppService metadata  name  nginx app spec  size  2 image  nginx 1 7 9 ports  port  80 targetPort  80 nodePort  30002           AppService            2  Pod      nodePort 30002                                   Operator                   Operator    Kubernetes             Golang                        Go            dep    Operator SDK      dep                         https   github com golang dep               dep                                                            operator sdk operator sdk                 github                   PATH                 clone                  Mac            brew           brew install operator sdk          operator sdk version operator sdk version  v0 7 0   go version go version go1 11 4 darwin amd64         sdk    v0 7 0              https   github com operator framework operator sdk blob master doc user install operator sdk md                          operator sdk                    operator sdk new             CRD                           mkdir  p operator learning         GOPATH      cd operator learning    export GOPATH  PWD   mkdir  p  GOPATH src github com cnych   cd  GOPATH src github com cnych    sdk        opdemo   operator      operator sdk new opdemo                                          cd opdemo    tree  L 2       Gopkg lock     Gopkg toml     build       Dockerfile       _output       bin     cmd       manager     deploy       crds       operator yaml       role yaml       role_binding yaml       service_account yaml     pkg       apis       controller     vendor       cloud google com       contrib go opencensus io       github com       go opencensus io       go uber org       golang org       google golang org       gopkg in       k8s io       sigs k8s io     version     version go 23 directories  8 files          Operator                  operator sdk new       Operator                          Gopkg toml Gopkg lock   Go Dep           Operator       cmd      main go       operator sdk API          Operator      deploy           Kubernetes             Kubernetes         pkg apis         API        CRD             sdk   CRD                             pkg controller                    vendor   golang vendor                           go dep                  pkg      api         controller        API                    API                    Operator                  operator sdk add api   api version app example com v1   kind AppService                                            API               API       Controller                     operator sdk add controller   api version app example com v1   kind AppService      Operator                                 API      pkg apis app v1 appservice_types go                    AppServiceSpec                  size image ports                                 type AppServiceSpec struct      INSERT ADDITIONAL SPEC FIELDS   desired state cluster    Important  Run  operator sdk generate k8s  regenerate code modifying file    Add custom validation using kubebuilder tags  https   book kubebuilder io beyondbasics generatingcrd html Size  int32 json  size  Image string json  image  Resources corev1 ResourceRequirements json  resources omitempty  Envs   corev1 EnvVar json  envs omitempty  Ports   corev1 ServicePort json  ports omitempty                                                     import   appsv1  k8s io api apps v1  corev1  k8s io api core v1  appv1  github com cnych opdemo pkg apis app v1  metav1  k8s io apimachinery pkg apis meta v1        resources envs ports            k8s io api core v1      ",
        "objectID": "post/Operator 快速入门教程",
        "subtitle": "Kubernetes Operator 101",
        "date": "2019-05-29T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "operator",
            "101"
        ],
        "slug": "k8s-operator-101",
        "keywords": [
            "kubernetes",
            "operator",
            "101",
            "教程"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1559160581-44bd4222d397.jpeg",
                "desc": "https://unsplash.com/photos/S2Q5mdOrrVc"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Pod 中挂载单个文件的方法",
        "uri": "post/Pod 中挂载单个文件的方法",
        "content": "Pod   volume                                                                                     subPath subPath         Pod        volume                ConfigMap      Nginx        1         nginx conf user nginx  worker_processes 1  error_log  var log nginx error log warn  pid  var run nginx pid  events   worker_connections 1024    http   include  etc nginx mime types  default_type application octet stream  logformat main   remoteaddr    remoteuser   timelocal    request      status  bodybytessent   http_referer       httpuseragent    httpxforwarded_for    access_log  var log nginx access log main  sendfile on   tcp_nopush on  keepalive_timeout 65   gzip on  include  etc nginx conf d   conf    2       ConfigMap      kubectl create configmap confnginx   from file nginx conf 3      nginx   Pod       configmap    nginx conf          nginx yaml  apiVersion  extensions v1beta1 kind  Deployment metadata  name  ngtest spec  template  metadata  labels  app  nginx spec  containers  name  nginx image  nginx 1 7 9 ports  containerPort  80 volumeMounts  name  nginx config mountPath   etc nginx nginx conf subPath  nginx conf volumes  name  nginx config configMap  name  confnginx 4      Deployment    kubectl apply  f nginx yaml 5              Pod                  kubectl pods NAME READY STATUS RESTARTS AGE     ngtest 7df9b74f98 btlgp 1 1 Running 0 19m                  nginx conf       kubectl exec  it ngtest 7df9b74f98 btlgp  bin bash root ngtest 7df9b74f98 btlgp    ls  etc nginx  conf d koi utf mime types scgi_params win utf fastcgiparams koi win nginx conf uwsgiparams root ngtest 7df9b74f98 btlgp    cat  etc nginx nginx conf user nginx  worker_processes 1  error_log  var log nginx error log warn  pid  var run nginx pid  events   worker_connections 1024    http   include  etc nginx mime types  default_type application octet stream  logformat main   remoteaddr    remoteuser   timelocal    request      status  bodybytessent   http_referer       httpuseragent    httpxforwarded_for    access_log  var log nginx access log main  sendfile on   tcp_nopush on  keepalive_timeout 65  gzip on  include  etc nginx conf d   conf         nginx conf           ConfigMap              6           subPath                 t Model   os ModeDir       subPath                                       func doBindSubPath mounter Interface  subpath Subpath  kubeletPid int   hostPath string  err error           Create target bind mount  directory directories  empty file    everything else  t  err    os Lstat subpath Path  err    nil   return     fmt Errorf  lstat  s failed   s   subpath Path  err    t Mode     os ModeDir   0   err   os Mkdir bindPathTarget  0750   err    nil     os IsExist err    return     fmt Errorf  error creating directory  s   s   bindPathTarget  err      else        bin touch       file enough possible targets  symlink  device  pipe     socket        bind mounting file correctly changes type    target file  err   ioutil WriteFile bindPathTarget    byte    0640   err    nil   return     fmt Errorf  error creating file  s   s   bindPathTarget  err                          Kubernetes",
        "objectID": "post/Pod 中挂载单个文件的方法",
        "date": "2018-07-24T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "Pod",
            "nginx",
            "configmap"
        ],
        "slug": "pod-mount-single-file",
        "keywords": [
            "kubernetes",
            "Pod",
            "nginx",
            "configmap",
            "subPath",
            "volume"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1532339142463-fd0a8979791a.jpeg",
                "desc": "Chilling in Georgia"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes Pod 工作流",
        "uri": "post/pod 工作流程",
        "content": "Pod Kubernetes               Pod              Pod                                   Kubernetes   apiserver           etcd               apiserver        etcd       apiserver                REST API       8080         6443                  apiserver        kube controller manager kube scheduler kubelet   apiserver watch API                              apiserver                    apiserver REST API apiserver watch API     Pod           Pod                   Pod                 Pod                        apiserver REST API    Pod   apiserver            etcd    kube scheduler  apiserver watch API                      Pod        Pod     Node         kube scheduler                      Node     Pod    Node            etcd             Node    kubelet  apiserver watch API        Pod           Pod                 container runtime    Docker        Pod   kubelet    container runtime  Pod         apiserver           etcd            Pod                               apiserver watch API kube scheduler",
        "objectID": "post/pod 工作流程",
        "date": "2018-05-15T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "Pod"
        ],
        "keywords": [
            "kubernetes",
            "Pod",
            "workflow",
            "工作流"
        ],
        "slug": "pod-workflow",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1497864149936-d3163f0c0f4b.jpeg",
                "desc": "Coloured pencils"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "初始化容器",
        "uri": "post/Pod 的初始化容器",
        "content": "liveness probe        readiness probe                                                       PostStart   PreStop              Init Container         Init Container                                                     Init Container                    Pod                        Init Container                        Init Container                                                       PreStart           Init Container                                         PostStart PreStop  liveness readiness                 Init Container                  Pod                   Init Container                           Pod      infra                                  Pod      Docker            Pod        pause amd64           infra       Pod                                        Pod                         Pod             infra                                                 Init Container                                 Ready                           Web                                Web                                              Web                           Web     Pod      InitContainer                                                    Web                                                                                                   Pod                                                 Pod      apiVersion  v1 kind  Pod metadata  name  init pod1 labels  app  init spec  containers  name  init container image  busybox command    sh     c    echo app running     sleep 3600   initContainers  name  init myservice image  busybox command    sh     c    until nslookup myservice  echo waiting myservice  sleep 2  done    name  init mydb image  busybox command    sh     c    until nslookup mydb  echo waiting mydb  sleep 2  done               Pod     init pod yaml    kubectl create  f init pod yaml pod  init pod  created   kubectl pod NAME READY STATUS RESTARTS AGE init pod 0 1 Init 0 2 0 26s         STATUS   Init 0 2      describe            kubectl describe pod init pod Name  init pod Namespace  default Node  node01 10 151 30 62 Start Time  Wed  30 May 2018 06 39 51  0800 Labels  app init Annotations  Status  Pending IP  10 244 1 23 Init Containers  init myservice  Container ID  docker   99cf46f0fab3841fe7725b386567d03dbd2f427cff5098116a7e3dafb9830b44 Image  busybox Image ID  docker pullable   busybox sha256 141c253bc4c3fd0a201d32dc1f493bcf3fff003b6df416dea4f41046e0f37d47 Port  Host Port  Command  sh  c until nslookup myservice  echo waiting myservice  sleep 2  done  State  Running Started  Wed  30 May 2018 06 40 03  0800 Ready  False Restart Count  0 Environment  Mounts   var run secrets kubernetes io serviceaccount default token n9w2d  ro  init mydb  Container ID  Image  busybox Image ID  Port  Host Port  Command  sh  c until nslookup mydb  echo waiting mydb  sleep 2  done  State  Waiting Reason  PodInitializing Ready  False Restart Count  0 Environment  Mounts   var run secrets kubernetes io serviceaccount default token n9w2d  ro  Containers  main container  Container ID  Image  busybox Image ID  Port  Host Port  Command  sh  c echo app running     sleep 3600 State  Waiting Reason  PodInitializing Ready  False Restart Count  0 Environment  Mounts   var run secrets kubernetes io serviceaccount default token n9w2d  ro  Conditions  Type Status Initialized False Ready False PodScheduled True Volumes  default token n9w2d  Type  Secret  a volume populated Secret  SecretName  default token n9w2d Optional  false QoS Class  BestEffort Node Selectors  Tolerations  node kubernetes io not ready NoExecute 300s node kubernetes io unreachable NoExecute 300s Events  Type Reason Age Message                               Normal Scheduled 1m default scheduler Successfully assigned init pod node01 Normal SuccessfulMountVolume 1m kubelet  node01 MountVolume SetUp succeeded volume  default token n9w2d  Normal Pulling 1m kubelet  node01 pulling image  busybox  Normal Pulled 1m kubelet  node01 Successfully pulled image  busybox  Normal Created 1m kubelet  node01 Created container Normal Started 1m kubelet  node01 Started container     myservice        init mydb main container    PodInitializing             myservice        init mydb main container           init mydb     main container        Service   YAML    kind  Service apiVersion  v1 metadata  name  myservice spec  ports  protocol  TCP port  80 targetPort  6376 kind  Service apiVersion  v1 metadata  name  mydb spec  ports  protocol  TCP port  80 targetPort  6377    Pod                                                                             Pod restartPolicy                 Pod   restartPolicy     Always Init          RestartPolicy                     Pod      Ready          Pod  Pending          Initializing    true                        Pod  apiVersion  v1 kind  Pod metadata  name  init demo spec  containers  name  nginx image  nginx ports  containerPort  80 volumeMounts  name  workdir mountPath   usr share nginx html initContainers  name  install image  busybox command  wget   O    work dir index html  http   www baidu com volumeMounts  name  workdir mountPath    work dir  volumes  name  workdir emptyDir ",
        "objectID": "post/Pod 的初始化容器",
        "subtitle": "Pod Init Container 详解",
        "date": "2018-05-29T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "docker"
        ],
        "keywords": [
            "kubernetes",
            "docker"
        ],
        "slug": "pod-init-container",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1520406625550-148d283f3620.jpeg",
                "desc": "Init Container"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Prometheus Operator 自定义报警",
        "uri": "post/Prometheus Operator 自定义报警",
        "content": "ServiceMonitor                                   PrometheusRule               ServiceMonitor                                  Prometheus Dashboard   Alert                                                                                   Prometheus           AlertManager         rules           Operator            Prometheus Dashboard   Config          AlertManager      alerting  alertrelabelconfigs  separator    regex  prometheus_replica replacement   1 action  labeldrop alertmanagers  kubernetessdconfigs  role  endpoints namespaces  names  monitoring scheme  http path_prefix    timeout  10s relabel_configs  sourcelabels   metakubernetesservicename  separator    regex  alertmanager main replacement   1 action  keep sourcelabels   metakubernetesendpointport_name  separator    regex  web replacement   1 action  keep rule_files   etc prometheus rules prometheus k8s rulefiles 0   yaml    alertmanagers                   endpoints   kubernetes                     alertmanager main      web   Service          alertmanager main    Service  kubectl describe svc alertmanager main  n monitoring Name  alertmanager main Namespace  monitoring Labels  alertmanager main Annotations  kubectl kubernetes io last applied configuration   apiVersion   v1   kind   Service   metadata    annotations      labels    alertmanager   main    name   alertmanager main   namespace   monitoring       Selector  alertmanager main app alertmanager Type  NodePort IP  10 104 156 29 Port  web 9093 TCP TargetPort  web TCP NodePort  web 31918 TCP Endpoints  10 244 2 34 9093 10 244 2 37 9093 10 244 4 109 9093 Session Affinity  None External Traffic Policy  Cluster Events            alertmanager main Port         web            Prometheus   AlertManager                         etc prometheus rules prometheus k8s rulefiles 0         YAML           Prometheus   Pod              YAML       kubectl exec  it prometheus k8s 0  bin sh  n monitoring Defaulting container name prometheus  Use  kubectl describe pod prometheus k8s 0  n monitoring  containers pod   prometheus   ls  etc prometheus rules prometheus k8s rulefiles 0  monitoring prometheus k8s rules yaml  prometheus   cat  etc prometheus rules prometheus k8s rulefiles 0 monitoring pr ometheus k8s rules yaml groups  name  k8s rules rules  expr    sum rate containercpuusagesecondstotal job  kubelet   image      container_name      5m     namespace  record  namespace containercpuusagesecondstotal sum_rate           YAML                  PrometheusRule          cat prometheus rules yaml apiVersion  monitoring coreos com v1 kind  PrometheusRule metadata  labels  prometheus  k8s role  alert rules name  prometheus k8s rules namespace  monitoring spec  groups  name  k8s rules rules  expr    sum rate containercpuusagesecondstotal job  kubelet   image      container_name      5m     namespace  record  namespace containercpuusagesecondstotal sum_rate       PrometheusRule   name   prometheus k8s rules namespace   monitoring               PrometheusRule               prometheus k8s rulefiles 0              yaml                                 PrometheusRule              Prometheus        PrometheusRule                   prometheus                      ruleSelector      rule               prometheus k8s   role alert rules     PrometheusRule              ruleSelector  matchLabels  prometheus  k8s role  alert rules                           prometheus k8s   role alert rules     PrometheusRule                  etcd              etcd                                      etcd                     prometheus etcdRules yaml  apiVersion  monitoring coreos com v1 kind  PrometheusRule metadata  labels  prometheus  k8s role  alert rules name  etcd rules namespace  monitoring spec  groups  name  etcd rules  alert  EtcdClusterUnavailable annotations  summary  etcd cluster small description  one etcd peer goes down cluster will unavailable expr    count up job  etcd      0     count up job  etcd      2   1  for  3m labels  severity  critical    label          prometheus k8s   role alert rules                    rules      kubectl exec  it prometheus k8s 0  bin sh  n monitoring Defaulting container name prometheus  Use  kubectl describe pod prometheus k8s 0  n monitoring  containers pod   prometheus   ls  etc prometheus rules prometheus k8s rulefiles 0  monitoring etcd rules yaml monitoring prometheus k8s rules yaml           rule              rulefiles                           Prometheus Dashboard   Alert                                                                                      AlertManager                         Operator     alertmanager                             alertmanager main    Service    NodePort     Service                status        AlertManager                          prometheus operator contrib kube prometheus manifests        alertmanager secret yaml     apiVersion  v1 data  alertmanager yaml  Imdsb2JhbCI6IAogICJyZXNvbHZlX3RpbWVvdXQiOiAiNW0iCiJyZWNlaXZlcnMiOiAKLSAibmFtZSI6ICJudWxsIgoicm91dGUiOiAKICAiZ3JvdXBfYnkiOiAKICAtICJqb2IiCiAgImdyb3VwX2ludGVydmFsIjogIjVtIgogICJncm91cF93YWl0IjogIjMwcyIKICAicmVjZWl2ZXIiOiAibnVsbCI",
        "objectID": "post/Prometheus Operator 自定义报警",
        "date": "2018-12-19T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus",
            "operator",
            "alertmanager"
        ],
        "slug": "prometheus-operator-custom-alert",
        "keywords": [
            "kubernetes",
            "prometheus",
            "operator",
            "alertmanager",
            "prometheus-operator",
            "钉钉"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/izvuk.jpg",
                "desc": ""
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Prometheus Operator 高级配置",
        "uri": "post/Prometheus Operator 高级配置",
        "content": "Prometheus Operator                                                          Kubernetes          Service Pod                      ServiceMonitor                                         Prometheus Operator                                                                      Prometheus Operator             prometheus io scrape true   annotations   Service         Prometheus        job_name   kubernetes service endpoints  kubernetessdconfigs  role  endpoints relabel_configs  sourcelabels   metakubernetesserviceannotationprometheusio_scrape  action  keep regex  true sourcelabels   metakubernetesserviceannotationprometheusio_scheme  action  replace targetlabel  scheme_ regex   https   sourcelabels   metakubernetesserviceannotationprometheusio_path  action  replace targetlabel  metricspath regex       sourcelabels   address  _metakubernetesserviceannotationprometheusioport  action  replace targetlabel  address_ regex          d      d   replacement   1  2 action  labelmap regex  metakubernetesservicelabel     sourcelabels   metakubernetes_namespace  action  replace targetlabel  kubernetesnamespace sourcelabels   metakubernetesservicename  action  replace targetlabel  kubernetesname                               Kubernetes                         Service        Service  annotation    prometheus io scrape true               prometheus additional yaml                 Secret       kubectl create secret generic additional configs   from file prometheus additional yaml  n monitoring secret  additional configs  created               Prometheus Operator   contrib kube prometheus manifests                        base64       prometheus additional yaml    key           kubectl secret additional configs  n monitoring  o yaml apiVersion  v1 data  prometheus additional yaml  LSBqb2JfbmFtZTogJ2t1YmVybmV0ZXMtc2VydmljZS1lbmRwb2ludHMnCiAga3ViZXJuZXRlc19zZF9jb25maWdzOgogIC0gcm9sZTogZW5kcG9pbnRzCiAgcmVsYWJlbF9jb25maWdzOgogIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfYW5ub3RhdGlvbl9wcm9tZXRoZXVzX2lvX3NjcmFwZV0KICAgIGFjdGlvbjoga2VlcAogICAgcmVnZXg6IHRydWUKICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX2Fubm90YXRpb25fcHJvbWV0aGV1c19pb19zY2hlbWVdCiAgICBhY3Rpb246IHJlcGxhY2UKICAgIHRhcmdldF9sYWJlbDogX19zY2hlbWVfXwogICAgcmVnZXg6IChodHRwcz8pCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9hbm5vdGF0aW9uX3Byb21ldGhldXNfaW9fcGF0aF0KICAgIGFjdGlvbjogcmVwbGFjZQogICAgdGFyZ2V0X2xhYmVsOiBfX21ldHJpY3NfcGF0aF9fCiAgICByZWdleDogKC4rKQogIC0gc291cmNlX2xhYmVsczogW19fYWRkcmVzc19fLCBfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX2Fubm90YXRpb25fcHJvbWV0aGV1c19pb19wb3J0XQogICAgYWN0aW9uOiByZXBsYWNlCiAgICB0YXJnZXRfbGFiZWw6IF9fYWRkcmVzc19fCiAgICByZWdleDogKFteOl0rKSg OjpcZCspPzsoXGQrKQogICAgcmVwbGFjZW1lbnQ6ICQxOiQyCiAgLSBhY3Rpb246IGxhYmVsbWFwCiAgICByZWdleDogX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9sYWJlbF8oLispCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfbmFtZXNwYWNlXQogICAgYWN0aW9uOiByZXBsYWNlCiAgICB0YXJnZXRfbGFiZWw6IGt1YmVybmV0ZXNfbmFtZXNwYWNlCiAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9uYW1lXQogICAgYWN0aW9uOiByZXBsYWNlCiAgICB0YXJnZXRfbGFiZWw6IGt1YmVybmV0ZXNfbmFtZQo  kind  Secret metadata  creationTimestamp  2018 12 20T14 50 35Z name  additional configs namespace  monitoring resourceVersion   41814998  selfLink   api v1 namespaces monitoring secrets additional configs uid  9bbe22c5 0466 11e9 a777 525400db4df7 type  Opaque            prometheus                     prometheus prometheus yaml  apiVersion  monitoring coreos com v1 kind  Prometheus metadata  labels  prometheus  k8s name  k8s namespace  monitoring spec  alerting  alertmanagers  name  alertmanager main namespace  monitoring port  web baseImage  quay io prometheus prometheus nodeSelector  beta kubernetes io os  linux replicas  2 secrets  etcd certs resources  requests  memory  400Mi ruleSelector  matchLabels  prometheus  k8s role  alert rules securityContext  fsGroup  2000 runAsNonRoot  true runAsUser  1000 additionalScrapeConfigs  name  additional configs key  prometheus additional yaml serviceAccountName  prometheus k8s serviceMonitorNamespaceSelector     serviceMonitorSelector     version  v2 5 0            prometheus    CRD         kubectl apply  f prometheus prometheus yaml prometheus monitoring coreos com  k8s  configured            Prometheus   Dashboard              Prometheus Dashboard                                    targets                      Prometheus   Pod       kubectl logs  f prometheus k8s 0 prometheus  n monitoring level error ts 2018 12 20T15 14 06 772903214Z caller main go 240 component k8sclientruntime err  github com prometheus prometheus discovery kubernetes kubernetes go 302  Failed list  v1 Pod  pods forbidden  User   system serviceaccount monitoring prometheus k8s   cannot list pods cluster scope  level error ts 2018 12 20T15 14 06 773096875Z caller main go 240 component k8sclientruntime err  github com prometheus prometheus discovery kubernetes kubernetes go 301  Failed list  v1 Service  services forbidden  User   system serviceaccount monitoring prometheus k8s   cannot list services cluster scope  level error ts 2018 12 20T15 14 06 773212629Z",
        "objectID": "post/Prometheus Operator 高级配置",
        "subtitle": "Prometheus Operator 自动发现以及数据持久化",
        "date": "2018-12-20T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus",
            "operator",
            "storageclass"
        ],
        "slug": "prometheus-operator-advance",
        "keywords": [
            "kubernetes",
            "prometheus",
            "operator",
            "alertmanager",
            "prometheus-operator",
            "钉钉",
            "持久化",
            "自动发现"
        ],
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/xb4u8.jpg",
                "desc": ""
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Prometheus 删除数据指标",
        "uri": "post/Prometheus删除数据指标",
        "content": "Prometheus                                 Prometheus            HTTP API                      API                  Prometheus           web enable admin api                  Kubernetes Pod                    command    bin prometheus  args     config file  etc prometheus prometheus yml     storage tsdb path  prometheus     storage tsdb retention 24h     web enable admin api       admin HTTP API                     web enable lifecycle              localhost 9090   reload               Prometheus Operator                                Staefulset                           API                                     curl  X POST  g  http   localhost 9090 api v1 admin tsdb deleteseries match    kubernetesname  redis        localhost         Prometheus                         kubernetes_name  redis                  job      instance                     curl  X POST  g  http   localhost 9090 api v1 admin tsdb delete_series match    job  kubernetes service endpoints      curl  X POST  g  http   localhost 9090 api v1 admin tsdb delete_series match    instance  10 244 2 158 9090       Prometheus                      curl  X POST  g  http   localhost 9090 api v1 admin tsdb deleteseries match    name_                     API                                                       storage tsdb retention             Prometheus       15",
        "objectID": "post/Prometheus删除数据指标",
        "date": "2018-12-29T00:00:00.000Z",
        "tags": [
            "Prometheus"
        ],
        "slug": "prometheus-delete-metrics",
        "keywords": [
            "Prometheus",
            "删除",
            "数据指标",
            "metrics"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/opd8s.jpg",
                "desc": "kiss"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Prometheus报警AlertManager实战",
        "uri": "post/Prometheus报警AlertManager实战",
        "content": "Kubernetes  Prometheus                Prometheus            grafana                          grafana       grafana            Prometheus                      AlertManager                Kubernetes                k8s                                       kubernetes            AlertManager    Prometheus                       Prometheus Servers           AlertManger      AlertManager             silencing inhibition           email PagerDuty HipChat Slack             AlertManager           3        AlertManger   Prometheus  AlertManager    Prometheus             AlertManager      https   prometheus io docs alerting configuration          alertmanager                        alertmanager  config file simple yml      config file                kubernetes          AlertManager        docker                quay io prometheus alertmanager v0 12 0                         AlertManager               docker           ConfigMap            kind  ConfigMap apiVersion  v1 metadata  name  alertmanager namespace  kube ops data  config yml     global  resolve_timeout  5m route  receiver  webhook group_wait  30s group_interval  5m repeat_interval  4h group_by   alertname  routes  receiver  webhook group_wait  10s match  team  node receivers  name  webhook webhook_configs  url   http   apollo hooks dingtalk   send_resolved  true url   http   apollo hooks prome   send_resolved  true          webhook              email                                                       token URL             URL          Prometheus  AlertManager         Prometheus ConfigMap   AlertManager     alerting  alertmanagers  static_configs  targets    localhost 9093            Prometheus AlertManager      POD   AlertManager      9093       localhost 9093           Prometheus                        rule_files   etc prometheus rules yml   rule_files                 rules yml ConfigMap       etc prometheus        rules yml    groups  name  test rule rules  alert  NodeFilesystemUsage expr   nodefilesystemsize device  rootfs     nodefilesystemfree device  rootfs      nodefilesystemsize device  rootfs     100   80 for  2m labels  team  node annotations  summary      labels instance    High Filesystem usage detected  description      labels instance    Filesystem usage above 80   current value is      value     alert  NodeMemoryUsage expr   nodememoryMemTotal    nodememoryMemFree nodememoryBuffers nodememoryCached      nodememoryMemTotal   100   80 for  2m labels  team  node annotations  summary      labels instance    High Memory usage detected  description      labels instance    Memory usage above 80   current value is      value     alert  NodeCPUUsage expr   100    avg  instance   irate node_cpu job  kubernetes node exporter  mode  idle   5m      100     80 for  2m labels  team  node annotations  summary      labels instance    High CPU usage detected  description      labels instance    CPU usage above 80   current value is      value            3                         CPU          80      label team node receiver   alertmanager                       webhook  receiver         POST        HOOK                                         3     inactive             firing     pending   pending                    firing                           expr      graph                       Prometheus                     ConfigMap      cm yaml  apiVersion  v1 kind  ConfigMap metadata  name  prometheus config namespace  kube ops data  prometheus yml    global  scrape_interval  30s scrape_timeout  30s rule_files   etc prometheus rules yml alerting  alertmanagers  static_configs  targets    localhost 9093   scrape_configs  job_name   prometheus  static_configs  targets    localhost 9090   job_name   kubernetes apiservers  kubernetessdconfigs  role  endpoints scheme  https tls_config  ca_file   var run secrets kubernetes io serviceaccount ca crt bearertokenfile   var run secrets kubernetes io serviceaccount token relabel_configs  sourcelabels   metakubernetesnamespace  metakubernetesservicename  metakubernetesendpointportname  action  keep regex  default kubernetes https job_name   kubernetes nodes  scheme  https tls_config  ca_file   var run secrets kubernetes io serviceaccount ca crt bearertokenfile   var run secrets kubernetes io serviceaccount token kubernetessdconfigs  role  node relabel_configs  action  labelmap regex  metakubernetesnodelabel     targetlabel  address_ replacement  kubernetes default svc 443 sourcelabels   metakubernetesnodename  regex       targetlabel  metricspath replacement   api v1 nodes   1  proxy metrics job_name   kubernetes cadvisor  scheme  https tls_config  ca_file   var run secrets kubernetes io serviceaccount ca crt bearertokenfile   var run secrets kubernetes io serviceaccount token kubernetessdconfigs  role  node relabel_configs  action  labelmap regex  metakubernetesnodelabel     targetlabel  address_ replacement  kubernetes default svc 443 sourcelabels   metakubernetesnodename  regex       targetlabel  metricspath replacement   api v1 nodes   1  proxy metrics cadvisor job_name   kubernetes node exporter  scheme  http tls_config  ca_file   var run secr",
        "objectID": "post/Prometheus报警AlertManager实战",
        "date": "2017-12-27T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus",
            "alertmanager"
        ],
        "keywords": [
            "kubernetes",
            "prometheus",
            "alertmanager",
            "报警",
            "钉钉",
            "webhook"
        ],
        "slug": "alertmanager-of-prometheus-in-practice",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1512389142860-9c449e58a543.jpeg",
                "desc": ""
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Prometheus 记录规则的使用",
        "uri": "post/Prometheus记录规则",
        "content": "Prometheus                                                    Prometheus                                Grafana       Dashboard               Grafana                                                 Prometheus                                                                      Prometheus          Recording Rule                          PromQL                             Kubernetes      CPU                    containercpuusagesecondstotal   containermemoryusage_bytes          CPU                                                                           5                        Prometheus                       containercpuusagesecondstotal      kubenodestatusallocatablecpu_cores      CPU      sum rate containercpuusagesecondstotal 5m      avgovertime sum kubenodestatusallocatablecpu_cores  5m 5m   Load time  15723ms         containermemoryusagebytes      kubenodestatusallocatablememorybytes             avgovertime sum containermemoryusagebytes  15m 15m     avgovertime sum kubenodestatusallocatablememorybytes  5m 5m   Load time  18656ms           Prometheus              Recording Rule                                                meta time          Prometheus Operator        Prometheus                 groups  name  k8s rules rules  expr    sum rate containercpuusagesecondstotal image      container      5m     namespace  record  namespace containercpuusagesecondstotal sum_rate expr    sum containermemoryusage_bytes image      container        namespace  record  namespace containermemoryusage_bytes sum                                                sum rate containercpuusagesecondstotal job  kubelet   image      containername      5m     namespace                         namespace containercpuusagesecondstotal sumrate                             CPU      sum namespace containercpuusagesecondstotal sumrate    avgovertime sum kubenodestatusallocatablecpucores  5m 5m   Load time  1077ms             14                 sum namespace containermemoryusagebytes sum    avgovertime sum kubenodestatusallocatablememorybytes  5m 5m   Load time  677ms          27            Prometheus              rule_files    recoding rule                           rule_files                               groups                           groups  name  example rules  record  job httpinprogressrequests sum expr  sum httpinprogressrequests   job  rule_group                                name               interval    default   global evaluation_interval   rules                       group           rule                     metric    record       PromQL                                      metrics     record    expr            labels                 Prometheus        expr      PromQL                        record           labels                                              global evaluation_interval       global    evaluation_interval    default   1m        DEFINING RECORDING RULES Today Learned  Prometheus Recording Rules",
        "objectID": "post/Prometheus记录规则",
        "subtitle": "PromQL 语句查询性能优化",
        "date": "2019-12-14T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus",
            "rules"
        ],
        "keywords": [
            "kubernetes",
            "prometheus",
            "recording",
            "rules",
            "记录规则"
        ],
        "slug": "recording-rules-on-prometheus",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/prometheus-recording-rules.png",
                "desc": "prometheus recording rules"
            }
        ],
        "category": "prometheus"
    },
    {
        "title": "Prometheus 监控外部 Kubernetes 集群",
        "uri": "post/Prometheus采集外部K8S集群",
        "content": "Prometheus     Kubernetes                         Prometheus                     Kubernetes                 Prometheus                               Prometheus                             Prometheus       Kubernetes                            Kubernetes    cAdvisor               APIServer    kubelet                      Prometheus      Kubernetes                                 APIServer      inCluster       KubeConfig     inCluster      Pod                token   ca crt                                                       Prometheus    APIServer         kubernetessdconfigs               Kubernetes     apiserver cafile bearertokenfile                             Prometheus    Kubernetes       RBAC     prom rbac yaml apiVersion  v1 kind  ServiceAccount metadata  name  prometheus namespace  kube mon apiVersion  rbac authorization k8s io v1 kind  ClusterRole metadata  name  prometheus rules  apiGroups     resources  nodes services endpoints pods nodes proxy verbs  list watch apiGroups   extensions  resources  ingresses verbs  list watch apiGroups     resources  configmaps nodes metrics verbs  nonResourceURLs   metrics verbs  apiVersion  rbac authorization k8s io v1beta1 kind  ClusterRoleBinding metadata  name  prometheus roleRef  apiGroup  rbac authorization k8s io kind  ClusterRole name  prometheus subjects  kind  ServiceAccount name  prometheus namespace  kube mon   Kubernetes                 kubectl apply  f prom rbac yaml         Prometheus     Secret        kubectl sa prometheus  n kube mon  o yaml        secrets  name  prometheus token wj7fb   kubectl describe secret prometheus token wj7fb  n kube mon Name  prometheus token wj7fb Namespace  kube mon        Data namespace  8 bytes token  ca crt  1025 bytes     token   ca crt            APIServer         token           k8s token                  Prometheus      Kubernetes               prometheus yml global  scrape_interval  15s scrape_timeout  15s scrape_configs  job_name  k8s cadvisor honor_timestamps  true metrics_path   metrics scheme  https kubernetessdconfigs    kubernetes      api_server  https   10 151 30 11 6443   apiserver    role  node   node         bearertokenfile  k8s token tls_config  insecureskipverify  true bearertokenfile  k8s token tls_config  insecureskipverify  true relabel_configs  action  labelmap regex  metakubernetesnodelabel     separator    regex       targetlabel  address_ replacement  10 151 30 11 6443 action  replace sourcelabels   metakubernetesnodename  separator    regex       targetlabel  metricspath replacement   api v1 nodes   1  proxy metrics cadvisor action  replace    bearertokenfile         k8s token               bearertoken                       apiserver      Prometheus            APIServer            cAdvisor        relabelconfigs       metricspath__      api v1 nodes   1  proxy metrics cadvisor       APIServer     Kubelet              Prometheus         kubelet                         APIServer       Kubelet             Prometheus           prometheus   config file prometheus yaml         level info ts 2020 06 29T07 31 44 438Z caller main go 695 msg  TSDB started  level info ts 2020 06 29T07 31 44 438Z caller main go 799 msg  Loading configuration file  filename prometheus yaml level info ts 2020 06 29T07 31 44 448Z caller main go 827 msg  Completed loading configuration file  filename prometheus yaml level info ts 2020 06 29T07 31 44 448Z caller main go 646 msg  Server ready receive web requests       Prometheus              Kubernetes                node exporter        Endpoints Pods",
        "objectID": "post/Prometheus采集外部K8S集群",
        "date": "2020-06-29T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus"
        ],
        "keywords": [
            "kubernetes",
            "prometheus",
            "监控",
            "token",
            "secret"
        ],
        "slug": "monitor-external-k8s-on-prometheus",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200629153428.png",
                "desc": "https://unsplash.com/photos/IbumA7v22ZI"
            }
        ],
        "category": "prometheus"
    },
    {
        "title": "Prometheus 黑盒监控",
        "uri": "post/Prometheus黑盒监控",
        "content": "Prometheus                                                Kubernetes                                                                                                                        Blackbox                                      HTTP    TCP                                                                                                                                                    Blackbox Exporter   Prometheus                         HTTP HTTPS DNS TCP    ICMP                     Kubernetes       blackbox exporter           ConfigMap        Blackbox            prome blackbox yaml  apiVersion  v1 kind  ConfigMap metadata  name  blackbox config namespace  kube mon data  blackbox yml     modules  http_2xx    http      Blockbox Exporter           Module         prober  http timeout  10s http  validhttpversions    HTTP 1 1    HTTP 2   validstatuscodes   200                  grafana                method  preferredipprotocol   ip4  httppost2xx    http post      prober  http timeout  10s http  validhttpversions    HTTP 1 1    HTTP 2   method  POST preferredipprotocol   ip4  tcp_connect    TCP      prober  tcp timeout  10s dns    DNS      prober  dns dns  transport_protocol   tcp        udp preferredipprotocol   ip4        ip6 query_name   kubernetes default svc cluster local  apiVersion  apps v1 kind  Deployment metadata  name  blackbox namespace  kube mon spec  selector  matchLabels  app  blackbox template  metadata  labels  app  blackbox spec  containers  image  prom blackbox exporter v0 16 0 name  blackbox args    config file  etc blackbox_exporter blackbox yml   ConfigMap          log level error          ports  containerPort  9115 volumeMounts  name  config mountPath   etc blackbox_exporter volumes  name  config configMap  name  blackbox config apiVersion  v1 kind  Service metadata  name  blackbox namespace  kube mon spec  selector  app  blackbox ports  port  9115 targetPort  9115                kubectl apply  f content monitor manifests install prome blackbox yaml configmap blackbox config created deployment apps blackbox created service blackbox created       Prometheus           BlackBox             apiVersion  v1 kind  ConfigMap metadata  name  prometheus config namespace  kube mon data  prometheus yml    global  scrape_interval  15s scrape_timeout  15s scrape_configs  job_name   prometheus  static_configs  targets    localhost 9090   job_name   kubernetes service dns  metrics_path   probe      metrics   probe params  module   dns       DNS    static_configs  targets  kube dns kube system 53           relabel_configs  sourcelabels   address_  targetlabel  paramtarget sourcelabels   paramtarget  target_label  instance targetlabel  address_ replacement  blackbox 9115             Service             targets     address     paramtarget param         name                 http   header   params         parammodule    params   module      paramtarget         instance        Target     address__      BlockBox Exporter           blackbox 9115           metrics              kubectl apply  f prometheus cm yaml configmap prometheus config configured        reload      curl  X POST  http   10 244 3 174 9090   reload    promethues pod ip    Prometheus   Target               kubernetes service dns         Graph         probe_success job  kubernetes service dns                   DNS           DNS                 http_2xx         HTTP    HTTP                       HTTP           HTTP                                                                                        http                 Blackbox     http_2xx             Prometheus                     Prometheus                  Service   Ingress                                job_name   kubernetes http services  metrics_path   probe params  module   http_2xx         http   kubernetessdconfigs  role  service   service         relabel_configs    service annotation     prometheus io http_probe true        sourcelabels   metakubernetesserviceannotationprometheusiohttpprobe  action  keep regex  true sourcelabels   address_  targetlabel  paramtarget targetlabel  address_ replacement  blackbox 9115 sourcelabels   paramtarget  target_label  instance action  labelmap regex  metakubernetesservicelabel     sourcelabels   metakubernetes_namespace  targetlabel  kubernetesnamespace sourcelabels   metakubernetesservicename  targetlabel  kubernetesname job_name   kubernetes ingresses  metrics_path   probe params  module   http_2xx         http   kubernetessdconfigs  role  ingress   ingress         relabel_configs    ingress annotation     prometheus io http_probe true       sourcelabels   metakubernetesingressannotationprometheusiohttpprobe  action  keep regex  true sourcelabels   metakubernetesingressscheme address _metakubernetesingresspath  regex                 replacement    1      2   3  targetlabel  paramtarget targetlabel  address_ replacement  blackbox 9115 sourcelabels   paramtarget  target_label  instance action  labelmap regex  metakubernetesingresslabel     sourcelabels   metakubernetes_namespace  targetlabel  kubernetesnamespace sourcelabels   metakubernetesingressname  targetla",
        "objectID": "post/Prometheus黑盒监控",
        "date": "2019-12-13T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus",
            "blackbox"
        ],
        "keywords": [
            "kubernetes",
            "prometheus",
            "blackbox",
            "exporter",
            "黑盒"
        ],
        "slug": "blackbox-exporter-on-prometheus",
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1576132526842-61e6db8dbb9b.jpeg",
                "desc": "Cirkular Khrome-1"
            }
        ],
        "category": "prometheus"
    },
    {
        "title": "Prometheus Operator 初体验",
        "uri": "post/Promethues Operator 的安装使用",
        "content": "Kubernetes                     Prometheus AlertManager                                            Prometheus          Kubernetes                                                   Prometheus Operator     Operator Operator  CoreOS           Kubernetes API                                             Operator   Kubernetes                                              Operator                         Operator    CRD              CRD   Kubernetes API     Kubernetes            API            YAML        spec    Kubernetes                       Kubernetes            kubectl     Operator                        Kubernetes                    CoreOS       Operator                 Prometheus Operator Operator          Kubernetes                                                                   Operator                Prometheus Operator                   Prometheus Operator         Prometheus Operator           Operator                     Prometheus ServiceMonitor AlertManager  PrometheusRule4 CRD                4               prometheus          Prometheus Server    ServiceMonitor  exporter      exporter                   metrics        Prometheus    ServiceMonitor   metrics      pull       alertmanager           AlertManager     PrometheusRule    Prometheus                                       Kubernetes                        Service   ServiceMonitor    Kubernetes        ServiceMonitor      labelSelector          Service Prometheus       labelSelector      ServiceMonitor              Prometheus Operator                 Helm                                    Clone       git clone https   github com coreos kube prometheus git   cd manifests   ls 00namespace namespace yaml node exporter clusterRole yaml 0prometheus operator 0alertmanagerCustomResourceDefinition yaml node exporter daemonset yaml                    https   github com coreos prometheus operator tree master contrib kube prometheus        git     https   github com coreos kube prometheus git     manifests                                     prometheus serviceMonitorKubelet yaml                    ServiceMonitor      kubelet  10250                          metrics        10255                     https metrics   http metrics       Prometheus Operator                                  Subsets    v1 EndpointSubset    Ports    v1 EndpointPort    Name   https metrics   Port  10250       Name   http metrics   Port  10255       Name   cadvisor   Port  4194                                           kubectl apply  f                monitoring  namespace                       Operator      4  CRD         kubectl crd  grep coreos alertmanagers monitoring coreos com 5d prometheuses monitoring coreos com 5d prometheusrules monitoring coreos com 5d servicemonitors monitoring coreos com 5d     monitoring             Pod    alertmanager   prometheus    StatefulSet                    prometheus operator   Pod                       kubectl pods  n monitoring NAME READY STATUS RESTARTS AGE alertmanager main 0 2 2 Running 0 21h alertmanager main 1 2 2 Running 0 21h alertmanager main 2 2 2 Running 0 21h grafana df9bfd765 f4dvw 1 1 Running 0 22h kube state metrics 77c9658489 ntj66 4 4 Running 0 20h node exporter 4sr7f 2 2 Running 0 21h node exporter 9mh2r 2 2 Running 0 21h node exporter m2gkp 2 2 Running 0 21h prometheus adapter dc548cc6 r6lhb 1 1 Running 0 22h prometheus k8s 0 3 3 Running 1 21h prometheus k8s 1 3 3 Running 1 21h prometheus operator bdf79ff67 9dc48 1 1 Running 0 21h       Service    kubectl svc  n monitoring NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE alertmanager main ClusterIP 10 110 204 224 9093 TCP 23h alertmanager operated ClusterIP None 9093 TCP 6783 TCP 23h grafana ClusterIP 10 98 191 31 3000 TCP 23h kube state metrics ClusterIP None 8443 TCP 9443 TCP 23h node exporter ClusterIP None 9100 TCP 23h prometheus adapter ClusterIP 10 107 201 172 443 TCP 23h prometheus k8s ClusterIP 10 107 105 53 9090 TCP 23h prometheus operated ClusterIP None 9090 TCP 23h prometheus operator ClusterIP None 8080 TCP 23h          grafana   prometheus           ClusterIP   Service                               Ingress        NodePort     Service               NodePort            grafana   prometheus k8s     Service          NodePort    kubectl edit svc grafana  n monitoring   kubectl edit svc prometheus k8s  n monitoring   kubectl svc  n monitoring NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE grafana NodePort 10 98 191 31 3000 32333 TCP 23h prometheus k8s NodePort 10 107 105 53 9090 30166 TCP 23h                                      prometheus   targets                                               kube controller manager   kube scheduler             ServiceMonitor                 kube scheduler       ServiceMonitor        prometheus serviceMonitorKubeScheduler yaml  apiVersion  monitoring coreos com v1 kind  ServiceMonitor metadata  labels  k8s app  kube scheduler name  kube scheduler namespace  monitoring spec  endpoints  interval  30s    30s       port  http metrics     service     jobLabel  k8s app namespaceSelector                 service        namespace    any  true matchNames  kube system ",
        "objectID": "post/Promethues Operator 的安装使用",
        "date": "2018-12-11T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus",
            "operator"
        ],
        "slug": "first-use-prometheus-operator",
        "keywords": [
            "kubernetes",
            "prometheus",
            "operator",
            "安装",
            "prometheus-operator"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1544436595-18448ba66450.jpeg",
                "desc": "Cold lake"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Prometheus Operator 监控 etcd 集群",
        "uri": "post/Promethues Operator 监控 etcd",
        "content": "Prometheus Operator                        Prometheus Operator                  Kubernetes                                                                                   ServiceMonitor       Prometheus            ServiceMonitor      metrics         Service          Service           metrics                     etcd            Kubernetes          Kubeadm          etcd                                          etcd       etcd                  https               Prometheus     etcd                                      Kubeadm              kubectl       etcd                 kubectl pods  n kube system NAME READY STATUS RESTARTS AGE etcd master 1 1 Running 0 2h   kubectl pod etcd master  n kube system  o yaml        spec  containers  command  etcd   peer cert file  etc kubernetes pki etcd peer crt   listen client urls https   127 0 0 1 2379   advertise client urls https   127 0 0 1 2379   client cert auth true   peer client cert auth true   data dir  var lib etcd   cert file  etc kubernetes pki etcd server crt   key file  etc kubernetes pki etcd server key   trusted ca file  etc kubernetes pki etcd ca crt   peer key file  etc kubernetes pki etcd peer key   peer trusted ca file  etc kubernetes pki etcd ca crt image  k8s gcr io etcd amd64 3 1 12 imagePullPolicy  IfNotPresent livenessProbe  exec  command   bin sh  ec ETCDCTL_API 3 etcdctl   endpoints 127 0 0 1 2379   cacert  etc kubernetes pki etcd ca crt   cert  etc kubernetes pki etcd healthcheck client crt   key  etc kubernetes pki etcd healthcheck client key foo failureThreshold  8 initialDelaySeconds  15 periodSeconds  10 successThreshold  1 timeoutSeconds  15 name  etcd resources     terminationMessagePath   dev termination log terminationMessagePolicy  File volumeMounts  mountPath   var lib etcd name  etcd data mountPath   etc kubernetes pki etcd name  etcd certs        tolerations  effect  NoExecute operator  Exists volumes  hostPath  path   var lib etcd type  DirectoryOrCreate name  etcd data hostPath  path   etc kubernetes pki etcd type  DirectoryOrCreate name  etcd certs               etcd               etc kubernetes pki etcd                          secret              etcd          kubectl  n monitoring create secret generic etcd certs   from file  etc kubernetes pki etcd healthcheck client crt   from file  etc kubernetes pki etcd healthcheck client key   from file  etc kubernetes pki etcd ca crt secret  etcd certs  created                   etcd                      secret                  etcd certs       prometheus            prometheus           kubectl edit prometheus k8s  n monitoring       secrets     nodeSelector  beta kubernetes io os  linux replicas  2 secrets  etcd certs              Prometheus   Pod           etcd                   Pod        kubectl exec  it prometheus k8s 0  bin sh  n monitoring Defaulting container name prometheus  Use  kubectl describe pod prometheus k8s 0  n monitoring  containers pod      ls  etc prometheus secrets etcd certs  ca crt healthcheck client crt healthcheck client key    ServiceMonitor    Prometheus    etcd                   ServiceMonitor      prometheus serviceMonitorEtcd yaml  apiVersion  monitoring coreos com v1 kind  ServiceMonitor metadata  name  etcd k8s namespace  monitoring labels  k8s app  etcd k8s spec  jobLabel  k8s app endpoints  port  port interval  30s scheme  https tlsConfig  caFile   etc prometheus secrets etcd certs ca crt certFile   etc prometheus secrets etcd certs healthcheck client crt keyFile   etc prometheus secrets etcd certs healthcheck client key insecureSkipVerify  true selector  matchLabels  k8s app  etcd namespaceSelector  matchNames  kube system       monitoring             etcd k8s   ServiceMonitor                     kube system             k8s app etcd    label     Service jobLabel        job                     endpoints             etcd       endpoints                    relabel proxyUrl tlsConfig                 tls         serverName   etcd                 insecureSkipVerify true      ServiceMonitor               https   github com coreos prometheus operator blob master Documentation api md             ServiceMonitor       kubectl create  f prometheus serviceMonitorEtcd yaml servicemonitor monitoring coreos com  etcd k8s  created    Service ServiceMonitor                     Service                  Service    prometheus etcdService yaml   apiVersion  v1 kind  Service metadata  name  etcd k8s namespace  kube system labels  k8s app  etcd spec  type  ClusterIP clusterIP  None ports  name  port port  2379 protocol  TCP apiVersion  v1 kind  Endpoints metadata  name  etcd k8s namespace  kube system labels  k8s app  etcd subsets  addresses  ip  10 151 30 57 nodeName  etc master ports  name  port port  2379 protocol  TCP         Service          label          Pod                       etcd                              Endpoints     metadata         Service      Service   clusterIP     None                        Service        Endpoints   subsets     etcd                                Service       kubectl create  f prometheus etcdService yaml             Prometheus   Dashboard     target",
        "objectID": "post/Promethues Operator 监控 etcd",
        "date": "2018-12-18T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus",
            "operator",
            "etcd"
        ],
        "slug": "prometheus-operator-monitor-etcd",
        "keywords": [
            "kubernetes",
            "prometheus",
            "operator",
            "etcd",
            "prometheus-operator"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/jdu4o.jpg",
                "desc": ""
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 中 PV 和 PVC 的状态变化",
        "uri": "post/PV状态变化说明",
        "content": "PV   PVC                                      PV    Failed          PVC           PV          PV           PV   PVC                         PV   PVC                         PV       PV         Available     apiVersion  v1 kind  PersistentVolume metadata  name  nfs pv spec  storageClassName  manual capacity  storage  1Gi accessModes  ReadWriteOnce persistentVolumeReclaimPolicy  Retain nfs  path   data k8s     nfs     server  10 151 30 1     nfs             PV             Available           PVC       kubectl pv nfs pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE nfs pv 1Gi RWO Retain Available manual 7s    PVC      PVC     Pending        PV    Pending         Bound          PVC      Bound PVC   PV                PVC     PV          Pending     apiVersion  v1 kind  PersistentVolumeClaim metadata  name  nfs pvc spec  storageClassName  manual accessModes  ReadWriteOnce resources  requests  storage  1Gi       PVC              Pending       kubectl pvc nfs pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE nfs pvc Pending manual 7s   PVC       PV            Bound    PV    Available       Bound       kubectl pvc nfs pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE nfs pvc Bound nfs pv 1Gi RWO manual 2m8s   kubectl pv nfs pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE nfs pv 1Gi RWO Retain Bound default nfs pvc manual 23s    PV      PVC   PV                           PV                    kubectl delete pv nfs pv persistentvolume  nfs pv  deleted  C   kubectl pv nfs pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE nfs pv 1Gi RWO Retain Terminating default nfs pvc manual 12m   kubectl pvc nfs pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE nfs pvc Bound nfs pv 1Gi RWO manual 13m           PV   hang               PV        PV     Terminating         PVC    Bound               PV   PVC                 PV         Terminating       PVC                                    PV    PV    finalizers         PV    kubectl edit pv nfs pv          finalizers              PV            PVC    Lost        kubectl pv nfs pv Error server  NotFound   persistentvolumes  nfs pv  not found   kubectl pvc nfs pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE nfs pvc Lost nfs pv 0 manual 23m      PV       PVC    Lost                       PV          PVC       PV                                PV              PV   kubectl apply  f volume yaml persistentvolume nfs pv created   PV       PVC   PV         Bound        kubectl pv nfs pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE nfs pv 1Gi RWO Retain Bound default nfs pvc manual 93s PVC         Bound      kubectl pvc nfs pvc NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE nfs pvc Bound nfs pv 1Gi RWO manual 27m    PVC        PV                 PVC                kubectl delete pvc nfs pvc persistentvolumeclaim  nfs pvc  deleted   kubectl pv nfs pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE nfs pv 1Gi RWO Retain Released default nfs pvc manual 3m36s        PVC      PV     Released                CLAIM             PVC            PV                                  PVC      PV      Released             PVC                   PVC     Available     PV                                                    PV    claimRef   PVC          Kubernetes   PV     watch   PV         PV     Available    Available     PV          PVC           PV    cliamRef              cliamRef        kubectl edit pv nfs pv persistentvolume nfs pv edited            PV         Available              PVC               kubectl pv nfs pv NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE nfs pv 1Gi RWO Retain Available manual 12m        Kubernetes      PV",
        "objectID": "post/PV状态变化说明",
        "date": "2020-06-14T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "pv",
            "pvc"
        ],
        "slug": "status-in-pv-pvc",
        "keywords": [
            "kubernetes",
            "pv",
            "pvc",
            "status",
            "状态变化"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200614115018.png",
                "desc": "pv/pvc 状态"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "用python处理csv文件",
        "uri": "post/python处理csv文件",
        "content": "CSV            Sublime Text  EXCEL   python            csv    csv         csv                             import csv def readcsvfile path   open path   rb   f    r     b        reader   csv reader f  row reader  print row f close     csv                                                                          csv                                               import csv def readcsvdata path   data_lines      open path   rb   f  reader   csv reader f  fields   reader next                  row reader  items   dict zip fields  row   data_lines append items  f close   return data_lines   csv      csv                   csv         import csv def writecsvfile path  open path   wb   f    w     b       writer   csv writer f  writer writerow   name    address    age      writerow        data        ych    china   25       Lily    USA    24    writer writerows data    writerows        f close     csv",
        "objectID": "post/python处理csv文件",
        "date": "2015-05-05T00:00:00.000Z",
        "tags": [
            "python",
            "csv"
        ],
        "slug": "python-process-csv-file",
        "category": "django",
        "gitcomment": true
    },
    {
        "title": "Python 虚拟环境全知道",
        "uri": "post/python虚拟环境全知道",
        "content": "python                                                      python           python2 7    python3 6     python                                                 python                       virtualenv   python     pyenv             docker virtualenv   pip install virtualenv    virtualenv        easy_install            Python       pip         virtualenv py   python virtualenv py                           pip                   virtualenv    pip         pip install virtualenv Collecting virtualenv Using cached virtualenv 15 1 0 py2 py3 none any whl Installing collected packages  virtualenv Successfully installed virtualenv 15 1 0                      virtualenv          virtualenv env4test                           source env4test bin activate  env4test                                 env4test       django2 0   env4test   pip install django                        deactivate      pip list          django      virtualenv                     virtualenvwrapper virtualenvwrapper virtualenv                  virtualenv                                                                  pip install virtualenvwrapper                             virtualenvwrapper sh          usr local bin virtualenvwrapper sh    sudo find    name virtualenvwrapper sh Password   usr local bin virtualenvwrapper sh         zshrc             zsh         source  usr local bin virtualenvwrapper sh               source    zshrc          virtualenvwrapper               mkvirtualenv            rmvirtualenv            workon            deactivate        workon  lsvirtualenv  b      https   virtualenvwrapper readthedocs io en latest  pyenv pyenv Python              Python          Pytho        Python                                 sudo    pyenv             Python         virtualenv    Python           Python                                 MAC       homebrew       brew update   brew install pyenv                  pyenv                curl  L https   raw githubusercontent com pyenv pyenv installer master bin pyenv installer   bash                  zshrc         bashrc                          export PATH  HOME  pyenv bin  PATH eval    pyenv init     eval    pyenv virtualenv init                    source    zshrc          pyenv         Python      pyenv versions   system  set  Users ych  pyenv version  3 6 4 3 6 4 envs ops3 6 4 3 6 4 envs talk3 6 4 ops3 6 4 talk3 6 4            Python            Python      pyenv install  l          pyenv install 2 7 3     python   pyenv uninstall 2 7 3     python         pyenv global 2 7 3   pyenv local 2 7 3 global       Python              pyenv version      local                        python version               Python      global   python    shell   local   global pyenv               python version                  global      pyenv shell 2 7 3        shell   Python           shell   PYENV_VERSION                   local   global        pyenv shell   unset    unset          shell        pyenv virtualenv     pyenv               pyenv virtualenv        virtualenv        ls  la    pyenv plugins total 8 drwxr xr x 9 ych staff 288 12 26 16 27   drwxr xr x 23 ych staff 736 12 26 17 44     rw r  r   1 ych staff 52 12 26 16 26  gitignore drwxr xr x 11 ych staff 352 12 26 16 27 pyenv doctor drwxr xr x 12 ych staff 384 12 26 16 27 pyenv installer drwxr xr x 7 ych staff 224 12 26 16 27 pyenv update drwxr xr x 13 ych staff 416 12 26 16 27 pyenv virtualenv drwxr xr x 8 ych staff 256 12 26 16 27 pyenv which ext drwxr xr x 8 ych staff 256 12 26 16 26 python build                  pyenv virtualenvs        pyenv activate             pyenv deactivate        pyenv uninstall       rm  rf    pyenv versions             pyenv virtualenv 3 6 4 env3 6 4       python             python        Python                                    pyenv versions        pyenv pyenv virtualenv           python                                     https   github com pyenv pyenv  Docker                                       Docker                  Docker                                                                                       django              testpyenv tree       manage py     testpyenv     init py     settings py     urls py     wsgi py             requirements txt  Django  2 0               Dockerfile    python 3 6 4        RUN mkdir  p  usr src app WORKDIR  usr src app        Docker      ADD   requirements txt  usr src app requirements txt      RUN pip install  r requirements txt      ADD    usr src app      CMD python manage py runserver 0 0 0 0 8000   django2 0   python3                python 3 6 4                                    docker build  t cnych testpyenv v0 1 1                       start sh          docker run  d  p 8000 8000   name testpyenv cnych testpyenv v0 1 1     8000      8000                  source start sh                 http   127 0 0 1 8000                                                                                                               django                                                         Docker      volume                                     start sh    work_path   pwd  docker run  d  p 8000 8000   name te",
        "objectID": "post/python虚拟环境全知道",
        "date": "2018-01-09T00:00:00.000Z",
        "tags": [
            "python",
            "pyenv",
            "virtualenv",
            "docker"
        ],
        "keywords": [
            "python",
            "pyenv",
            "virtualenv",
            "docker",
            "虚拟"
        ],
        "slug": "python-virtualenv-all-know",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1500644970114-4ff3c3dfb61f.jpeg",
                "desc": "Reach for the End."
            }
        ],
        "category": "python"
    },
    {
        "title": "Python装饰器简介",
        "uri": "post/python装饰器简介",
        "content": "Python                                                                                                                                                                                     def anewdecorator a_func   def wrapTheFunction    print  I doing boring work executing a_func     a_func   print  I doing boring work executing a_func     return wrapTheFunction def afunctionrequiring_decoration    print  I function needs decoration remove foul smell   afunctionrequiring_decoration    outputs   I function needs decoration remove foul smell  afunctionrequiringdecoration   anewdecorator afunctionrequiringdecoration   now afunctionrequiring_decoration wrapped wrapTheFunction   afunctionrequiring_decoration    outputs I doing boring work executing a_func   function needs decoration remove foul smell doing boring work executing a_func      python                                                                                                        anewdecorator def afunctionrequiring_decoration       Hey you  Decorate me     print  I function needs decoration    remove foul smell   afunctionrequiring_decoration    outputs  doing boring work executing a_func   function needs decoration remove foul smell doing boring work executing a_func    the  anewdecorator just short saying  afunctionrequiringdecoration   anewdecorator afunctionrequiringdecoration       wraps      Python                                    print afunctionrequiringdecoration name_  Output  wrapTheFunction           Ouput      afunctionrequiring_decoration        warpTheFunction                     docstring      Python                       functools wraps             functools wraps  functools import wraps def anewdecorator a_func    wraps a_func  def wrapTheFunction    print  I doing boring work executing a_func     a_func   print  I doing boring work executing a_func     return wrapTheFunction  anewdecorator def afunctionrequiring_decoration       Hey yo  Decorate me     print  I function needs decoration    remove foul smell   print afunctionrequiringdecoration name_  Output  afunctionrequiring_decoration                          functools import wraps def decorator_name f    wraps f  def decorated args   kwargs   not can_run  return  Function will not run  return f args   kwargs  return decorated  decorator_name def func    return  Function running   can_run   True print func    Output  Function running can_run   False print func    Output  Function will not run     wraps                                                                                    wraps                                                             decorator_name                               Python                                                                                functools import wraps def logit logfile  out log    def logging_decorator func    wraps func  def wrapped_function args   kwargs   logstring   func name_     called  print log_string    logfile       open logfile   a   opened_file            logfile openedfile write logstring     n   return func args   kwargs  return wrapped_function return logging_decorator  logit   def myfunc1    pass myfunc1   Output  myfunc1 called        out log                       logit logfile  func2 log   def myfunc2    pass myfunc2   Output  myfunc2 called        func2 log                                         logit                                                                             email                                                                                           logit  functools import wraps class logit object   def init self  logfile  out log    self logfile   logfile def call self  func    wraps func  def wrapped_function args   kwargs   logstring   func name_     called  print log_string    logfile    open self logfile   a   opened_file               openedfile write logstring     n             self notify   return func args   kwargs  return wrapped_function def notify self   logit          pass                                                   logit   def myfunc1    pass       logit        email      email              class email_logit logit         logit                email         def init self  email  admin myproject com   args   kwargs   self email   email super logit  self  init args   kwargs  def notify self       email self email          pass       email_logit    logit",
        "objectID": "post/python装饰器简介",
        "date": "2016-11-14T00:00:00.000Z",
        "publishdate": "2016-11-14T00:00:00.000Z",
        "bigimg": [
            {
                "src": "/img/posts/decorator-cover.jpg",
                "desc": ""
            }
        ],
        "tags": [
            "python",
            "装饰器"
        ],
        "slug": "django-decorator-usage",
        "category": "python",
        "gitcomment": true
    },
    {
        "title": "RC、RS 使用方法",
        "uri": "post/RC和RS的使用",
        "content": "Pod                        Pod          Pod                                                        Pod         Pod                                                      Pod           Pod                                                                          Pod                                                                  Pod    Pod            Pod                   Pod                                Kubernetes                Replication Controller        Pod Replica Set     Replication Controller Deployment          Pod Replica Set Replication Controller RC  Replication Controller  RC RC Kubernetes                RC           Pod          Pod          Pod                                 Pod  Pod            RC         Pod                Pod        RC      Pod                                                        Pod      RC   Pod                  Pod               Pod                      Pod  10              2                                                HPA                                                      RC          Nginx Pod YAML      apiVersion  v1 kind  ReplicationController metadata  name  rc demo labels  name  rc spec  replicas  3 selector  name  rc template  metadata  labels  name  rc spec  containers  name  nginx demo image  nginx ports  containerPort  80    YAML          Pod     kind ReplicationController spec replicas    Pod        1 spec selector  RC            Pod spec template           Pod            apiVersion kind  spec template metadata labels       Pod labels  spec selector     RC          Pod     YAML             RC          rc demo       3 Pod   Pod    nginx        spec selector spec template metadata labels                            spec selector       Pod    metadata labels                                   RC       rc demo yaml     kubectl create  f rc demo yaml   RC    kubectl rc           kubectl describe rc rc demo       RC    Pod      2    kubectl apply  f rc demo yaml      kubectl edit rc rc demo         RC                    nginx 1 7 9    kubectl rolling update rc demo   image nginx 1 7 9        Pod               YAML            kubectl rolling update rc demo  f rc demo yaml                                 RC                              Replication Set RS  Replication Set  RS   Kubernetes                RS Deployment   RC     RS RC                   RC        selector env dev app nginx   RS        selector version  v1  v2                    kubectl        RC              RS                  RS     Deployment                                   Pod              Deployment      Replica Set           RC RS                            RC   Pod            RC        Pod        apiversion kind  RC   label selector      Pod           RC   Pod         Pod           RC   Pod            Pod                                                   RC  RS      Pod                                   Deployment",
        "objectID": "post/RC和RS的使用",
        "subtitle": "使用Replication Controller、Replica Set 管理Pod",
        "date": "2018-06-02T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "Pod"
        ],
        "slug": "use-rc-rs-manage-pod",
        "keywords": [
            "kubernetes",
            "rc",
            "rs",
            "pod"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1493546109643-cd9fda7b38fe.jpeg",
                "desc": "Light in Pinks"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Secret 的使用",
        "uri": "post/Secret 的使用",
        "content": "ConfigMap       ConfigMap       Kubernetes                 ConfigMap                                 ConfigMap         ConfigMap                               Secret Secret              OAuth     ssh key          Secret    Pod      docker              Secret       Opaque base64      Secret                     base64  decode                  kubernetes io dockerconfigjson       docker registry       kubernetes io service account token    serviceaccount   serviceaccout    Kubernetes        secret Pod     serviceaccount    secret      Pod   run secrets kubernetes io serviceaccount   Opaque Secret Opaque          map      value base64                   admin     admin321   Secret                   base64       echo  n  admin    base64 YWRtaW4    echo  n  admin321    base64 YWRtaW4zMjE                         YAML    secret demo yaml  apiVersion  v1 kind  Secret metadata  name  mysecret type  Opaque data  username  YWRtaW4  password  YWRtaW4zMjE              kubectl          kubectl create  f secret demo yaml secret  mysecret  created   get secret        kubectl secret NAME TYPE DATA AGE default token n9w2d kubernetes io service account token 3 33d mysecret Opaque 2 40s     default token cty7pdefault token n9w2d            secret  serviceacount default       describe           kubectl describe secret mysecret Name  mysecret Namespace  default Labels  Annotations  Type  Opaque Data password  8 bytes username  5 bytes         describe      Data              Data                 YAML          kubectl secret mysecret  o yaml apiVersion  v1 data  password  YWRtaW4zMjE  username  YWRtaW4  kind  Secret metadata  creationTimestamp  2018 06 19T15 27 06Z name  mysecret namespace  default resourceVersion   3694084  selfLink   api v1 namespaces default secrets mysecret uid  39c139f5 73d5 11e8 a101 525400db4df7 type  Opaque    Secret                         Volume                                         busybox        secret1 pod yaml  apiVersion  v1 kind  Pod metadata  name  secret1 pod spec  containers  name  secret1 image  busybox command      bin sh     c    env    env  name  USERNAME valueFrom  secretKeyRef  name  mysecret key  username name  PASSWORD valueFrom  secretKeyRef  name  mysecret key  password             secretKeyRef           configMapKeyRef            Secret          ConfigMap           Pod    kubectl create  f secret1 pod yaml pod  secret1 pod  created       Pod         kubectl logs secret1 pod     USERNAME admin PASSWORD admin321           USERNAME   PASSWORD             Volume            Pod    Volume       Pod    secret2 pod yaml  apiVersion  v1 kind  Pod metadata  name  secret2 pod spec  containers  name  secret2 image  busybox command     bin sh     c    ls  etc secrets   volumeMounts  name  secrets mountPath   etc secrets volumes  name  secrets secret  secretName  mysecret   Pod    kubectl create  f secret pod2 yaml pod  secret2 pod  created               kubectl logs secret2 pod password username     secret   key                                              secretName    items   key   path            ConfigMap          kubernetes io dockerconfigjson      Opaque                docker registry   Secret     kubectl create             kubectl create secret docker registry myregistry   docker server DOCKERSERVER   docker username DOCKERUSER   docker password DOCKERPASSWORD   docker email DOCKEREMAIL secret  myregistry  created     Secret      kubectl secret NAME TYPE DATA AGE default token n9w2d kubernetes io service account token 3 33d myregistry kubernetes io dockerconfigjson 1 15s mysecret Opaque 2 34m       TYPE   myregistry      kubernetes io dockerconfigjson        describe             kubectl describe secret myregistry Name  myregistry Namespace  default Labels  Annotations  Type  kubernetes io dockerconfigjson Data  dockerconfigjson  152 bytes        Data                       o yaml           kubectl secret myregistry  o yaml apiVersion  v1 data   dockerconfigjson  eyJhdXRocyI6eyJET0NLRVJfU0VSVkVSIjp7InVzZXJuYW1lIjoiRE9DS0VSX1VTRVIiLCJwYXNzd29yZCI6IkRPQ0tFUl9QQVNTV09SRCIsImVtYWlsIjoiRE9DS0VSX0VNQUlMIiwiYXV0aCI6IlJFOURTMFZTWDFWVFJWSTZSRTlEUzBWU1gxQkJVMU5YVDFKRSJ9fX0  kind  Secret metadata  creationTimestamp  2018 06 19T16 01 05Z name  myregistry namespace  default resourceVersion   3696966  selfLink   api v1 namespaces default secrets myregistry uid  f91db707 73d9 11e8 a101 525400db4df7 type  kubernetes io dockerconfigjson       data dockerconfigjson        base64                   echo eyJhdXRocyI6eyJET0NLRVJfU0VSVkVSIjp7InVzZXJuYW1lIjoiRE9DS0VSX1VTRVIiLCJwYXNzd29yZCI6IkRPQ0tFUl9QQVNTV09SRCIsImVtYWlsIjoiRE9DS0VSX0VNQUlMIiwiYXV0aCI6IlJFOURTMFZTWDFWVFJWSTZSRTlEUzBWU1gxQkJVMU5YVDFKRSJ9fX0    base64  d   auths    DOCKERSERVER    username   DOCKERUSER   password   DOCKERPASSWORD   email   DOCKEREMAIL   auth   RE9DS0VSX1VTRVI6RE9DS0VSX1BBU1NXT1JE                   docker             myregistry  Secret  apiVersion  v1 kind  Pod metadata  name  foo spec  containers  name  foo image  192 168 1 100 5000 test v1 imagePullSecrets  name  myregistry             192 168 1 100 5000 test v1                     Secret    Pod  YAM",
        "objectID": "post/Secret 的使用",
        "subtitle": "Kubernetes Secret 资源对象使用方法",
        "date": "2018-06-20T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "secret"
        ],
        "keywords": [
            "kubernetes",
            "secret"
        ],
        "slug": "use-secret-in-k8s",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1517960413843-0aee8e2b3285.jpeg",
                "desc": "happy moment"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Service 的使用",
        "uri": "post/Service 的使用",
        "content": "Pod            Pod                          RC Deployment            Pod     Pod     IP       Pod           IP                              Pod             Pod    API           Pod          Pod                     Pod                         Pod                 IP                                                     Kubernetes                          IP               WEB              Nginx          Nginx                                 Nginx    upstream                                  Consul ZooKeeper       etcd                                                       Nginx                                                                           Pod                  Pod                               Pod             Pod                                   Kubernetes                    Service Service               Pod                                   Serivce     Pod      Label Selector                         3                                                   Pod                                             Service                        IP        Service           Kubernetes      IP                Node IP Node   IP   Pod IP  Pod IP   Cluster IP  Service IP      Node IP Kubernetes          IP                                  Kubernetes        Kubernetes                   Node IP                IP     Pod IP   Pod IP     Docker Engine  docker0   IP                 flannel              Pod IP        Cluster IP      IP      Kubernetes Service      Kubernetes                    ping                          Service Port                 Service   Service                                 Pod           8080             app myapp                       Service    apiVersion  v1 kind  Service metadata  name  myservice spec  selector  app  myapp ports  protocol  TCP port  80 targetPort  8080 name  myapp http        kubectl create  f myservice yaml         myservice Service              TCP      8080      app myapp Pod    Service              Cluster IP  Service       selector   Pod     Pod         myservice Endpoints                    Pod            Service               targetPort        targetPort      port                targetPort              backend Pod                               backend Pod                   Service                   Service     TCP   UDP        TCP     kube proxy          Kubernetes      Node     kube proxy       Service     VIP    IP         clusterIP          Kubernetes        iptables             kube proxy   Kubernetes master  Service     Endpoints               Service       iptables            Service   clusterIP    IP                  Service     backend                Endpoints          iptables              backend Pod                backend               IP            service spec sessionAffinity        ClientIP         None                     Pod      iptables              Pod         readiness probes  Service         Service                 Service           ClusterIP                   ClusterIP         IP                                ServiceType  NodePort      Node      IP       NodePort      NodePort        ClusterIP       ClusterIP                             NodePort     LoadBalancer                                      NodePort     ClusterIP                      ExternalName      CNAME               externalName           foo bar example com                  Kubernetes 1 7        kube dns      NodePort         type     NodePort Kubernetes master               30000 32767         Node          Node           Service        Service   spec ports    nodePort                                Service        spec ports   nodePort   spec clusterIp spec ports   port                     NodePort           Nginx        service demo yaml  apiVersion  v1 kind  Service metadata  name  myservice spec  selector  app  myapp type  NodePort ports  protocol  TCP port  80 targetPort  80 name  myapp http    Service    kubectl create  f service demo yaml         Service        kubectl svc NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE kubernetes ClusterIP 10 96 0 1 443 TCP 27d myservice NodePort 10 104 57 198 80 32560 TCP 14h       myservice  TYPE        NodePort    PORT S         32560                 describe     Service          kubectl describe svc myservice Name  myservice Namespace  default Labels  Annotations  Selector  app nginx Type  NodePort IP  10 104 57 198 Port  mynginx http 80 TCP TargetPort  80 TCP NodePort  mynginx http 32560 TCP Endpoints  10 244 1 55 80 10 244 2 189 80 10 244 2 190 80   1 more    Session Affinity  None External Traffic Policy  Cluster Events  ExternalName ExternalName   Service        selector             Endpoint                                       kind  Service apiVersion  v1 metadata  name  my service namespace  prod spec  type  ExternalName externalName  my database example com       my service prod svc cluster local                          DNS           my database example com   CNAME                                    DNS                               Kubernetes             Pod       Selector   Endpoint    Service   type",
        "objectID": "post/Service 的使用",
        "subtitle": "学习使用 Kubernetes 中的 Service 对象",
        "date": "2018-06-13T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "Pod"
        ],
        "slug": "use-service-in-k8s",
        "keywords": [
            "kubernetes",
            "service",
            "pod"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1518301885719-b60b8379b2a9.jpeg",
                "desc": "Sunset"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Traefik 2.0 正式版发布",
        "uri": "post/Traefik2.0发布",
        "content": "Traefik 2 0                                                 TCP                Traefik 2 0                 Kubernetes       Traefik 2 0                https   github com cnych kubeapp     SNI           TCP     2 0 alpha                           10  feature request                                             YAML                      tcp  routers  to database  entrypoints  database entrypoint rule  HostSNI    service  database service services  database service  loadBalancer  servers  address  xx xx xx xx xx               database entrypoint             database service              TLS Traefik       SNI     TCP           Traefik      SNI              tcp  routers  to db 1  entrypoints  web secure rule   HostSNI db1 domain   service   db1  tls     to db 2  entrypoints  web secure rule   HostSNI db2 domain   service   db2  tls        Traefik      HTTP   TCP                           HTTP   TCP       Traefik             tcp  routers  to db 1  entrypoints  web secure rule   HostSNI db1 domain   service   db 1  tls     http  routers  to db1 dashboard  entrypoints  web secure rule   Host dashboard db1 domain   service   db1 dashboard  tls               dashboard db1 domain    HTTP            Dashboard          db1 domain    TCP                                             Traefik 2 0                                                                                          BasicAuth                     TOML                 basicauth       http middlewares test auth basicAuth  users     user1 hashed    user2 hashed                    http routers my router to service  rule    host my protected domain   middlewares     test auth   service    service1                                 Kubernetes            Traefik    CRD                                    IngressRoute                apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  test namespace  default spec  entryPoints  web routes  match  Host mydomain  kind  Rule services  name  whoami port  80 middlewares  name  secured apiVersion  traefik containo us v1alpha1 kind  Middleware metadata  name  secured spec  chain  middlewares  name  https only name  known ips name  auth users apiVersion  traefik containo us v1alpha1 kind  Middleware metadata  name  auth users spec  basicAuth  secret  secretUsers      K8S secrets    apiVersion  traefik containo us v1alpha1 kind  Middleware metadata  name  https only spec  redirectScheme  scheme  https apiVersion  traefik containo us v1alpha1 kind  Middleware metadata  name  known ips spec  ipWhiteList  sourceRange  192 168 1 7 127 0 0 1 32       secured          https only know ips auth users  3                    Traefik                                           headers IP                                                     Dashboard        WebUI                                                                  WebUI                                              A B        Traefik 2 0                                                                          API  http  routers  my route  rule   Host my domain   service  my api v1 services  my api v1  loadBalancer  servers  url   http   private ip server 1                                      1 3                  ID       my api v2            http  services  my api v2  loadBalancer  servers  url   http   private ip server 2                           cannary api                         http  services  canary api  weighted  services  name  my api v1 weight  3 name  my api v2 weight  1              canary api     http  routers  my route  rule   Host my domain   service  canary api                                                                                             Traefik 2 0                                                                      http services mirrored api   http services mirrored api mirroring  service    api    http services mirrored api mirroring mirrors   name    api v2  percent   10  http services api   http services api loadBalancer    http services api loadBalancer servers   url    http   private ip server 1    http services api v2   http services api v2 loadBalancer    http services api v2 loadBalancer servers   url    http   private ip server 2                  10                            Traefik 2 0                                               https   docs traefik io v2 0      Traefik 2 0                          1 x                         https   docs traefik io v2 0 migration v1 to v2      Kubernetes                    Ingress         IngressRoute         https   github com containous traefik migration tool       Traefik documentation  website   Github page Containous website Community forum Traefik 2 0",
        "objectID": "post/Traefik2.0发布",
        "date": "2019-09-18T00:00:00.000Z",
        "tags": [
            "traefik",
            "kubernetes",
            "ingress"
        ],
        "keywords": [
            "traefik",
            "kubernetes",
            "traefik 2.0",
            "Ingress",
            "TCP"
        ],
        "slug": "traefik2-ga",
        "gitcomment": true,
        "category": "kubernetes"
    },
    {
        "title": "Traefik 2.0 暴露 Redis(TCP) 服务",
        "uri": "post/Traefik2.0暴露Redis服务",
        "content": "Traefik2 0         Traefik2 0       TCP        Traefik                   Kubernetes                                   https   www qikqiak com traefik book                  Kubernetes                    Kubernetes      Traefik      TCP           Redis           Traefik 2 0        Kubernetes                        https   github com cnych kubeapp     Redis                    Redis    Redis                                  redis yaml  apiVersion  extensions v1beta1 kind  Deployment metadata  name  redis spec  template  metadata  labels  app  redis spec  containers  name  redis image  redis 3 2 11 ports  containerPort  6379 protocol  TCP apiVersion  v1 kind  Service metadata  name  redis spec  ports  port  6379 targetPort  6379 selector  app  redis           kubectl apply  f redis yaml    TCP       Traefik     TCP        SNI   SNI      TLS                                                     IngressRouteTCP     CRD                  CRD      ingressroute redis yaml  apiVersion  traefik containo us v1alpha1 kind  IngressRouteTCP metadata  name  redis spec  entryPoints  redis routes  match  HostSNI    services  name  redis port  6379         entryPoints            Traefik         entryPoints                     Redis          containers  image  traefik v2 0 name  traefik ingress lb ports  name  web containerPort  80 hostPort  80 name  websecure containerPort  443 hostPort  443 name  redis containerPort  6379 hostPort  6379 name  admin containerPort  8080 args    entrypoints web Address  80   entrypoints websecure Address  443   entrypoints redis Address  6379   api insecure true   providers kubernetescrd   api   api dashboard true   accesslog          hostPort                      entryPoints                 entrypoints                   IngressRouteTCP       kubectl apply  f ingressroute redis yaml               Traefik   Dashboard                          Traefik            6379       Redis       redis cli  h redis youdianzhishi com  p 6379 redis youdianzhishi com 6379  ping PONG redis youdianzhishi com 6379  set hello world OK redis youdianzhishi com 6379  hello  world  redis youdianzhishi com 6379             Redis TCP                                https   github com cnych kubeapp tree master traefik2 redis     Traefik 2 0            https   www qikqiak com traefik book",
        "objectID": "post/Traefik2.0暴露Redis服务",
        "date": "2019-10-14T00:00:00.000Z",
        "tags": [
            "traefik",
            "kubernetes",
            "ingress",
            "tcp"
        ],
        "keywords": [
            "traefik",
            "kubernetes",
            "traefik 2.0",
            "Ingress",
            "TCP",
            "redis"
        ],
        "slug": "expose-redis-by-traefik2",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1570997491915-47ade51fed9f.jpeg",
                "desc": "https://unsplash.com/photos/77AW8rM9KGg"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Traefik 2.0 实现灰度发布",
        "uri": "post/Traefik2.0灰度发布",
        "content": "Traefik2 0        Redis TCP            HTTPS       Traefik2 0                                                       Traefik                   Kubernetes                                   https   www qikqiak com traefik book                  Kubernetes                          v2 0 2                                  File Provider                   KubernetesCRD Provider                       Canary                                                    appv1   appv2   Nginx           Traefik            3 4        appv1 1 4        appv2             Traefik2 0            WRR            Kubernetes               appv1              appv1 yaml  apiVersion  apps v1 kind  Deployment metadata  name  appv1 namespace  kube system spec  selector  matchLabels  app  appv1 template  metadata  labels  use  test app  appv1 spec  containers  name  nginx image  nginx ports  containerPort  80 name  portv1 apiVersion  v1 kind  Service metadata  name  appv1 namespace  kube system spec  selector  app  appv1 ports  name  http port  80 targetPort  portv1 appv2              appv2 yaml  apiVersion  apps v1 kind  Deployment metadata  name  appv2 namespace  kube system spec  selector  matchLabels  app  appv2 template  metadata  labels  use  test app  appv2 spec  containers  name  nginx image  nginx ports  containerPort  80 name  portv2 apiVersion  v1 kind  Service metadata  name  appv2 namespace  kube system spec  selector  app  appv2 ports  name  http port  80 targetPort  portv2               kubectl apply  f appv1 yaml   kubectl apply  f appv2 yaml                       kubectl pods  l use test  n kube system NAME READY STATUS RESTARTS AGE appv1 684f8cbc7 b9zm9 1 1 Running 0 2m27s appv2 645d7666b5 qjrjs 1 1 Running 0 37s    WRR           File Provider           Provider                     File Provider                 Provider             Kubernetes               ConfigMap               Traefik   Pod                   traefik dynamic conf   ConfigMap         config              providers file filename           File Provider          providers file watch true       Traefik                volumes  name  config configMap  name  traefik dynamic conf containers  image  traefik v2 0 2 name  traefik ingress lb volumeMounts  name  config mountPath   config ports  name  web containerPort  80 hostPort  80 name  admin containerPort  8080 hostPort  8080 args    entrypoints web Address  80   api insecure true   providers file watch true   providers file filename  config traefik dynamic toml   api   api debug true   api dashboard true   accesslog       YAML        https   github com cnych kubeapp tree master traefik2 canary           File Provider                ConfigMap             traefik dynamic toml              http   http routers   http routers Router0  entryPoints     web   service    app  rule    Host nginx qikqiak com    http services   http services app    http services app weighted services   name    appv1  weight   3   http services app weighted services   name    appv2  weight   1  http services appv1   http services appv1 loadBalancer    http services appv1 loadBalancer servers   url    http   appv1    http services appv2   http services appv2 loadBalancer    http services appv2 loadBalancer servers   url    http   appv2                                   Router0       web           Host nginx qikqiak com                app                  appv1          3             appv2          1      3 4          http   appv1                     Kubernetes      appv1    Service     FQDN                http   appv1 kube system svc cluster local 80         kube system                               1 4         http   appv2                              ConfigMap       kubectl create configmap traefik dynamic conf   from file traefik dynamic toml  n kube system           Traefik2 0            ConfigMap     Traefik Pod    config traefik dynamic toml               nginx qikqiak com     Traefik     Pod                    appv1   appv2                    nginx qikqiak com 4           appv1        3       appv2         1             3 1                 Traefik   BUG     KubernetesCRD Provider   File Provider            File Provider",
        "objectID": "post/Traefik2.0灰度发布",
        "date": "2019-10-25T00:00:00.000Z",
        "tags": [
            "traefik",
            "kubernetes",
            "ingress",
            "灰度"
        ],
        "keywords": [
            "traefik",
            "kubernetes",
            "traefik 2.0",
            "Ingress",
            "TCP",
            "灰度",
            "金丝雀"
        ],
        "slug": "canary-with-traefik2",
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/toa-heftiba-6Y6gaGnVrr4-unsplash.jpg",
                "desc": "https://unsplash.com/photos/6Y6gaGnVrr4"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Traefik 2.0 实现自动化 HTTPS",
        "uri": "post/Traefik2.0自动HTTPS服务",
        "content": "Traefik 2 0    Redis TCP           Traefik     TCP        SNI   SNI      TLS                  TCP       Traefik            TLS              TLS                 Traefik 2 0        HTTPS                     Kubernetes        Traefik 2 0                      https   github com cnych kubeapp     4    IngressRoute yaml crd yaml rbac yaml traefik yaml                       Traefik   WebUI            KubernetesCRD    Provider        IngressRoute        WebUI               IngressRoute yaml  apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  traefik webui namespace  kube system spec  entryPoints  web routes  match  Host traefik qikqiak com  kind  Rule services  name  traefik port  8080     Let s Encrypt        HTTPS         ACME    ACME                                                            Traefik                  args    entrypoints web Address  80   entrypoints websecure Address  443   api insecure true      webui         providers kubernetescrd   api   api dashboard true   accesslog    tls          certificatesresolvers default acme tlsChallenge true        certificatesResolvers default acme email  ych_1024 163 com     ACME         certificatesResolvers default acme storage  acme json          ca     https                  certificatesresolvers default acme caserver https   acme staging v02 api letsencrypt org directory          tlsChallenge    ACME                     Let s Encrypt   Traefik 443                       httpChallenge   dnsChallenge              http                           https   www qikqiak com traefik book https acme                            default                        WebUI    traefik qikqiak com     Traefik                  Traefik    kubectl apply  f traefik yaml             WebUI        443               tlsChallenge             IngressRoute yaml                443          apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  traefik webui tls namespace  kube system spec  entryPoints  websecure        websecure  entryPoint   443   routes  match  Host traefik youdianzhishi com  kind  Rule services  name  traefik port  8080 tls  certResolver  default           default                 kubectl apply  f IngressRoute yaml       IngressRoute      kubectl ingressroutes  n kube system NAME AGE traefik webui 28d traefik webui tls 5h15m                      HTTPS              Traefik           ACME                     30    Traefik                     HTTP                    HTTP         HTTPS          Traefik 2 0                      IngressRoute yaml         Middleware   CRD            apiVersion  traefik containo us v1alpha1 kind  Middleware metadata  name  redirect https namespace  kube system spec  redirectScheme  scheme  https              redirectSchemea                         scheme               HTTP          apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  traefik webui namespace  kube system spec  entryPoints  web routes  match  Host traefik youdianzhishi com  kind  Rule services  name  traefik port  8080 middlewares               name  redirect https           kubectl apply  f IngressRoute yaml         HTTP     WebUI             HTTPS                                                    https   github com cnych kubeapp tree master traefik2 https     Traefik 2 0            https   www qikqiak com traefik book",
        "objectID": "post/Traefik2.0自动HTTPS服务",
        "date": "2019-10-16T00:00:00.000Z",
        "tags": [
            "traefik",
            "kubernetes",
            "ingress",
            "https"
        ],
        "keywords": [
            "traefik",
            "kubernetes",
            "traefik 2.0",
            "Ingress",
            "TCP",
            "https",
            "acme"
        ],
        "slug": "automatic-https-with-traefik2",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1571181761981-0765e0328710.jpeg",
                "desc": "Drying roses"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Traefik2.X 版本 中 URL Rewrite 的使用",
        "uri": "post/Traefik2.1中URL Rewrite的使用",
        "content": "ingress nginx   URL Rewrite                     nginx                      Traefik                 URL Rewrite                            Traefik2 1         Traefik2 1               URL Rewrite       Traefik2 1                                    Kubernetes          Nexus                 IngressRoute                    nexus yaml  apiVersion  apps v1 kind  Deployment metadata  name  nexus labels  app  nexus spec  selector  matchLabels  app  nexus template  metadata  labels  app  nexus spec  containers  image  cnych nexus 3 20 1 imagePullPolicy  IfNotPresent name  nexus ports  containerPort  8081 apiVersion  v1 kind  Service metadata  labels  app  nexus name  nexus spec  ports  name  nexusport port  8081 targetPort  8081 selector  app  nexus apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  nexus spec  entryPoints  web routes  kind  Rule match  Host nexus qikqiak com  services  kind  Service name  nexus port  8081                   Traefik2 1    Ingress Controller                    Traefik2 1                         kubectl apply  f nexus yaml   kubectl ingressroute NAME AGE nexus 19h   kubectl pods NAME READY STATUS RESTARTS AGE nexus f9f8c77b5 vvvvw 1 1 Running 0 20h   kubectl svc NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE kubernetes ClusterIP 10 96 0 1 443 TCP 62d nexus NodePort 10 96 175 87 8081 30776 TCP 20h            IngressRoute               nexus qikqiak com     Traefik                                                                                   PATH                        http  nexus qikqiak com foo             Nexus            bar                                  URL Rewrite           StripPrefix                                                                                                        apiVersion  traefik containo us v1alpha1 kind  Middleware metadata  name  strip foo path spec  stripPrefix  prefixes   foo            http  nexus qikqiak com foo         foo                                   Nexus                foo                               IngressRoute     apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  nexus spec  entryPoints  web routes  kind  Rule match  Host nexus qikqiak com     PathPrefix  foo        foo    middlewares  name  strip foo path services  kind  Service name  nexus port  8081              IngressRoute                    http  nexus qikqiak com foo                           Chrome      Network        foo       200                   404                     IngressRoute                   foo                static                      404              static                IngressRoute     apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  nexus spec  entryPoints  web routes  kind  Rule match  Host nexus qikqiak com     PathPrefix  foo  middlewares  name  strip foo path services  kind  Service name  nexus port  8081 kind  Rule match  Host nexus qikqiak com     PathPrefix  static        static     services  kind  Service name  nexus port  8081      IngressRoute                                                                 Network           service       404                   apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  nexus spec  entryPoints  web routes  kind  Rule match  Host nexus qikqiak com     PathPrefix  foo  middlewares  name  replace path services  kind  Service name  nexus port  8081 kind  Rule match  Host nexus qikqiak com      PathPrefix  static     PathPrefix  service         static    service     services  kind  Service name  nexus port  8081                     Traefik2 X                                                         https   www qikqiak com traefik book middlewares overview",
        "objectID": "post/Traefik2.1中URL Rewrite的使用",
        "date": "2020-01-10T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "traefik",
            "ingress"
        ],
        "keywords": [
            "kubernetes",
            "traefik",
            "ingress",
            "rewrite",
            "中间件"
        ],
        "slug": "url-rewrite-on-traefik2.X",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1578612818852-d6b85c0c0ef6.jpeg",
                "desc": "https://unsplash.com/photos/U1WVDMEjwGE"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "自定义 Traefik2 中间件",
        "uri": "post/Traefik2.1自定义中间件",
        "content": "Traefik 2 X                                                                                                                                                             Traefik            low                                              Traefik               Traefik           v2 1         git clone https   github com containous traefik   cd traefik   git checkout v2 1   git checkout  b dev   v2 1              dev               luascript        git submodule add https   github com cnych traefik2 luascript pkg middlewares luascript   git status branch dev Changes committed   use  git reset HEAD      unstage  new file   gitmodules new file  pkg middlewares luascript            luascript           Traefik                                   Traefik               pkg config dynamic middleware go     Middleware                    pkg config dynamic middleware go    Middleware holds Middleware configuration  type Middleware struct          LuaScript  LuaScript json  lua omitempty  toml  lua omitempty  yaml  lua omitempty        k8s deepcopy gen true    LuaScript config type LuaScript struct   Script string json  script omitempty  toml  script omitempty  yaml  script omitempty                      LuaScript          pkg server middleware middlewares go   buildConstructor                     pkg server middleware middlewares go import           github com containous traefik v2 pkg middlewares luascript                     responsibility caller sure b configs middlewareName  Middleware exists func  b  Builder  buildConstructor ctx context Context  middlewareName string   alice Constructor  error           middlewares    LuaScript config LuaScript    nil   middleware    nil   return nil  badConf   middleware   func next http Handler   http Handler  error    return luascript New ctx  next   config LuaScript  middlewareName      middleware    nil   return nil  fmt Errorf  invalid middleware  q configuration  invalid middleware type middleware does not exist   middlewareName    return tracing Wrap ctx  middleware   nil                                 Traefik       go generate   export GOPROXY https   goproxy cn   export GO111MODULE on   go build   cmd traefik                             FileProvider        config toml   http routers   http routers router1  service    service1  middlewares     example luascript   rule    Host localhost    http middlewares   http middlewares example luascript lua  script    example lua   http services   http services service1   http services service1 loadBalancer    http services service1 LoadBalancer servers   url    https   www baidu com             FileProvider              localhost        service1    Service          example luascript    lua               script           example lua                example lua  local http   require  http   local log   require  log   log warn  Hello LUA script   http setResponseHeader  X New Response Header    QikQiak                    Traefik                 providers file    FileProvider            traefik   providers file filename config toml   log level warn INFO 0000  Configuration loaded flags                               curl  v http   localhost Rebuilt URL to  http   localhost  Trying   1    TCP_NODELAY set Connected localhost    1  port 80   0      HTTP 1 1   Host  localhost   User Agent  curl 7 54 0   Accept",
        "objectID": "post/Traefik2.1自定义中间件",
        "date": "2020-01-20T00:00:00.000Z",
        "tags": [
            "traefik",
            "kubernetes",
            "ingress"
        ],
        "keywords": [
            "traefik",
            "中间件",
            "middleware",
            "lua"
        ],
        "slug": "custom-traefik2-middleware",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1579463971814-a71f6a2a3858.jpeg",
                "desc": "https://unsplash.com/photos/P8fQMbVWqTk"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Traefik 团队开源的轻量级 Service Mesh 工具 Maesh",
        "uri": "post/Traefik团队Service Mesh工具Maesh",
        "content": "Containous Traefik                service mesh         Maesh Maesh     Kubernetes                              Maesh     Traefk                                  SMI                      Maesh                                                      Maesh         sidecar                                       Pod                     deployment Maesh                  SMI            sidecar     Maesh        Kubernetes                             Maesh          Kubernetes DNS Maesh    Kubernetes       CoreDNS         Maesh           Kubernetes Service  Maesh                                                           Maesh                     Meash      CoreDNS                                Maesh     TCP   HTTP          HTTP     Maesh    Traefik      virtual host path headers cookies                TCP            SNI                                               Traefik    Maesh     Traefik                 OpenTracing HTTP      GRPC WebSocket TCP                                                   Maesh       Kubernetes               Helm chart                      CRD                      Pod   Service                      Maesh           Maesh    helm repo add maesh https   containous github io maesh charts   helm repo update   helm install   name maesh   namespace maesh maesh maesh               Maesh                       Maesh    kubectl annotate service web application maesh containo us traffic type http               TCP      HTTP                    kubectl annotate service mongo database maesh containo us traffic type tcp          Maesh          Istio               http   mae sh  http   docs mae sh  https   github com containous maesh https   community containo us c maesh https   blog containo us announcing maesh a lightweight and simpler service mesh made by the traefik team cb866edc6f29",
        "objectID": "post/Traefik团队Service Mesh工具Maesh",
        "date": "2019-09-05T00:00:00.000Z",
        "tags": [
            "traefik",
            "istio",
            "Mash"
        ],
        "keywords": [
            "traefik",
            "istio",
            "Mash",
            "Service Mesh",
            "服务网格"
        ],
        "slug": "maesh-service-mesh-by-trafik",
        "gitcomment": true,
        "category": "kubernetes"
    },
    {
        "title": "VMWare 开源的 Kubernetes 可视化工具 Octant",
        "uri": "post/VMWare开源的Octant",
        "content": "VMWare       Kubernetes Dashboard        Octant                    Kubernetes                         Kubernetes                          pod    pod                                 Octant               Octant              Dashboard                     Octant              kubectl                                    Octant          Octant              Linux              deb   rpm                GitHub Release                                Octant   GitHub      https   github com vmware octant          Kubernetes     master           Octant       centos             rpm        wget https   github com vmware octant releases download v0 6 0 octant0 6 0Linux 64bit rpm        100                                                                                          21 798 100 33 6KB s 8m 50s 2019 09 03 10 31 02  40 2 KB s     octant0 6 0Linux 64bit rpm  saved  21798100 21798100      rpm          yum install octant0 6 0Linux 64bit rpm Loaded plugins  fastestmirror  langpacks Examining octant0 6 0Linux 64bit rpm  octant 0 6 0 1 x86_64 Marking octant0 6 0Linux 64bit rpm installed Resolving Dependencies     Running transaction check      Package octant x86_64 0 0 6 0 1 will installed     Finished Dependency Resolution        Installed  octant x86_64 0 0 6 0 1 Complete           octant                              KUBECONFIG                Octant                      OCTANTACCEPTEDHOSTS k8s youdianzhishi com KUBECONFIG    kube config OCTANTLISTENERADDR 0 0 0 0 8900 octant 2019 09 03T10 36 57 379 0800 INFO module manager go 75 registering action   component    module manager    actionPath    deployment configuration    module name    overview   2019 09 03T10 36 57 383 0800 INFO api content go 52 Registering routes overview 2019 09 03T10 36 57 398 0800 INFO api content go 52 Registering routes cluster overview 2019 09 03T10 36 57 398 0800 INFO api content go 52 Registering routes configuration 2019 09 03T10 36 57 399 0800 INFO dash dash go 332 Dashboard available http        8900         OCTANTACCEPTEDHOSTS              KUBECONFIG             kubeconfig                  k8s youdianzhishi com 8900    Octant                    Dashboard                               Octant                                 Octant                       docs plugins",
        "objectID": "post/VMWare开源的Octant",
        "date": "2019-09-03T00:00:00.000Z",
        "tags": [
            "vmware",
            "kubernetes",
            "Octant"
        ],
        "keywords": [
            "vmware",
            "kubernetes",
            "Octant",
            "Dashboard",
            "可视化"
        ],
        "slug": "vmware-k8s-dashboard-octant",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1567161569119-2efa25acc395.jpeg",
                "desc": "https://unsplash.com/photos/bun7ERlQamw"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "webpack3入门到放肆视频教程",
        "uri": "post/webpack3入门到放肆视频教程",
        "content": "python        nodejs golang                                                                                              webpack3              webpack                   React Vue        webpack                                                                                                               nodejs                                      Webpack3 x                   Webpack      CSS     ES2015     SASS               CSS JS                    Webpack Manifests",
        "objectID": "post/webpack3入门到放肆视频教程",
        "date": "2017-12-26T00:00:00.000Z",
        "publishdate": "2017-12-26T00:00:00.000Z",
        "bigimg": [
            {
                "src": "/img/posts/webpack-get-started.png",
                "desc": "@海马学院"
            }
        ],
        "tags": [
            "webpack",
            "视频"
        ],
        "slug": "webpack3-get-started",
        "category": "devops",
        "gitcomment": true
    },
    {
        "title": "一文搞懂 Traefik2.1 的使用",
        "uri": "post/一文搞定Traefik2.1",
        "content": "Traefik                                                                      Traefik                            Traefik                                      Traefik                Kubernetes Docker Docker Swarm AWS Mesos Marathon                                           Traefik                                                       Traefik                                                   Traefik                                                                                                  Traefik                                   Traefik        entrypoints                 entrypoints                                                                      Traefik                   Providers                             key value        Docker Kubernetes File Entrypoints                                   HTTP    TCP   Routers      host  path  headers  SSL                              Services            load balancing                             Middlewares                         authentication  rate limiting  headers                                                                    Traefik 2 X        1 X                     2 X                       traefik 2 1 1    Traefik                                                                   providers     Treafik       entrypoints      Traefik                                                                                                     Traefik   Kubernetes                                      kubectl apply  f https   www qikqiak com k8strain network manifests traefik crd yaml   kubectl apply  f https   www qikqiak com k8strain network manifests traefik rbac yaml   kubectl apply  f https   www qikqiak com k8strain network manifests traefik deployment yaml   kubectl apply  f https   www qikqiak com k8strain network manifests traefik dashboard yaml    deployment yaml         master                                                 args    entryPoints web address  80   entryPoints websecure address  443   api true   api dashboard true   ping true   providers kubernetesingress   providers kubernetescrd   log level INFO   accesslog             web   websecure           api true               api internal     service   dashboard           service                   kubernetesingress   kubernetescrd     provider  dashboard yaml         dashboard                        kubectl pods  n kube system NAME READY STATUS RESTARTS AGE traefik 867bd6b9c lbrlx 1 1 Running 0 6m17s          kubectl ingressroute NAME AGE traefik dashboard 30m                 etc hosts        traefik domain com         Traefik   Dashboard      ACME Traefik      CRD        Ingress            Secret            HTTPS            HTTPS                    whoami     apiVersion  v1 kind  Service metadata  name  whoami spec  ports  protocol  TCP name  web port  80 selector  app  whoami kind  Deployment apiVersion  apps v1 metadata  name  whoami labels  app  whoami spec  replicas  2 selector  matchLabels  app  whoami template  metadata  labels  app  whoami spec  containers  name  whoami image  containous whoami ports  name  web containerPort  80        IngressRoute     apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  simpleingressroute spec  entryPoints  web routes  match  Host who qikqiak com     PathPrefix  notls  kind  Rule services  name  whoami port  80    entryPoints                web       80                   who qikqiak com            notls             whoami    Service                                                IngressRoute                      Traefik                   HTTPS                   websecure             443           HTTPS                   openssl                openssl req  x509  nodes  days 365  newkey rsa 2048  keyout tls key  out tls crt  subj   CN who qikqiak com       Secret                         tls crt   tls key   kubectl create secret tls who tls   cert tls crt   key tls key secret who tls created               HTTPS       IngressRoute      apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  ingressroutetls spec  entryPoints  websecure routes  match  Host who qikqiak com     PathPrefix  tls  kind  Rule services  name  whoami port  80 tls  secretName  who tls            HTTPS                                              Traefik       Let s Encrypt            Let s Encrypt        HTTPS         ACME    ACME                                                            Traefik                  args            dns        certificatesResolvers ali acme dnsChallenge provider alidns        certificatesResolvers ali acme email ych_1024 163 com    ACME         certificatesResolvers ali acme storage  etc acme acme json ACME         tlsChallenge httpChallenge   dnsChallenge                http                           https   www qikqiak com traefik book https acme                tls            Traefik   443        dns                       DNS        API                DNS                 ACME             certificatesResolvers ali acme dnsChallenge provider alidns             DNS            DNS          3      ALICLOUDACCESSKEY ALICLOUDSECRETKEY A",
        "objectID": "post/一文搞定Traefik2.1",
        "date": "2019-12-30T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "traefik",
            "ingress"
        ],
        "keywords": [
            "kubernetes",
            "traefik",
            "nginx",
            "ingress",
            "灰度",
            "tcp"
        ],
        "slug": "traefik-2.1-101",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/traefik-cantal-flat.png",
                "desc": "Traefik 2.1"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "带时光机的 Kubernetes Dashboard - Kubevious",
        "uri": "post/一款有趣的k8s dashboard",
        "content": "Kubevious        Kubernetes Dashboard          Dashboard                                                                        Time Machine                                        Kubernetes   Dashboard              Kubevious                              Kubernetes           Hello World                                     Kubevious           UI         Kubernetes                 Deployments ReplicaSets Pods Services Ingresses Volumes ConfigMaps                  Box               Box       Box                              Box                  Kubernetes                                            Kubevious                                                  Kubernetes                                Kubevious                                                  Kubernetes                                 Kubevious                                 Kubevious             Pod Deployment DaemonSet              Kubevious                                                                                                           Kubevious                 radioactive                     hostPID hostNetwork hostIPC        mount                 docker sock                                                                Kubevious                                         Kubevious       Kubernetes                Helm          Helm                     kubectl create namespace kubevious   git clone https   github com kubevious deploy git kubevious deploy git   cd kubevious deploy git kubernetes   helm template kubevious     namespace kubevious    f kubevious values latest yaml     kubevious yaml     Chart       Kubernetes                             Kubevious     MySQL          MySQL                volumeClaimTemplates           StorageClass              PV                      kubectl apply  f kubevious yaml                                                        kubevious mysql init script    ConfigMap     SQL                                                       kubectl exec  it kubevious mysql 0  bin bash  n kubevious root kubevious mysql 0    mysql  uroot  p Enter password  Welcome MySQL monitor  Commands end    g  MySQL connection id 838 Server version  5 7 29 log MySQL Community Server  GPL  Copyright  c  2000  2020  Oracle and or its affiliates  rights reserved  Oracle registered trademark Oracle Corporation and or its affiliates  names may trademarks respective owners  Type  help     h  help  Type   c  clear current input statement  mysql  GRANT PRIVILEGES    root      IDENTIFIED    GRANT OPTION  Query OK  0 rows affected  1 warning  0 11 sec  mysql  FLUSH PRIVILEGES                          kubectl pods  n kubevious NAME READY STATUS RESTARTS AGE kubevious 8467486674 252wl 1 1 Running 0 57m kubevious mysql 0 1 1 Running 1 77m kubevious ui 786b6d68df jp829 1 1 Running 0 66m   kubectl svc  n kubevious NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE kubevious mysql svc ClusterIP None 3306 TCP 3h8m kubevious svc NodePort 10 104 101 24 4000 31651 TCP 3h8m kubevious ui svc NodePort 10 96 43 12 3000 32367 TCP 3h8m        NodePort     Service             http        Kubevious       Kubevious                 MySQL",
        "objectID": "post/一款有趣的k8s dashboard",
        "date": "2020-03-10T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "kubevious"
        ],
        "keywords": [
            "kubernetes",
            "kubevious",
            "时光机",
            "",
            "Time Machine",
            "Dashboard"
        ],
        "slug": "k8s-ui-kubevious",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200310130608.png",
                "desc": "https://unsplash.com/photos/v9MpHbQimqY"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "为kubernetes dashboard访问用户添加权限控制",
        "uri": "post/为kubernetes dashboard访问用户添加权限限制",
        "content": "kubernetes dashboard            Dashboard                              admin        cluster admin                                    token  Dashboard                                                        Role Role               Role       namespace                                         Pods           kind  Role apiVersion  rbac authorization k8s io v1beta1 metadata  namespace  default name  pod reader rules  apiGroups            indicates core API group resources    pods   verbs    get    watch    list   ClusterRole ClusterRole   Role                ClusterRole                          node            endpoints     healthz                   pods                                       secrets       kind  ClusterRole apiVersion  rbac authorization k8s io v1beta1 metadata   namespace  omitted ClusterRoles not namespaced name  secret reader rules  apiGroups       resources    secrets   verbs    get    watch    list   RoleBinding ClusterRoleBinding RoloBinding                    RoleBinding         subjects                         users groups service accounts  RoleBinding               ClusterRoleBinding                         pod reader      jane                   pod reader     role binding allows  jane  read pods  default  namespace  kind  RoleBinding apiVersion  rbac authorization k8s io v1beta1 metadata  name  read pods namespace  default subjects  kind  User name  jane apiGroup  rbac authorization k8s io roleRef  kind  Role name  pod reader apiGroup  rbac authorization k8s io RoleBinding      ClusterRole     namespace          ServiceAccount                               ClusterRole        namespace     RoleBinding           RoleBinding       ClusterRole    ClusterRole          secrets               dave      development      secrets    RoleBinding     development       role binding allows  dave  read secrets  development  namespace  kind  RoleBinding apiVersion  rbac authorization k8s io v1beta1 metadata  name  read secrets namespace  development   grants permissions within  development  namespace  subjects  kind  User name  dave apiGroup  rbac authorization k8s io roleRef  kind  ClusterRole name  secret reader apiGroup  rbac authorization k8s io       ClusterRoleBinding                            ClusterRoleBinding         manager                 secrets      cluster role binding allows anyone  manager  group read secrets namespace  kind  ClusterRoleBinding apiVersion  rbac authorization k8s io v1beta1 metadata  name  read secrets global subjects  kind  Group name  manager apiGroup  rbac authorization k8s io roleRef  kind  ClusterRole name  secret reader apiGroup  rbac authorization k8s io   dashboard                                                              cnych           kube system   pods deployments            ServiceAccount    kubectl create sa cnych  n kube system           role cnych  role yaml  kind  Role apiVersion  rbac authorization k8s io v1 metadata  namespace  kube system name  role cnych rules  apiGroups       resources    pods   verbs    get    watch    list   apiGroups    extensions    apps   resources    deployments   verbs    get    list    watch    create    update    patch    delete        rules     pods deployments                        role cnych   cnych ServiceAccount   role bind yaml  kind  RoleBinding apiVersion  rbac authorization k8s io v1 metadata  name  role bind cnych namespace  kube system subjects  kind  ServiceAccount name  cnych namespace  kube system roleRef  kind  Role name  role cnych apiGroup  rbac authorization k8s io         yaml      kubect create  f role yaml   kubect create  f role bind yaml                       cnych  ServiceAccount token     Dashboard     kubectl secret  n kube system  grep cnych cnych token nxgqx kubernetes io service account token 3 47m   kubectl secret cnych token nxgqx  o jsonpath   data token   n kube system  base64  d         base64         dashboard              token                               token                                      kube system           https       pod namespace kube system             pod                   events forbidden  User  system serviceaccount kube system cnych  cannot list events namespace  kube system                  pod deployment           deployment                                          Role                                     https   kubernetes io docs admin authorization rbac  Add Users Kubernetes  kubectl                 Kubernetes",
        "objectID": "post/为kubernetes dashboard访问用户添加权限限制",
        "date": "2018-01-18T00:00:00.000Z",
        "publishdate": "2017-01-18T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "dashboard",
            "rbac"
        ],
        "keywords": [
            "kubernetes",
            "dashboard",
            "rbac",
            "权限"
        ],
        "slug": "add-authorization-for-kubernetes-dashboard",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1439209306665-700c9bca794c.jpeg",
                "desc": "two boats"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "服务网格(Service Mesh)是什么?",
        "uri": "post/什么是服务网格?",
        "content": "Trace                                                                                                              Service Mesh     Service Mesh  Service Mesh             2016    Linkerd  Buoyant          Linkerd    Service Mesh                  infoQ      istio    Service Mesh                             Service Mesh                                         Willian Morgan Linker  CEO    Service Mesh      service mesh dedicated infrastructure layer handling service to service communication  It s responsible reliable delivery requests complex topology services comprise modern  cloud native application  practice  service mesh typically implemented array lightweight network proxies deployed alongside application code  without application needing aware                                                                                                                                               sidecar Service Mesh                                                      Service Mesh                       Service Mesh                                         Sidecar    Sidecar  Kubernetes    POD         Sidecar                                       Service Mesh                              Service Mesh                                                                                                                                               Service Mesh                     Sidecar                                            Sidecar                                                                                                                                                          Service Mesh                                  Service Mesh                Sidecar                                       Service Mesh                   Sidecar                Service Mesh                      Service Mesh             Serivce Mesh      istio      https   buoyant io 2017 04 25 whats a service mesh and why do i need one",
        "objectID": "post/什么是服务网格?",
        "date": "2017-10-21T00:00:00.000Z",
        "tags": [
            "microservice",
            "Service Mesh",
            "服务网格",
            "微服务"
        ],
        "keywords": [
            "microservice",
            "Service Mesh",
            "服务网格",
            "微服务"
        ],
        "slug": "what-is-service-mesh",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/18723523_813563038801986_2018903369518678016_n.jpg",
                "desc": "断桥残雪@杭州西湖 Apr 30,2017"
            }
        ],
        "category": "microservice"
    },
    {
        "title": "优点知识更新日志",
        "uri": "post/优点知识changelog",
        "content": "1             icon                             icon                                                                  2                                                           3                                                                                                                              iEverything             4                                                                                                   5 CDN   PC                  CDN                      SPA                               6 Roadmap",
        "objectID": "post/优点知识changelog",
        "date": "2020-03-04T00:00:00.000Z",
        "tags": [
            "课程",
            "changelog"
        ],
        "keywords": [
            "kubernetes",
            "课程",
            "视频",
            "教程"
        ],
        "slug": "changelog",
        "gitcomment": true,
        "category": "课程",
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200304113013.png",
                "desc": "https://unsplash.com/photos/ApJp5Nk24a0"
            }
        ]
    },
    {
        "title": "优秀的 Grafana K8S 插件 - DevOpsProdigy KubeGraf",
        "uri": "post/优秀的Grafana的K8S插件",
        "content": "DevOpsProdigy KubeGraf          Grafana Kubernetes      Grafana     Kubernetes                        Kubernetes                    Kubernetes                                                 DevOpsProdigy KubeGraf             Grafana   5 0 0        Kubernetes       Prometheus   node exporter   kube state metrics    Grafana piechart panel            3                Kubernetes                       Kubernetes                           Kubernetes                                                                                                                        CPU               Pods       Dashboards                             5  Dashboard                  node dashboard             Dashboard                 CPU             iowait      CPU                  pod dashboard          Pod               deployments dashboard   Deployment                         statefulsets dashboard daemonsets dashboard      Dashboard                                                      Grafana        Kubernetes                           kubectl pods  n kube mon NAME READY STATUS RESTARTS AGE grafana 5579769f64 7729f 1 1 Running 0 104s          kubectl exec  it grafana 5579769f64 7729f  n kube mon  bin bash bash 5 0  grafana cli plugins install devopsprodigy kubegraf app installing devopsprodigy kubegraf app   1 3 0 from  https   grafana com api plugins devopsprodigy kubegraf app versions 1 3 0 download into   var lib grafana plugins   Installed devopsprodigy kubegraf app successfully Restart grafana installing plugins   bash 5 0           Grafana piechart panel          bash 5 0  grafana cli plugins install Grafana piechart panel                    Grafana            Pod        Pod                            kubectl delete pod grafana 5579769f64 7729f  n kube mon pod  grafana 5579769f64 7729f  deleted Pod                           Grafana          enable          Set first k8s cluster        Kubernetes     URL    Kubernetes Service      https   kubernetes default 443 Access        Server default         Kubernetes                                     kubectl   kubeconfig             Auth     TLS Client Auth   CA Cert         TLS Auth Details         kubeconfig                 kubeconfig           apiVersion  v1 clusters  cluster  certificate authority data  server  https   ydzs master 6443 name  kubernetes contexts  context  cluster  kubernetes user  kubernetes admin name  kubernetes admin kubernetes current context   kubernetes admin kubernetes  kind  Config preferences     users  name  kubernetes admin user  client certificate data  client key data     CA Cert       kubeconfig          base64        Client Cert         base64        Client Key            base64              base64                  https   www base64decode org            additional datasources         prometheus          Save   Test                                DevOpsProdigy KubeGraf                              Dashboard",
        "objectID": "post/优秀的Grafana的K8S插件",
        "date": "2020-03-19T00:00:00.000Z",
        "tags": [
            "prometheus",
            "kubernetes",
            "devops",
            "grafana"
        ],
        "keywords": [
            "prometheus",
            "Kubernetes",
            "K8S",
            "grafana",
            "插件",
            "devops"
        ],
        "slug": "grafana-k8s-plugin-kubegraf",
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200319124414.png",
                "desc": "https://devopsprodigy.com/products/kubegraf"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Configuration-As-Code 运行 Jenkins",
        "uri": "post/使用 Configuration-As-Code 运行 Jenkins",
        "content": "Configuration Code  JcasC         Jenkins          YAML       Jenkins            Jenkins                             CI CD       JcasC                        YAML                      Configuration Code      Jenkins      Git Maven              Pipeline       Java              Vault              Vault vault                   HTTP API                                                                API keys                                                                                               vault                     Docker          docker run  d   name vault   cap add IPC_LOCK  p 8200 8200 vault 1 1 3              vault        KV Key Value Secrets Engine HTTP API V2               Configuration Code        V2                            Vault              docker logs  f vault   Vault server configuration  Api Address  http   0 0 0 0 8200 Cgo  disabled Cluster Address  https   0 0 0 0 8201 Listener 1  tcp  addr   0 0 0 0 8200   cluster address   0 0 0 0 8201   maxrequestduration   1m30s   maxrequestsize   33554432   tls   disabled   Log Level  info Mlock  supported  true  enabled  false Storage  inmem Version  Vault v1 1 3 Version Sha  9bc820f700f83a7c4bcab54c5323735a581b34eb WARNING  dev mode enabled  mode  Vault runs entirely in memory starts unsealed single unseal key  root token already authenticated CLI  so immediately begin using Vault  may need set following environment variable    export VAULT_ADDR  http   0 0 0 0 8200  unseal key root token displayed below case want seal unseal Vault re authenticate  Unseal Key  5YKiMo0qe983 DqkDmQGGZmhN9Dp7JCbl0mrSyMgZ3E  Root Token  s vf0oCbRDGrLNvfYjRfcdcZLg Development mode NOT used production installations    Vault server started  Log data will stream below             Root Token           Token       Jenkins Dashboard   Github                  Jenkins     rootPassword      Github     githubPassword              vault              docker exec  it vault  bin sh     vault kv put secret jenkins rootPassword  githubPassword  https   127 0 0 1 8200 v1 sys internal ui mounts secret jenkins  http  server gave HTTP response HTTPS client     vault kv put      secret                   VAULTADDR VAULTTOKEN                  export VAULT_ADDR  http   0 0 0 0 8200     TOKEN                  missing client token        export VAULT_TOKEN s vf0oCbRDGrLNvfYjRfcdcZLg     vault kv put secret jenkins rootPassword  githubPassword  Key Value created_time 2019 06 13T03 04 04 9804179Z deletion_time n a destroyed false version 1     vault kv secret jenkins             vault kv secret jenkins Metadata        Key Value created_time 2019 06 13T03 04 04 9804179Z deletion_time n a destroyed false version 1 Data           Key Value githubPassword rootPassword      JcasC                  Jenkins                    Java           Jcasc       https   github com jenkinsci configuration as code plugin                                             Jenkins        Jenkins            Pipeline   Github            Maven         Jenkins           Vault      rootPassword          Maven               Jenkins      Maven                                   Git                             jenkins  agentProtocols   JNLP4 connect   Ping  authorizationStrategy  loggedInUsersCanDoAnything  allowAnonymousRead  false crumbIssuer  standard  excludeClientIPFromCrumb  false disableRememberMe  false mode  NORMAL numExecutors  2 primaryView  all  name   all  quietPeriod  5 scmCheckoutRetryCount  0 securityRealm  local  allowsSignup  false enableCaptcha  false users  id   cnych  password    rootPassword  slaveAgentPort  50000 views  all  name   all  tool  git  installations  home   git  name   Default  jdk  installations  home    docker java home  name   jdk  maven  installations  name   maven  properties  installSource  installers  maven  id   3 5 4  credentials  system  domainCredentials  domain   name   github com  description   GitHub  credentials  usernamePassword  scope  SYSTEM id  github cnych username  cnych    Jenkins      Vault               Docker       Jenkins                          Configuration Code               YAML                                                       Web         URL        Jenkins   Vault              Vault              Vault                                            CASCVAULTFILE                    Jenkins     Dockerfile       JcasC              Vault          jenkins jenkins lts ENV CASCJENKINSCONFIG   var jenkins_home jenkins yml  ENV CASCVAULTFILE   var jenkins_home vault yml  COPY jenkins yml   CASCJENKINSCONFIG  COPY vault yml   CASCVAULTFILE  USER jenkins RUN  usr local bin install plugins sh configuration as code configuration as code support git workflow cps global lib   jenkins yml               vault yml          CASCVAULTTOKEN s vf0oCbRDGrLNvfYjRfcdcZLg CASCVAULTPATHS secret jenkins CASCVAULTURL http   192 168 31 9 8200     Dockerfile                    Dockerfile          docker build  t cnych jenkins casc 1 0                            docker run  d   name jenkins  p 8080 8080  p 50000 50000 cnych jenkins casc 1 0              8080       Jenkins           jenkins yml                     ",
        "objectID": "post/使用 Configuration-As-Code 运行 Jenkins",
        "date": "2019-06-13T00:00:00.000Z",
        "tags": [
            "Jenkins",
            "Pipeline",
            "Docker",
            "Vault"
        ],
        "slug": "use-casc-run-jenkins",
        "keywords": [
            "Jenkins",
            "Pipeline",
            "Vault",
            "Docker",
            "Configuration-As-Code"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1560233829-bbfb114ddf90.jpeg",
                "desc": "https://unsplash.com/photos/RIDhjfZZ7Ys"
            }
        ],
        "category": "devops"
    },
    {
        "title": "使用kubeadm搭建kubernetes1.10集群",
        "uri": "post/使用 kubeadm 搭建 kubernetes 1.10 集群",
        "content": "kubeadm Kubernetes            Kubernetes                             kubeadm                          kubeadm   beta             Using kubeadm Create Cluster       kubeadm                       kubeadm                                                    kubernetes                      Centos7                          cat  etc hosts 10 151 30 57 ydzs master1 10 151 30 62 evjfaxic          systemctl stop firewalld   systemctl disable firewalld   SELINUX    setenforce 0   cat  etc selinux config SELINUX disabled    etc sysctl d k8s conf           net bridge bridge nf call ip6tables   1 net bridge bridge nf call iptables   1 net ipv4 ip_forward   1                modprobe br_netfilter   sysctl  p  etc sysctl d k8s conf                                       gcr io                            docker  master            docker pull cnych kube apiserver amd64 v1 10 0 docker pull cnych kube scheduler amd64 v1 10 0 docker pull cnych kube controller manager amd64 v1 10 0 docker pull cnych kube proxy amd64 v1 10 0 docker pull cnych k8s dns kube dns amd64 1 14 8 docker pull cnych k8s dns dnsmasq nanny amd64 1 14 8 docker pull cnych k8s dns sidecar amd64 1 14 8 docker pull cnych etcd amd64 3 1 12 docker pull cnych flannel v0 10 0 amd64 docker pull cnych pause amd64 3 1 docker tag cnych kube apiserver amd64 v1 10 0 k8s gcr io kube apiserver amd64 v1 10 0 docker tag cnych kube scheduler amd64 v1 10 0 k8s gcr io kube scheduler amd64 v1 10 0 docker tag cnych kube controller manager amd64 v1 10 0 k8s gcr io kube controller manager amd64 v1 10 0 docker tag cnych kube proxy amd64 v1 10 0 k8s gcr io kube proxy amd64 v1 10 0 docker tag cnych k8s dns kube dns amd64 1 14 8 k8s gcr io k8s dns kube dns amd64 1 14 8 docker tag cnych k8s dns dnsmasq nanny amd64 1 14 8 k8s gcr io k8s dns dnsmasq nanny amd64 1 14 8 docker tag cnych k8s dns sidecar amd64 1 14 8 k8s gcr io k8s dns sidecar amd64 1 14 8 docker tag cnych etcd amd64 3 1 12 k8s gcr io etcd amd64 3 1 12 docker tag cnych flannel v0 10 0 amd64 quay io coreos flannel v0 10 0 amd64 docker tag cnych pause amd64 3 1 k8s gcr io pause amd64 3 1              shell                  master                         Node          docker pull cnych kube proxy amd64 v1 10 0 docker pull cnych flannel v0 10 0 amd64 docker pull cnych pause amd64 3 1 docker pull cnych kubernetes dashboard amd64 v1 8 3 docker pull cnych heapster influxdb amd64 v1 3 3 docker pull cnych heapster grafana amd64 v4 4 3 docker pull cnych heapster amd64 v1 4 2 docker pull cnych k8s dns kube dns amd64 1 14 8 docker pull cnych k8s dns dnsmasq nanny amd64 1 14 8 docker pull cnych k8s dns sidecar amd64 1 14 8 docker tag cnych flannel v0 10 0 amd64 quay io coreos flannel v0 10 0 amd64 docker tag cnych pause amd64 3 1 k8s gcr io pause amd64 3 1 docker tag cnych kube proxy amd64 v1 10 0 k8s gcr io kube proxy amd64 v1 10 0 docker tag cnych k8s dns kube dns amd64 1 14 8 k8s gcr io k8s dns kube dns amd64 1 14 8 docker tag cnych k8s dns dnsmasq nanny amd64 1 14 8 k8s gcr io k8s dns dnsmasq nanny amd64 1 14 8 docker tag cnych k8s dns sidecar amd64 1 14 8 k8s gcr io k8s dns sidecar amd64 1 14 8 docker tag cnych kubernetes dashboard amd64 v1 8 3 k8s gcr io kubernetes dashboard amd64 v1 8 3 docker tag cnych heapster influxdb amd64 v1 3 3 k8s gcr io heapster influxdb amd64 v1 3 3 docker tag cnych heapster grafana amd64 v4 4 3 k8s gcr io heapster grafana amd64 v4 4 3 docker tag cnych heapster amd64 v1 4 2 k8s gcr io heapster amd64 v1 4 2          Node            join                    kubeadm kubelet kubectl    docker                                                              kubeadm           yum            cat  etc yum repos d kubernetes repo  kubernetes  name Kubernetes baseurl https   packages cloud google com yum repos kubernetes el7 x86_64 enabled 1 gpgcheck 1 repo_gpgcheck 1 gpgkey https   packages cloud google com yum doc yum key gpg https   packages cloud google com yum doc rpm package key gpg EOF        yum                                       cat  etc yum repos d kubernetes repo  kubernetes  name Kubernetes baseurl http   mirrors aliyun com kubernetes yum repos kubernetes el7 x86_64 enabled 1 gpgcheck 0 repo_gpgcheck 0 gpgkey http   mirrors aliyun com kubernetes yum doc yum key gpg http   mirrors aliyun com kubernetes yum doc rpm package key gpg EOF               1 10            yum                   yum makecache fast    yum install  y kubelet kubeadm kubectl                                                     1 10 0                          yum makecache fast   yum install  y kubelet 1 10 0 0   yum install  y kubectl 1 10 0 0   yum install  y kubeadm 1 10 0 0    kubelet             kubelet        yum       kubelet            cgroup driver   systemd  docker cgroup driver cgroupfs                 docker info        docker info  grep Cgroup Cgroup Driver  cgroupfs     kubelet      etc systemd system kubelet service d 10 kubeadm conf     KUBELETCGROUPARGS     cgroupfs  Environment  KUBELETCGROUPARGS   cgroup driver cgroupfs                                kubernetes            Kubernetes 1 8          Swap             kubelet             kubelet    ",
        "objectID": "post/使用 kubeadm 搭建 kubernetes 1.10 集群",
        "date": "2018-04-14T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "kubeadm"
        ],
        "keywords": [
            "kubernetes",
            "kubeadm"
        ],
        "slug": "use-kubeadm-install-kubernetes-1.10",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1496072298559-ee7eacbd1b39.jpeg",
                "desc": "Kings Mountain"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Loki 进行日志监控和报警",
        "uri": "post/使用 Loki 进行日志监控和报警",
        "content": "EFK                           Grafana Loki                  Grafana Loki   3       Promtail Loki   Grafana    PLG                Prometheus       Loki                               Kubernetes                Label            Grafana Loki                3       Promtail Promtail             Loki    Grafana                                   Label          Loki    Promtail          Prometheus             Loki Loki      Prometheus                                  Prometheus                                       Promtail            metrics                                                      Grafana Grafana                                 Loki               Prometheus   Loki                                                   Dashboard                      Loki                 Helm Chart                    Values            Prometheus Operator     Operator       Promtail Prometheus AlertManager    Grafana         Loki              loki stack values yaml           Loki   Values             Loki Stack Values promtail  serviceMonitor  enabled  true additionalLabels  app  prometheus operator release  prometheus pipelineStages  docker     match  selector    app  nginx    stages  regex  expression      PGET      metrics  nginx_hits  type  Counter description   Total nginx requests  source  hits config  action  inc       Promtail     ServiceMonitor             Loki                                      match            app nginx                                          metrics              nginx_hits     Promtail      metrics                           Counter          regex                      Prometheus                Promtail                    Loki    helm repo add loki https   grafana github io loki charts   helm repo update   helm upgrade   install loki loki loki stack   values loki stack values yaml  n kube mon      Prometheus Operator          prom oper values yaml             Values             grafana  additionalDataSources  name  loki access  proxy orgId  1 type  loki url  http   loki 3100 version  1 additionalPrometheusRules  name  loki alert groups  name  testnginxlogs rules  alert  nginx_hits expr  sum increase promtailcustomnginx_hits 1m      2 for  2m annotations  message   nginx_hits total insufficient count      value       alertmanager  config  global  resolve_timeout  1m route  group_by    alertname   group_wait  3s group_interval  5s repeat_interval  1m receiver  webhook alert routes  match  alertname  nginx_hits receiver  webhook alert receivers  name   webhook alert  webhook_configs  url   http   dingtalk hook 5000  send_resolved  true       Grafana     Loki               nginx_hits                                           expr                 1             2   expor          2                              Pending            Alertmanager    WebHook       Alertmanager                         alertname job cluster                                               helm upgrade   install prometheus stable prometheus operator   values prom oper values yaml  n kube mon                  Nginx                 nginx deploy yaml  apiVersion  apps v1 kind  Deployment metadata  name  nginx spec  selector  matchLabels  app  nginx replicas  1 template  metadata  labels  app  nginx spec  containers  name  nginx image  nginx 1 7 9 ports  containerPort  80 apiVersion  v1 kind  Service metadata  name  nginx labels  app  nginx jobLabel  nginx spec  ports  name  nginx port  80 protocol  TCP selector  app  nginx type  NodePort              NodePort                      kubectl apply  f nginx deploy yaml            Pod           kubectl pods  n kube mon NAME READY STATUS RESTARTS AGE alertmanager prometheus prometheus oper alertmanager 0 2 2 Running 0 6m16s loki 0 1 1 Running 0 39m loki promtail 62thc 1 1 Running 0 17m loki promtail 99bpf 1 1 Running 0 17m loki promtail ljw5m 1 1 Running 0 17m loki promtail mr85p 1 1 Running 0 17m loki promtail pw896 1 1 Running 0 17m loki promtail vq8rl 1 1 Running 0 17m prometheus grafana 76668d6c47 xf8d7 2 2 Running 0 13m prometheus kube state metrics 7c64748dd4 5fhns 1 1 Running 0 13m prometheus prometheus oper admission patch pkkp9 0 1 Completed 0 8m7s prometheus prometheus oper operator 765447bc5 vcdzs 2 2 Running 0 13m prometheus prometheus prometheus oper prometheus 0 3 3 Running 1 6m17s   kubectl pods NAME READY STATUS RESTARTS AGE nginx 6f8b869ccf 58rzx 1 1 Running 0 16s             Prometheus Operator     Grafana     Service    NodePort           admin        prom operator       Grafana                         shell        10s   Nginx       true  curl   silent   output  dev null   write out    http_code   http   k8s qikqiak com 31940  sleep 10  echo  done 200 200         Grafana      Nginx                          nginx hints                                               WebHook                             PLG                              https   github com grafana loki tree master docs https   www infracloud io grafana loki log monitoring alerting",
        "objectID": "post/使用 Loki 进行日志监控和报警",
        "date": "2020-06-06T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "loki",
            "prometheus",
            "alertmanager"
        ],
        "slug": "use-loki-monitor-alert",
        "keywords": [
            "kubernetes",
            "loki",
            "prometheus",
            "alertmanager",
            "EFK",
            "ELK"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200606144038.png",
                "desc": "https://unsplash.com/photos/d5LZuoc3qOQ"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "在 Golang 中使用 Cobra 创建 CLI 应用",
        "uri": "post/使用Cobra创建CLI应用",
        "content": "CLI                                   CLI         Golang           CLI                 Golang       CLI                          CLI       npm node go python docker kubectl                                                   Golang         Cobra      CLI       Cobra             CLI              Go      Cobra         Kubernetes Docker Hugo       Cobra                   Commands        Args        Flags                          APPNAME Command Args   Flags      APPNAME Command   Flags Args                   git clone URL  bare go  u URL npm install package   save kubectl pods  n kube system  l app cobra            Cobra             go1 13 3       Go Modules                                  Go Modules                     my calc                 modules    mkdir my calc    cd my calc    go modules             export GO111MODULE on      go mod init my calc go  creating new go mod  module my calc                       go mod               cobra                              export GOPROXY https   goproxy cn   go  u github com spf13 cobra cobra                cobra init        CLI           cobra init   pkg name my calc Cobra applicaton ready  Users ych devs workspace youdianzhishi course my calc            cobra           pkg name                                  init               CLI         tree         LICENSE     cmd       root go     go mod     go sum     main go 1 directory  5 files    main go   CLI         main go        cmd root go     Execute        main go package main import  my calc cmd  func main     cmd Execute              cmd root go     rootCmd root       CLI                       go URL    go    root         go              root go         cobra        rootCmd    CLI             rootCmd                   cmd root go     rootCmd              Run          fmt Println  Hello Cobra CLI     var rootCmd    cobra Command  Use   my calc   Short   A brief description application   Long   A longer description spans multiple lines likely contains examples usage using application  example  Cobra CLI library Go empowers applications  application tool generate needed files quickly create Cobra application    Run  func cmd  cobra Command  args   string    fmt Println  Hello Cobra CLI                                    go build  o my calc                   my calc                                      my calc Hello Cobra CLI init      init     Golang                    cmd root go         init        cobra OnInitialize initConfig                          init                execute                                                     cobra OnInitialize initConfig      initConfig           rootCmd       RUN  func       rootCmd           initConfig                        rootCmd   RUN  func             initConfig          Debug     func initConfig     fmt Println  I m inside initConfig function cmd root go                          go build  o my calc     my calc I m inside initConfig function cmd root go Hello Cobra CLI             initConfig                                   CLI           main go         Debug        cmd root go func init     fmt Println  I m inside init function cmd root go   cobra OnInitialize initConfig        func initConfig     fmt Println  I m inside initConfig function cmd root go            main go func main     fmt Println  I m inside main function main go   cmd Execute                      go build  o my calc     my calc I m inside init function cmd root go I m inside main function main go I m inside initConfig function cmd root go Hello Cobra CLI                   CLI         init           flags   Flags                               Cobra              Persistent Flags   Local Flags  Persistent Flags                            Local Flags                  initConfig          home             my calc                             cmd root go    initConfig             func initConfig     cfgFile               flag            viper SetConfigFile cfgFile    else         Home    home  err    homedir Dir   err    nil   fmt Println err  os Exit 1         Home            my calc        viper AddConfigPath home  viper SetConfigName   my calc                  viper AutomaticEnv                   err    viper ReadInConfig    err    nil   fmt Println  Using config file    viper ConfigFileUsed        viper                   Golang        JSON TOML YAML HCL envfile    Java properties                                              Git        https   github com spf13 viper                                  my calc      rootCmd              Hello Cobra CLI            CLI                                  add     Cobra              cobra add                  cobra add add add created  Users ych devs workspace youdianzhishi course my calc   tree         LICENSE     cmd       add go       root go     go mod     go sum     main go     my calc 1 directory  7 files          cmd root go          add go                    cmd root go                 addCmd            cobra Command      cobra Command     RUN        cobra Command                   init                     rootCmd      rootCmd AddCommand addCmd          addCmd     rootCmd ",
        "objectID": "post/使用Cobra创建CLI应用",
        "date": "2020-03-09T00:00:00.000Z",
        "tags": [
            "golang",
            "cobra"
        ],
        "keywords": [
            "golang",
            "CLI",
            "cobra"
        ],
        "slug": "create-cli-app-with-cobra",
        "gitcomment": true,
        "notoc": true,
        "category": "golang"
    },
    {
        "title": "使用Elasticsearch Operator快速部署Elasticsearch集群",
        "uri": "post/使用Elasticsearch Operator快速部署ES集群",
        "content": "kubernetes               kubernetes                                                                      MySQL MongoDB Redis                                                             Kubernetes                                     Operator       prometheus operator etcd operator       Operator                   Kubernetes Operator                        Elasticsearch               Kubernetes Operator     Elastic Cloud Kubernetes  ECK            Kubernetes           Elasticsearch     Elastic Cloud Kubernetes Elastic Cloud Kubernetes ECK     Elasticsearch Operator         ECK    Kubernetes Operator                Kubernetes                Kubernetes   Elasticsearch   Kibana            ECK                                                                       Elastic Local Volume                ECK                            Kubernetes     Elasticsearch       ECK       Kubernetes    Elastic           SaaS         ECK        Elasticsearch                                               6 8   7 1      Elasticsearch        TLS                                    ECK                                       Kibana Spaces Canvas Elastic Maps            Elastic Logs   Elastic Infrastructure      Kubernetes                Kubernetes     Elastic Stack          ECK      Elastic Local Volume         Kubernetes           ECK                            drain                                                               ECK                  kubernetes    1 11                    4GB              Elasticsearch                    ECK     Operator         kubectl apply  f https   download elastic co downloads eck 0 8 1 all in one yaml               elastic system   namespace      operator   Pod    kubectl pods  n elastic system NAME READY STATUS RESTARTS AGE elastic operator 0 1 1 Running 1 15h             CRD         CRD             elastic operator 0    Pod      kubectl crd   grep elastic apmservers apm k8s elastic co 2019 06 30T08 12 41Z clusterlicenses elasticsearch k8s elastic co 2019 06 30T08 12 41Z elasticsearches elasticsearch k8s elastic co 2019 06 30T08 12 41Z enterpriselicenses elasticsearch k8s elastic co 2019 06 30T08 12 41Z kibanas kibana k8s elastic co 2019 06 30T08 12 41Z remoteclusters elasticsearch k8s elastic co 2019 06 30T08 12 41Z trustrelationships elasticsearch k8s elastic co 2019 06 30T08 12 41Z users elasticsearch k8s elastic co 2019 06 30T08 12 41Z          CRD                Elasticsearch     elastic yaml  apiVersion  elasticsearch k8s elastic co v1alpha1 kind  Elasticsearch metadata  name  elastic namespace  elastic system spec  version  7 2 0 nodes  nodeCount  1 config  node master  true node data  true node ingest  true          7 2 0         Elasticsearch         kubectl create  f elastic yaml                   Error server  Timeout   error when creating  STDIN   Timeout  request not complete within requested timeout 30s               ECK       validation webhook   Admission                        kubectl ValidatingWebhookConfiguration  o yaml   ValidatingWebhookConfiguration yaml    ValdiationWebhook   kubectl delete ValidatingWebhookConfiguration validating webhook configuration                                                   elastic  Pod         pods  n elastic system NAME READY STATUS RESTARTS AGE elastic es h4xns977f5 1 1 Running 0 3h10m elastic operator 0 1 1 Running 1 15h           Elasticsearch   CRD         kubectl elasticsearch  n elastic system NAME HEALTH NODES VERSION PHASE AGE elastic green 1 7 2 0 Operational 3h10m                        CRD    Kibana     kibana     kibana yaml  apiVersion  kibana k8s elastic co v1alpha1 kind  Kibana metadata  name  kibana namespace  elastic system spec  version  7 2 0 nodeCount  1 elasticsearchRef  name  elastic     spec elasticsearchRef name           Elasticsearch     name elastic                 kubectl create  f kibana yaml   kubectl pods  n elastic system NAME READY STATUS RESTARTS AGE elastic es h4xns977f5 1 1 Running 0 3h15m elastic operator 0 1 1 Running 1 15h kibana kibana 79479c64bc zpdr7 1 1 Running 0 162m   kubectl svc  n elastic system NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE elastic es ClusterIP 10 98 117 110 9200 TCP 3h17m elastic es discovery ClusterIP None 9300 TCP 3h17m elastic webhook service ClusterIP 10 106 65 101 443 TCP 15h kibana kibana ClusterIP 10 107 3 36 5601 TCP 3h16m           kibana                      Ingress     ingress yaml  apiVersion  extensions v1beta1 kind  Ingress metadata  name  kibana namespace  elastic system annotations  kubernetes io ingress class  nginx spec  rules  host  kibana qikqiak com http  paths  backend  serviceName  kibana kibana servicePort  5601 path          Ingress       kubectl create  f ingress yaml   kubectl ingress  n elastic system NAME HOSTS ADDRESS PORTS AGE kibana kibana qikqiak com 80 82m            DNS      hosts                kibana               elastic                   PASSWORD   kubectl secret elastic elastic user  n elastic system  o jsonpath    data elastic     base64   decode    echo  PASSWORD                          kibana qikqiak com                                   kibana dashboard  ",
        "objectID": "post/使用Elasticsearch Operator快速部署ES集群",
        "date": "2019-07-01T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "operator",
            "elasticsearch",
            "kibana"
        ],
        "keywords": [
            "kubernetes",
            "operator",
            "elasticsearch",
            "kibana",
            "集群",
            "volume"
        ],
        "slug": "elastic-cloud-on-k8s",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1561900073-f07fcec69cc2.jpeg",
                "desc": "https://unsplash.com/photos/snbf9h8rjCw"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 GitHub Actions 自动化构建 Golang 应用",
        "uri": "post/使用GitHub Actions构建Golang应用",
        "content": "GitHub                    GitHub Actions                                                         GitHub Actions          Travis CI                      GitHub Actions          CI CD Pipeline   GitHub                Travis CI    Circle CI                                           https   github com features actions signup        Golang        GitHub Actions                  Hello world   Golang               Pipeline   Pull Request        master            Pipeline             lint              Codecov                       tag    Pipeline     GoReleaser          GitHub       GoReleaser     Golang                                            GitHub         go github actions                 main go            package main import    fmt   github com cnych go github actions hello    func main     fmt Println hello Greet                hello    package     Greet                     hello   package   package        hellog go             package hello    Greet    Greet GitHub Actions func Greet   string   return  Hello GitHub Actions                go modules    go mod init github com cnych go github actions go  creating new go mod  module github com cnych go github actions     hello    package               hello_test go          package hello import  testing  func TestGreet t  testing T    result    Greet   result     Hello GitHub Actions    t Errorf  Greet      s  Expected Hello GitHub actions   result                      go test   hello ok github com cnych go github actions hello 0 007s   go run main go Hello GitHub Actions                tree         README md     go mod     hello       hello go       hello_test go     main go 1 directory  5 files              GitHub      GitHub Actions Pipeline           GitHub               Actions                         Actions             workflow    golang Rust Python Node              workflow       Set workflow yourself     Pipeline              on    workflow                  master release           on  push  branches  master release      pull_request    master       on  pull_request  branches  master                                 2        on  schedule  cron  0 2     1 5 GitHub Actions Workflow            https   help github com articles workflow syntax for github actions                 action actions                    GitHub              GitHub marketplace                   action        ref        name  uses   owner   repo  ref with       GitHub Actions           workflow            workflow                    job     step   name  CI on   push  jobs  build  runs on  ubuntu latest steps  uses  actions checkout v1 name  Run one line script run  echo Hello  world  name  Run multi line script run    echo Add actions build  echo test  deploy project               workflow    workflow             main workflow                    workflow       master        PR        Build   workflow          tag         Release   workflow                     workflow        Job        Build Workflow   3  Job Lint Build   Test    Release Workflow       Release   Job     Job      Step               Job                              Workflow                 github workflows     YAML                                    Build Workflow  main yaml  name  Build Test on  push  branches  master pull_request  jobs  lint  name  Lint runs on  ubuntu latest steps  name  Set Go uses  actions setup go v1 with  go version  1 12 name  Check code uses  actions checkout v1 name  Lint Go Code run    export PATH  PATH   go env GOPATH  bin   temporary fix  https   github com actions setup go issues 14 go  u golang org x lint golint lint test  name  Test runs on  ubuntu latest steps  name  Set Go uses  actions setup go v1 with  go version  1 12 name  Check code uses  actions checkout v1 name  Run Unit tests  run  test coverage name  Upload Coverage report CodeCov uses  codecov codecov action v1 0 0 with  token     secrets CODECOV_TOKEN   file    coverage txt build  name  Build runs on  ubuntu latest needs   lint  test  steps  name  Set Go uses  actions setup go v1 with  go version  1 12 name  Check code uses  actions checkout v1 name  Build run  build         workflow                    master          PR                     on  push  branches  master pull_request        workflow     3  Job Lint Test   Build Lint   Job       lint  name  Lint runs on  ubuntu latest steps  name  Set Go uses  actions setup go v1 with  go version  1 12 name  Check code uses  actions checkout v1 name  Lint Go Code run    export PATH  PATH   go env GOPATH  bin   temporary fix  https   github com actions setup go issues 14 go  u golang org x lint golint lint               Job     ubuntu       runs on     Actions      Linux Mac Windows   Docker                     runners        GitLab CI Runner        Job                Golang    GitHub            action             name  Set Go uses  actions setup go v1 with  go version  1 12       GitHub marketplace      action         https   github com marketplace actions setup go for use with actions                  with          action         setup go   action            go                  go modules       ",
        "objectID": "post/使用GitHub Actions构建Golang应用",
        "date": "2019-08-24T00:00:00.000Z",
        "tags": [
            "CI",
            "CD",
            "github",
            "golang",
            "pipeline"
        ],
        "keywords": [
            "CI",
            "CD",
            "github",
            "GitHub Actions",
            "golang",
            "pipeline"
        ],
        "slug": "use-github-actions-build-go-app",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1566568216493-71bf7995310a.jpeg",
                "desc": "https://unsplash.com/photos/MUbcybuo7aY"
            }
        ],
        "category": "devops"
    },
    {
        "title": "使用 GitLab CI 与 Argo CD 进行 GitOps 实践",
        "uri": "post/使用GitLab-CI与ArgoCD进行实践",
        "content": "GitOps                                           GitOps                             GitOps                                           GitOps                    GitOps      GitLab   Argo CD             Argo CD        GitOps       Kubernetes                             Dashboard          Argo CD    kustomzie helm ksonnet                Argo CD     CRD                                    Argo CD                    GitLab CI   GitLab                       CI CD       Jenkins              GitLab                  Argo CD                  Kubernetes       kubectl               Argo CD   Dashboard           Ingress             Kubernetes       Ingress Controller            ingress nginx        Helm3     Argo CD    Helm    ingress nginx                                           argocd          kubectl create ns argocd      argocd   chart         helm repo add argo https   argoproj github io argo helm            Helm    Argo CD      helm install argocd  n argocd argo argo cd   values values yaml    values yaml                Argo CD  server  ingress  enabled  true annotations  kubernetes io ingress class   nginx  nginx ingress kubernetes io force ssl redirect   true  nginx ingress kubernetes io ssl passthrough   true  nginx ingress kubernetes io backend protocol   HTTPS  hosts  argocd k8s local            Argo CD        argocd               etc hosts           argocd k8s local     ingress nginx            helm ls  n argocd NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION argocd argocd 2 2020 07 10 15 26 38 259258  0800 CST deployed argo cd 2 5 0 1 6 1   kubectl pods  n argocd NAME READY STATUS RESTARTS AGE argocd application controller 85c4788ffc p2m4c 1 1 Running 0 49m argocd dex server cc65c7546 x78bj 1 1 Running 0 49m argocd redis 5f45875bc7 mnx8b 1 1 Running 0 49m argocd repo server 7bcf647588 h8gtq 1 1 Running 0 49m argocd server 7877ff8889 zp7tq 1 1 Running 0 49m     Pod    Running                  Argo CD   Dashboard              admin     server Pod                       kubectl pods  n argocd  l app kubernetes io name argocd server  o name   cut  d     f 2 argocd server 7877ff8889 zp7tq                         GitLab           GitLab                     Golang                  Pod         https   github com cnych gitops webapp demo                    GitLab          GitLab     Kubernetes           git k8s local                       http   git k8s local course gitops webapp              GitLab CI             Settings   CI CD   Variables   CI_REGISTRY             https   index docker io v1  CIREGISTRYIMAGE           cnych gitops webapp CIREGISTRYUSER   Docker Hub          cnych CIREGISTRYPASSWORD   Docker Hub      CI_PASSWORD   Git        CI_USERNAME   Git         Argo CD               GitOps        Kubernetes       Argo CD       CRD                                                                     gitops demo app yaml apiVersion  argoproj io v1alpha1 kind  Application metadata  name  web app dev namespace  argocd spec  project  default source  repoURL  http   git k8s local course gitops webapp git targetRevision  HEAD path  deployment dev destination  server  https   kubernetes default svc namespace  dev syncPolicy  automated  prune  true apiVersion  argoproj io v1alpha1 kind  Application metadata  name  web app prod namespace  argocd spec  project  default source  repoURL  http   git k8s local course gitops webapp git targetRevision  HEAD path  deployment prod destination  server  https   kubernetes default svc namespace  prod syncPolicy  automated  prune  true       Application         Argo CD         CRD     name Argo CD         project                   Argo CD              repoURL          targetRevision       git    path Kubernetes             destination Kubernetes               kubectl                        Application          kubectl apply  f gitops demo app yaml application argoproj io web app dev created application argoproj io web app prod created   kubectl application  n argocd NAME AGE web app dev 25s web app prod 24s        Argo CD   Dashboard            Application                                 gitops webapp       deployment                                 kustomization yaml    Argo CD                                        GitLab                       Settings   Repositories    Connect Repo using HTTPS                                   HTTPS             Skip server verification         CONNECT                    Application              GitLab CI                                                Kubernetes                                         GitOps                                                                                     Docker          Docker          Kubernetes                                GitLab CI                      gitlab ci yml                                        stages  build publish deploy dev deploy prod                                        golang                                                      build  stage  build image  name  golang 1 13 1 script  go build  o main main go artifacts  paths  main variables  CGO_ENABLED  0                         Kaniko         DinD",
        "objectID": "post/使用GitLab-CI与ArgoCD进行实践",
        "date": "2020-07-15T00:00:00.000Z",
        "keywords": [
            "argo",
            "kubernetes",
            "gitops"
        ],
        "tags": [
            "argo",
            "gitlab",
            "gitops",
            "devops"
        ],
        "slug": "gitlab-ci-argo-cd-gitops",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200715115832.png",
                "desc": "https://unsplash.com/photos/0YL3UFYjR_g"
            }
        ],
        "category": "devops"
    },
    {
        "title": "使用 inlets 和 kubernetes 访问本地服务",
        "uri": "post/使用inlets和k8s访问本地服务",
        "content": "inlets          Go                Hacker News           GitHub    4000    Star                inlets                                                                  Raspberry Pi                               inlets               inlets                Internet                                            IP                  websocket                                                             Django                     websocket                    CONNECT        HTTP S         TCP              HTTP                    websocket                                                           websocket         HTTP                                             inlets                                  HTTPS            Caddy                                    VPS                     IP                     IP   1 2 3 4          exit qikqiak com                             IP     inlets                        80   443         Nginx Caddy            Kubernetes Ingress        inlets                   Kubernetes          Docker             https   github com alexellis inlets                         Ingress Controller                      Pod             Traefik 2 0            inlets                secret kubectl create secret generic inlets token   from literal token   head  c 16  dev urandom   shasum   cut  d     f1  secret inlets token created      Service    apiVersion  v1 kind  Service metadata  name  inlets labels  app  inlets spec  type  ClusterIP ports  port  8000 protocol  TCP targetPort  8000 selector  app kubernetes io name  inlets      Deployment    apiVersion  apps v1 kind  Deployment metadata  name  inlets spec  replicas  1 selector  matchLabels  app kubernetes io name  inlets template  metadata  labels  app kubernetes io name  inlets spec  containers  name  inlets image  alexellis2 inlets 2 3 2 imagePullPolicy  Always command    inlets   args   server     token from  var inlets token  volumeMounts  name  inlets token volume mountPath   var inlets  volumes  name  inlets token volume secret  secretName  inlets token          Ingress        LoadBalancer     Service         inlets     apiVersion  extensions v1beta1 kind  Ingress metadata  name  inlets annotations  kubernetes io tls acme   true  spec  tls  hosts  exit qikqiak com secretName  exit tls rules  host  exit qikqiak com http  paths  path      backend  serviceName  inlets servicePort  8000        cert manager         HTTPS                        HTTP                                  inlets      Install  usr local bin   recommended  curl  sLS https   get inlets dev   sudo sh Install local directory curl  sLS https   get inlets dev   sh           Secret     Token    kubectl secret inlets token  o jsonpath   data token   base64  d 856ef14d563221918c2d3b9c7d15af94ce9a6d63            inlets            inlets client     remote ws   exit qikqiak com     upstream exit qikqiak com http   127 0 0 1 8000     token 856ef14d563221918c2d3b9c7d15af94ce9a6d63 2019 09 25 16 36 26 Upstream  exit qikqiak com    http   127 0 0 1 8000 2019 09 25 16 36 26 Token   856ef14d563221918c2d3b9c7d15af94ce9a6d63  Welcome inlets dev  Find https   github com alexellis inlets map X Inlets Id  2d17ad31e4e1446bb99b2aecc0505f23  X Inlets Upstream  exit qikqiak com http   127 0 0 1 8000  Authorization  Bearer 856ef14d563221918c2d3b9c7d15af94ce9a6d63   INFO 0000  Connecting proxy url  wss   exit qikqiak com tunnel    token                                  wss                                  ws                  Internet        https   exit qikqiak com              8000                                    upstream         inlets client     remote wss   exit domain com     upstream gateway domain com http   127 0 0 1 8080 prometheus domain com http   127 0 0 1 9090     8000           Django                https   exit qikqiak com                                                   Internet                                 Raspberry Pi              https   github com alexellis inlets https   blog alexellis io https inlets local endpoints",
        "objectID": "post/使用inlets和k8s访问本地服务",
        "date": "2019-09-25T00:00:00.000Z",
        "tags": [
            "inlets",
            "kubernetes",
            "websocket"
        ],
        "keywords": [
            "inlets",
            "kubernetes",
            "websocket",
            "ssh",
            "隧道",
            "Caddy"
        ],
        "slug": "k8s-inlets-local-endpoinsts",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1562184724-0b0833e5ba27.jpeg",
                "desc": "A personal space for everyone"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "请使用 JSON 格式记录日志[译]",
        "uri": "post/使用JSON记录日志",
        "content": "Tony Stark     Iron Man                                                                                                                                               JSON         JSON                  Anuj         Kartik                      Kartik    Web       Anuj                                                                                             JSON          Anuj                   JSON   key                                  JSON                                                                                          JSON                Golang                                        JSON                             ELK                  Logstash                 filter   json   source     message                                                        Kibana      JSON     key        ES        employeename employeecity              Logstash                                     Dashboard                           JSON                            JSON           JSON                                   JSON            Golang   https   github com sirupsen logrus Python   https   github com thangbn json logging python Java   https   howtodoinjava com log4j2 log4j 2 json configuration example  PHP   https   github com nekonomokochan php json logger         JSON                      https   blog opstree com 2019 12 31 log everything as json",
        "objectID": "post/使用JSON记录日志",
        "date": "2020-05-14T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "efk",
            "elk"
        ],
        "slug": "record-log-as-json",
        "keywords": [
            "kubernetes",
            "efk",
            "elk",
            "logstash",
            "json"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200514091130.png",
                "desc": "https://unsplash.com/photos/yZTCvnOTpms"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 kubeadm 搭建 v1.15.3 版本 Kubernetes 集群",
        "uri": "post/使用kubeadm搭建1.15.3版本集群",
        "content": "Kubeadm     Kubernetes             1 10 0                        Kubeadm          Kubernetes 1 15 3                              calico        ipvs     kube proxy       3       Centos 7 6         3 10 0 957 12 2 el7 x86_64          hosts       cat  etc hosts 10 151 30 11 ydzs master 10 151 30 22 ydzs node1 10 151 30 23 ydzs node2          systemctl stop firewalld   systemctl disable firewalld   SELINUX    setenforce 0   cat  etc selinux config SELINUX disabled    etc sysctl d k8s conf           net bridge bridge nf call ip6tables   1 net bridge bridge nf call iptables   1 net ipv4 ip_forward   1                modprobe br_netfilter   sysctl  p  etc sysctl d k8s conf    ipvs   cat    etc sysconfig modules ipvs modules  etc yum repos d kubernetes repo  kubernetes  name Kubernetes baseurl https   packages cloud google com yum repos kubernetes el7 x86_64 enabled 1 gpgcheck 1 repo_gpgcheck 1 gpgkey https   packages cloud google com yum doc yum key gpg https   packages cloud google com yum doc rpm package key gpg EOF         yum                                       cat  etc yum repos d kubernetes repo  kubernetes  name Kubernetes baseurl http   mirrors aliyun com kubernetes yum repos kubernetes el7 x86_64 enabled 1 gpgcheck 0 repo_gpgcheck 0 gpgkey http   mirrors aliyun com kubernetes yum doc yum key gpg http   mirrors aliyun com kubernetes yum doc rpm package key gpg EOF      kubeadm kubelet kubectl    yum install  y kubelet kubeadm kubectl   disableexcludes kubernetes   kubeadm version kubeadm version   version Info Major  1   Minor  15   GitVersion  v1 15 3   GitCommit  2d3c76f9091b6bec110a5e63777c332469e0cba2   GitTreeState  clean   BuildDate  2019 08 19T11 11 18Z   GoVersion  go1 12 9   Compiler  gc   Platform  linux amd64                v1 15 3        kubelet            systemctl enable kubelet service                                          master      kubeadm                             kubeadm config print init defaults   kubeadm yaml                      imageRepository    kube proxy      ipvs                   calico           networking podSubnet    192 168 0 0 16  apiVersion  kubeadm k8s io v1beta2 bootstrapTokens  groups  system bootstrappers kubeadm default node token token  abcdef 0123456789abcdef ttl  24h0m0s usages  signing authentication kind  InitConfiguration localAPIEndpoint  advertiseAddress  10 151 30 11   apiserver     IP bindPort  6443 nodeRegistration  criSocket   var run dockershim sock name  ydzs master taints  effect  NoSchedule key  node role kubernetes io master apiServer  timeoutForControlPlane  4m0s apiVersion  kubeadm k8s io v1beta2 certificatesDir   etc kubernetes pki clusterName  kubernetes controllerManager     dns  type  CoreDNS   dns   etcd  local  dataDir   var lib etcd imageRepository  gcr azk8s cn google_containers kind  ClusterConfiguration kubernetesVersion  v1 15 3   k8s   networking  dnsDomain  cluster local podSubnet  192 168 0 0 16 serviceSubnet  10 96 0 0 12 scheduler     apiVersion  kubeproxy config k8s io v1alpha1 kind  KubeProxyConfiguration mode  ipvs   kube proxy                        kubeadm init   config kubeadm yaml  init  Using Kubernetes version  v1 15 3  preflight  Running pre flight checks  WARNING SystemVerification   Docker version not list validated versions  19 03 1  Latest validated version  18 09  preflight  Pulling images required setting Kubernetes cluster  preflight  minute two  depending speed internet connection  preflight  perform action beforehand using  kubeadm config images pull   kubelet start  Writing kubelet environment file flags file   var lib kubelet kubeadm flags env   kubelet start  Writing kubelet configuration file   var lib kubelet config yaml   kubelet start  Activating kubelet service  certs  Using certificateDir folder   etc kubernetes pki   certs  Generating  etcd ca  certificate key  certs  Generating  etcd server  certificate key  certs  etcd server serving cert signed DNS names  ydzs master localhost  IPs  10 151 30 11 127 0 0 1   1   certs  Generating  etcd peer  certificate key  certs  etcd peer serving cert signed DNS names  ydzs master localhost  IPs  10 151 30 11 127 0 0 1   1   certs  Generating  apiserver etcd client  certificate key  certs  Generating  etcd healthcheck client  certificate key  certs  Generating  ca  certificate key  certs  Generating  apiserver  certificate key  certs  apiserver serving cert signed DNS names  ydzs master kubernetes kubernetes default kubernetes default svc kubernetes default svc cluster local  IPs  10 96 0 1 10 151 30 11   certs  Generating  apiserver kubelet client  certificate key  certs  Generating  front proxy ca  certificate key  certs  Generating  front proxy client  certificate key  certs  Generating  sa  key public key  kubeconfig  Using kubeconfig folder   etc kubernetes   kubeconfig  Writing  admin conf  kubeconfig file  kubeconfig  Writing  kubelet conf  kubeconfig file  kubeconfig  Writing  controller manager conf  kubeconfig file  kubeconfig  Writing  scheduler conf  kubeconfig file  control plane  Using manifest folder   etc kubernetes manifests   control plane  Creating static P",
        "objectID": "post/使用kubeadm搭建1.15.3版本集群",
        "date": "2019-08-27T00:00:00.000Z",
        "tags": [
            "kubeadm",
            "kubernetes",
            "coredns",
            "ipvs",
            "calico"
        ],
        "keywords": [
            "kubeadm",
            "kubernetes",
            "coredns",
            "ipvs",
            "calico"
        ],
        "slug": "use-kubeadm-install-kubernetes-1.15.3/",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1566807355181-4a22b3cfd335.jpeg",
                "desc": "https://unsplash.com/photos/nfxD5dWy1wk"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes Ingress 自动化 HTTPS",
        "uri": "post/使用Let's Encrypt实现Ingress自动化HTTPS",
        "content": "HTTPS        Google     HTTPS                                HTTPS                     CA                           Let s Encrypt     90                                   Kubernetes                Kubernetes Ingress   Let s Encrypt            HTTPS   Kubernetes      HTTPS                              Ingress     HTTPS        Ingress Controller         HTTPS                   SSL TLS       Cert manager        ingress endpoint                certificates                Cert manager         providers         HashiCorp Vault           Helm             Helm               Helm                       cluster issuer    Cert manager        kubernetes io tls acme   true annotation      TLS  ingressShim defaultIssuerName letsencrypt prod ingressShim defaultIssuerKind ClusterIssuer           Cert manager    helm install   name cert manager   namespace kube system   set ingressShim defaultIssuerName letsencrypt prod   set ingressShim defaultIssuerKind ClusterIssuer stable cert manager   version v0 5 2 NAME  cert manager LAST DEPLOYED  Wed Dec 5 18 04 56 2018 NAMESPACE  kube system STATUS  DEPLOYED RESOURCES    v1 ServiceAccount NAME SECRETS AGE cert manager 1 0s   v1beta1 CustomResourceDefinition NAME AGE certificates certmanager k8s io 0s clusterissuers certmanager k8s io 0s issuers certmanager k8s io 0s   v1beta1 ClusterRole cert manager 0s   v1beta1 ClusterRoleBinding NAME AGE cert manager 0s   v1beta1 Deployment NAME DESIRED CURRENT UP TO DATE AVAILABLE AGE cert manager 1 1 1 0 0s   v1 Pod related  NAME READY STATUS RESTARTS AGE cert manager dd6856945 9ltk9 0 1 ContainerCreating 0 0s NOTES  cert manager deployed successfully  order begin issuing certificates  will need set ClusterIssuer Issuer resource  for example  creating  letsencrypt staging  issuer   information different types issuers configure found documentation  https   cert manager readthedocs io en latest reference issuers html information configure cert manager automatically provision Certificates Ingress resources  look ingress shim documentation  https   cert manager readthedocs io en latest reference ingress shim html           Pod        kubectl pod  n kube system   selector app cert manager NAME READY STATUS RESTARTS AGE cert manager cert manager 7797579f9 m4dbc 1 1 Running 0 1m           Cert manager      Kubernetes custom resources    kubectl crd NAME AGE certificates certmanager k8s io 1m clusterissuers certmanager k8s io 1m issuers certmanager k8s io 1m          Cert manager              letsencrypt prod  cluster issuer        clusterissuers certmanager k8s io  CRD     cluster issuer yaml  apiVersion  certmanager k8s io v1alpha1 kind  ClusterIssuer metadata  name  letsencrypt prod spec  acme  server  https   acme v02 api letsencrypt org directory email  icnych gmail com privateKeySecretRef  name  letsencrypt prod http01             ClusterIssuer      kubectl create  f cluster issuer yaml clusterissuer certmanager k8s io  letsencrypt prod  created   kubectl clusterissuer NAME AGE letsencrypt prod 16s             Cert manager    ClusterIssuer          HTTPS        Kubernetes Dashboard     Dashboard                     Ingress         dashboard ingress yaml  apiVersion  extensions v1beta1 kind  Ingress metadata  name  kube ui namespace  kube system annotations  kubernetes io ingress class   traefik  kubernetes io tls acme   true  spec  tls  hosts  k8sui qikqiak com secretName  k8sui tls rules  host  k8sui qikqiak com http  paths  path      backend  serviceName  kubernetes dashboard servicePort  443                  annotations           Cert Manager                   HTTPS            tls           k8sui tls   Secret                Secret                 Cert Manager                                kubectl create  f dashboard ingress yaml                                   Ingress Controller                  etc hosts                                       Ingress       Ingress                  kubectl ingress  n kube system NAME HOSTS ADDRESS PORTS AGE cm acme http solver hl5sx k8sui qikqiak com 80 37s kube ui k8sui qikqiak com 80  443 41s        Traefik   Dashboard                    Ingress                    describe     Ingress       Name  kube ui Namespace  kube system Address  Default backend  default http backend 80    TLS  k8sui tls terminates k8sui qikqiak com Rules  Host Path Backends                    k8sui qikqiak com   kubernetes dashboard 443  10 244 0 31 8443  Annotations  kubernetes io tls acme  true kubernetes io ingress class  traefik Events  Type Reason Age Message                               Normal CreateCertificate 13m cert manager Successfully created Certificate  k8sui tls                Certificate                       kubectl certificate  n kube system NAME AGE k8sui tls 15m      Let s Encrypt                           Ingress      Secret        kubectl secret  n kube system k8sui tls kubernetes io tls 2 32m          Cert manager   Pod           kubectl logs  f cert manager dd6856945 4drmr  n kube system        1 sync go 124  Certificate  k8sui tls  ingress  kube ui  already exists I1205 16 27 21 372285 1 sync go 127  Certificate  k8sui tls ",
        "objectID": "post/使用Let's Encrypt实现Ingress自动化HTTPS",
        "subtitle": "使用 Let's Encrypt 实现 Kubernetes Ingress 自动化 HTTPS",
        "date": "2018-12-05T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "ingress",
            "traefik"
        ],
        "slug": "automatic-kubernetes-ingress-https-with-lets-encrypt",
        "keywords": [
            "kubernetes",
            "ingress",
            "https",
            "traefik"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1543970256-c86ba45b0d9b.jpeg",
                "desc": "You don’t have to be at the top to enjoy the view"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 OAM 部署 Kubernetes 应用",
        "uri": "post/使用OAM部署Kubernetes应用",
        "content": "Open Application Model OAM                                                                                                                   Rudr     Kubernetes     OAM        Rudr            Components     Configuration     Traits                                   CPU                                        Volume Ingress                        Rudr     Rudr      Kubernetes CRD       OAM           Kubernetes                   Kubernetes                    GitHub                  Docker                   Docker Hub          kubectl version Client Version  version Info Major  1   Minor  14   GitVersion  v1 14 2   GitCommit  66049e3b21efe110454d67df4fa62b08ea79a19b   GitTreeState  clean   BuildDate  2019 05 16T18 55 03Z   GoVersion  go1 12 5   Compiler  gc   Platform  darwin amd64   Server Version  version Info Major  1   Minor  16   GitVersion  v1 16 2   GitCommit  c97fe5036ef3df2967d086711e6c0c405941e14b   GitTreeState  clean   BuildDate  2019 10 15T19 09 08Z   GoVersion  go1 12 10   Compiler  gc   Platform  linux amd64             Traefik 1 7 x      Ingress Controller                         Node js   Web            MongoDB                MongoDB                      Ingress           Traits     kubectl pods  n kube system  l k8s app traefik ingress lb NAME READY STATUS RESTARTS AGE traefik ingress controller bd489c447 6ms8z 1 1 Running 0 4d21h    Rudr    Rudr                Helm3             Helm3      Helm3        Tiller Server           Helm3                  kubectl             GitHub Release           Helm3         PATH           helm version version BuildInfo Version  v3 0 0   GitCommit  e29ce2a54e96cd02ccfce88bee4f58bb6e2a28b6   GitTreeState  clean   GoVersion  go1 13 4      Clone Rudr              Helm           git clone https   github com oam dev rudr git   cd rudr   helm install rudr   charts rudr   wait   set image tag v1 0 0 alpha 1 NAME  rudr LAST DEPLOYED  Mon Nov 25 17 16 43 2019 NAMESPACE  default STATUS  deployed REVISION  1 TEST SUITE  None NOTES  Rudr Kubernetes controller manage Configuration CRDs  successfully installed                   CRD   Pod             kubectl crds  l app kubernetes io part of core oam dev NAME CREATED applicationconfigurations core oam dev 2019 11 25T09 00 42Z componentinstances core oam dev 2019 11 25T09 00 42Z componentschematics core oam dev 2019 11 25T09 00 42Z healthscopes core oam dev 2019 11 25T09 00 42Z scopes core oam dev 2019 11 25T09 00 42Z traits core oam dev 2019 11 25T09 00 43Z   kubectl deployment rudr NAME READY UP TO DATE AVAILABLE AGE rudr 1 1 1 1 8m50s   kubectl pods      Rudr                                     TODO           MongoDB   Express                   MongoDB     Web                      components yaml  apiVersion  core oam dev v1alpha1 kind  ComponentSchematic metadata  name  backend annotations  version   1 0 0  description  Mongodb Backend spec  workloadType  core oam dev v1alpha1 SingletonServer containers  name  backend ports  containerPort  27017 name  mongo image  mongo apiVersion  core oam dev v1alpha1 kind  ComponentSchematic metadata  name  frontend annotations  version   1 0 0  description  Todo Web Frontend spec  workloadType  core oam dev v1alpha1 Server parameters  name  database type  string required  false containers  name  frontend ports  containerPort  3000 name  http image  cnych todo v1 env  name  DB value  db fromParam  database                        workloadType                                                     Server    MongoDB         Pod                                            Pod               SingletonServer               Node             DB                    db                   web          parameters                                                                         db                                                                      configuration yaml  apiVersion  core oam dev v1alpha1 kind  ApplicationConfiguration metadata  name  todo app spec  components  name  backend instanceName  mongo name  frontend instanceName  fe parameterValues  name  database value  mongo traits  name  ingress parameterValues  name  hostname value  todo qikqiak com name  service_port value  3000 name  path value                                     Web                       backend       mongo frontend       fe      backend         database          Web          DB                   Ingress             Ingress                                          kubectl apply  f components yaml componentschematic core oam dev backend created componentschematic core oam dev frontend created           Kubernetes Pods                 Rudr            kubectl apply  f configuration yaml applicationconfiguration core oam dev todo app created                     Pods    kubectl pods NAME READY STATUS RESTARTS AGE fe 85fc96d7f7 kwcq5 0 1 ContainerCreating 0 20s mongo d7b9cc75d b4knx 0 1 ContainerCreating 0 20s rudr 558fb59cd8 gw7kh 1 1 Running 0 31m               Pod     default           Pod rudr frontend backend               Ingress             Service   Ingress        frontend         kubectl svc NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE ",
        "objectID": "post/使用OAM部署Kubernetes应用",
        "date": "2019-11-25T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "oam",
            "rudr"
        ],
        "slug": "deploy-k8s-app-with-oam",
        "keywords": [
            "kubernetes",
            "oam",
            "rudr",
            "ingress",
            "traefik"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1574539299747-c0dcef95d2ef.jpeg",
                "desc": "https://unsplash.com/photos/tb8G24Fw_ks"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 PyCharm、Okteto 和 Kubernetes 搭建远程开发环境",
        "uri": "post/使用PyCharm和Okteto以及K8S搭建远程开发环境",
        "content": "Okteto        Kubernetes                         Okteto   Kubernetes                                Google     Skaffold                Okteto     Python                            Okteto CLI           Okteto                      Kubernetes                    Kubernetes     kubeconfig          Kubernetes           OKteto Cloud                           Okteto CLI                        MacOS    Linux                 curl https   get okteto com  sSfL   SH    Windows        https   downloads okteto com cli okteto exe           PATH                                    okteto version okteto version 1 8 8         PyCharm IDE                   Pure Python        guestbook                        Docker                           Okteto         okteto yml                         guestbook               okteto yml               name  guestbook image  okteto python 3 forward  8080 8080 remote  2222 command  bash        Okteto             guestbook          okteto python 3        2222         SSH         8080         bash                                okteto yml                 https   okteto com docs reference manifest                     PyCharm                  okteto                           y                        okteto yml            Kubernetes         8080              2222     SSH                                   Pod                          Shell                                              Kubernetes         Pod               Kubernetes           Pod    kubectl pod  l app guestbook NAME READY STATUS RESTARTS AGE guestbook 8494ccd87b q459j 1 1 Running 0 12m       PyCharm        Python                                                                   PyCharm               Python Interpreters      Add Interpreter                          SSH Interpreter     New server configuration                      NEXT               Key pair    Private key file        Users ych  okteto idrsaokteto      Users ych         HOME         okteto                     SSH             HOME  okteto idrsaokteto    HOME  okteto idrsaokteto pub               SSH                     SSH                                                    usr local bin python              okteto            Okteto               FINISH                                Python                            app py                     flask import Flask  jsonify app   Flask name   app route      methods   GET    def get_messages    return jsonify message  Hello okteto   name     main   app run host  0 0 0 0   port 8080  debug True    Flask         Web Server                       okteto                default guestbook okteto  pip install flask                    requirements txt      default guestbook okteto  pip freeze   requirements txt                Pod           Okteto                          requirements txt                      python app py           default guestbook okteto  python app py Serving Flask app  app   lazy loading  Environment  production WARNING  development server  not use production deployment  Use production WSGI server instead  Debug mode  Running http   0 0 0 0 8080   Press CTRL C quit  Restarting stat Debugger active  Debugger PIN  599 491 525                                       okteto yml            8080          8080                 8080                    Flask                    curl http   0 0 0 0 8080    message    Hello okteto               Python",
        "objectID": "post/使用PyCharm和Okteto以及K8S搭建远程开发环境",
        "date": "2020-05-13T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "pycharm",
            "okteto"
        ],
        "slug": "remote-deploy-env-with-okteto",
        "keywords": [
            "kubernetes",
            "pycharm",
            "okteto",
            "vscode"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200513120948.png",
                "desc": "https://unsplash.com/photos/yZTCvnOTpms"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Rook 快速搭建 Ceph 集群",
        "uri": "post/使用rook安装ceph",
        "content": "Rook                                                     Rook                                                                       Rook                                  Rook                                                         Rook                            Rook               Rook           Ceph                   Rook       Ceph       Ceph                                                        Kubernetes  v1 16 2 Docker 18 09 9 Rook release 1 1    Rook Operator        release 1 1     Rook                            common yaml   operator yaml             kubectl apply  f common yaml   kubectl apply  f operator yaml            rook ceph operator      Running       kubectl pod  n rook ceph    Rook Ceph       Rook Operator    Running               Ceph                          dataDirHostPath                                               cluster yaml  apiVersion  ceph rook io v1 kind  CephCluster metadata  name  rook ceph namespace  rook ceph spec  cephVersion      ceph          https   hub docker com r ceph ceph tags image  ceph ceph v14 2 4 20190917 dataDirHostPath   data rook          mon  count  3 dashboard  enabled  true storage  useAllNodes  true useAllDevices  false     Directories              directories  path   var lib rook             kubectl apply  f cluster yaml        kubectl     rook ceph         Pod                            kubectl pods  n rook ceph NAME READY STATUS RESTARTS AGE csi cephfsplugin cp5mc 3 3 Running 0 24m csi cephfsplugin fs9s5 3 3 Running 0 24m csi cephfsplugin provisioner 75c965db4f b5wf4 4 4 Running 0 24m csi cephfsplugin provisioner 75c965db4f zkrth 4 4 Running 0 24m csi cephfsplugin qvfpb 3 3 Running 0 24m csi cephfsplugin vgzl6 3 3 Running 0 24m csi rbdplugin cj842 3 3 Running 0 24m csi rbdplugin ksc24 3 3 Running 0 24m csi rbdplugin provisioner 56cbc4d585 5dkzg 5 5 Running 0 24m csi rbdplugin provisioner 56cbc4d585 xdqw9 5 5 Running 0 24m csi rbdplugin s5kjc 3 3 Running 0 24m csi rbdplugin z6bj2 3 3 Running 0 24m rook ceph mgr a 68977dd7ff t9rmk 1 1 Running 0 17m rook ceph mon a 84f4d48897 5lqtl 1 1 Running 0 22m rook ceph mon b 5d4858f579 5z9ld 1 1 Running 0 19m rook ceph mon c 8675b47cf7 82q8r 1 1 Running 0 19m rook ceph operator 587d765957 lrmsr 1 1 Running 0 152m rook ceph osd 1 856db94654 smdhp 1 1 Running 0 16m rook ceph osd 20 77d7f7787f h2dkg 1 1 Running 0 8m50s rook ceph osd prepare ydzs node1 qgmsc 0 1 Completed 0 5m2s rook ceph osd prepare ydzs node2 h667n 0 1 Completed 0 4m59s rook discover bd8qh 1 1 Running 0 139m rook discover bq6w8 1 1 Running 4 85m rook discover c8qmz 1 1 Running 0 116m rook discover ncjts 1 1 Running 0 139m OSD Pod                                                      OSD rook ceph agent   rook discover                  Rook                          Rook         ceph status       Rook               Rook               CentOS           yum                    Deployment        Rook                    toolbox yaml  apiVersion  apps v1 kind  Deployment metadata  name  rook ceph tools namespace  rook ceph labels  app  rook ceph tools spec  selector  matchLabels  app  rook ceph tools template  metadata  labels  app  rook ceph tools spec  dnsPolicy  ClusterFirstWithHostNet containers  name  rook ceph tools image  rook ceph v1 1 0 command     tini   args     g           usr local bin toolbox sh   imagePullPolicy  IfNotPresent env  name  ROOKADMINSECRET valueFrom  secretKeyRef  name  rook ceph mon key  admin secret securityContext  privileged  true volumeMounts  mountPath   dev name  dev mountPath   sys bus name  sysbus mountPath   lib modules name  libmodules name  mon endpoint volume mountPath   etc rook      hostNetwork  false   rbd map       hang       https   github com rook rook issues 2021 hostNetwork  true volumes  name  dev hostPath  path   dev name  sysbus hostPath  path   sys bus name  libmodules hostPath  path   lib modules name  mon endpoint volume configMap  name  rook ceph mon endpoints items  key  data path  mon endpoints          rook ceph tools pod    kubectl apply  f toolbox yaml    toolbox   Pod                                   kubectl  n rook ceph exec  it   kubectl  n rook ceph pod  l  app rook ceph tools   o jsonpath    items 0  metadata name    bash                                     ceph status ceph osd status ceph df rados df                                     mons          mgr               OSD             HEALTH_OK                    ceph status ceph status cluster  id  dae083e6 8487 447b b6ae 9eb321818439 health  HEALTH_OK services  mon  3 daemons  quorum a b c  age 15m  mgr  a active  2m  osd  31 osds  2  since 6m   2  since 6m  data  pools  0 pools  0 pgs objects  0 objects  0 B usage  79 GiB used  314 GiB   393 GiB avail pgs                 Ceph                              Rook                              Pod                   Kubernetes                                 Pod           Ceph Dashboard Ceph     Dashboard                            mgr osd     Ceph            PG                            cluster CRD       dashboard   dashboard enable true      Rook Operator      ceph mgr dashboard           Kubernetes Service    ",
        "objectID": "post/使用rook安装ceph",
        "date": "2019-11-11T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "rook",
            "ceph"
        ],
        "slug": "deploy-ceph-cluster-with-rook",
        "keywords": [
            "kubernetes",
            "rook",
            "ceph",
            "Rook",
            "Operator"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1571208756906-92fea1cc1087.jpeg",
                "desc": "Photo of the Day by Kevin Mueller"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Tekton 创建 CI/CD 流水线（1/4）",
        "uri": "post/使用Tekton创建CI流水线1",
        "content": "Tekton               CI CD          Tekton      Knative     build pipeline             build      pipeline                  Knative build     build               CI CD           build pipeline     Knative         Tekton   Tekton                     CI CD                                                   Docker         Docker Hub                    Kubernetes             v1 16 2          Tekton             tektoncd pipeline   GitHub      release yaml                   kubectl apply  f https   github com tektoncd pipeline releases download v0 12 0 release yaml            gcr                                                                 Docker Hub          kubectl apply  f https   raw githubusercontent com cnych qikqiak com master data manifests tekton release yaml                      tekton pipelines                     tekton                         Pod         Running                kubectl pods  n tekton pipelines NAME READY STATUS RESTARTS AGE tekton pipelines controller 67f4dc98d8 pgxrq 1 1 Running 0 9m46s tekton pipelines webhook 59df55445c jw76v 1 1 Running 0 9m45s Tekton                   CLI          Tekton           kubectl                           Mac              Homebrew          brew tap tektoncd tools   brew install tektoncd tools tektoncd cli                 CLI           tkn version Client version  0 9 0 Pipeline version  v0 12 0    Tekton   Kubernetes       CRD                               Task              task           steps                      step       Pod     TaskRun task           taskRun                              taskRun taskRun               task          Pipeline              task PipelineResource              PipelineRun    task   taskRun     pipelineRun             pipeline      pipelineRun CRD     Kubernetes           pipeline      PipelineResource    pipeline         github         pipeline                      jar                     Golang          https   github com cnych tekton demo                 Dockerfile               Clone                 task test yaml               apiVersion  tekton dev v1beta1 kind  Task metadata  name  test spec  resources  inputs  name  repo type  git steps  name  run test image  golang 1 14 alpine workingDir   workspace repo command    go   args    test      resources                                 Clone    Git      go test        Tekton       git                Clone    workspace  input_name                  repo        Clone    workspace repo             steps                                   go test                                   kubectl          kubectl apply  f task test yaml task tekton dev test created               Task                          TaskRun                            git                   PipelineResource                  pipelineresource yaml                 apiVersion  tekton dev v1alpha1 kind  PipelineResource metadata  name  cnych tekton example spec  type  git params  name  url value  https   github com cnych tekton demo name  revision value  master                  kubectl apply  f pipelineresource yaml pipelineresource tekton dev cnych tekton example created          TaskRun            taskrun yaml             apiVersion  tekton dev v1beta1 kind  TaskRun metadata  name  testrun spec  taskRef  name  test resources  inputs  name  repo resourceRef  name  cnych tekton example      taskRef         Task   git        resourceRef           PipelineResource                                kubectl apply  f taskrun yaml taskrun tekton dev testrun created              TaskRun                   kubectl taskrun NAME SUCCEEDED REASON STARTTIME COMPLETIONTIME testrun Unknown Pending 21s   kubectl pods NAME READY STATUS RESTARTS AGE testrun pod mw9bt 0 2 Init 1 2 0 59s   kubectl describe pod testrun pod mw9bt        node kubernetes io unreachable NoExecute 300s Events  Type Reason Age Message                               Normal Scheduled default scheduler Successfully assigned default testrun pod mw9bt ydzs node5 Normal Pulling 4m20s kubelet  ydzs node5 Pulling image  busybox sha256 a2490cec4484ee6c1068ba3a05f89934010c85242f736280b35343483b2264b6  Normal Pulled 4m13s kubelet  ydzs node5 Successfully pulled image  busybox sha256 a2490cec4484ee6c1068ba3a05f89934010c85242f736280b35343483b2264b6  Normal Created 4m13s kubelet  ydzs node5 Created container working dir initializer Normal Started 4m13s kubelet  ydzs node5 Started container working dir initializer Normal Pulling 4m12s kubelet  ydzs node5 Pulling image  cnych tekton entrypoint v0 12 0  Normal Pulled 2m13s kubelet  ydzs node5 Successfully pulled image  cnych tekton entrypoint v0 12 0  Normal Created 2m13s kubelet  ydzs node5 Created container place tools Normal Started 2m12s kubelet  ydzs node5 Started container place tools Normal Pulling 2m12s kubelet  ydzs node5 Pulling image  cnych tekton git init v0 12 0  Normal Pulled 33s kubelet  ydzs node5 Successfully pulled image  cnych tekton git init v0 12 0  Normal Created 32s kubelet  ydzs node5 Created container step git source cnych tekton example d6mcz Normal Started 32s kubelet  ydzs node5 Started container step git source cnych te",
        "objectID": "post/使用Tekton创建CI流水线1",
        "date": "2020-05-06T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "tekton"
        ],
        "slug": "create-ci-pipeline-with-tekton-1",
        "keywords": [
            "kubernetes",
            "tekton",
            "github",
            "git",
            "流水线"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200506160638.png",
                "desc": "https://unsplash.com/photos/hkJsoE-_0vo"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Tekton 创建 CI/CD 流水线（2/4）",
        "uri": "post/使用Tekton创建CI流水线2",
        "content": "Kubernetes        Tekton    Tekton    GitHub                                    Task       Docker          Docker Hub                     Docker Hub           Docker               Docker                    Docker Docker                                 Google     Kaniko                Kubernetes       Docker         Docker          Kaniko       Docker                     Docker Hub                                Kubernetes   Secret              secret yaml             apiVersion  v1 kind  Secret metadata  name  docker auth annotations  tekton dev docker 0  https   index docker io v1  type  kubernetes io basic auth stringData  username  myusername password  mypassword       myusername   mypassword       Docker Hub             Secret          tekton dev docker 0   annotation            Tekton           Docker              ServiceAccount          docker auth    Secret           serviceaccount yaml             apiVersion  v1 kind  ServiceAccount metadata  name  build sa secrets  name  docker auth                     kubectl apply  f secret yaml secret docker auth created   kubectl apply  f serviceaccount yaml serviceaccount build sa created                Tekton                  build sa    ServiceAccount       Docker Hub                         Task          Docker                https   github com cnych tekton demo               Dockerfile            Clone          golang 1 14 alpine WORKDIR  go src app COPY     RUN go  d  v       RUN go install  v       CMD   app          task build push yaml               apiVersion  tekton dev v1beta1 kind  Task metadata  name  build and push spec  resources  inputs  name  repo type  git steps  name  build and push image  cnych kaniko executor v0 22 0 env  name  DOCKER_CONFIG value   tekton home  docker command   kaniko executor   dockerfile Dockerfile   context  workspace repo   destination cnych tekton test latest                  git                build and push     Kaniko                                   kaniko executor      dockerfile    Dockerfile      context                              destination                  Tekton                                                                         DOCKER_CONFIG               Kaniko     Docker                           kubectl apply  f task build push yaml task tekton dev build and push created     Task                               TaskRun           kubectl    tkn                                               TaskRun                      Task      ServiceAccount           taskrun build push yaml             apiVersion  tekton dev v1beta1 kind  TaskRun metadata  name  build and push spec  serviceAccountName  build sa taskRef  name  build and push resources  inputs  name  repo resourceRef  name  cnych tekton example          serviceAccountName       Docker       ServiceAccount         taskRef               resourceRef                                    kubectl apply  f taskrun build push yaml taskrun tekton dev build and push created                         Pod              kubectl pods NAME READY STATUS RESTARTS AGE build and push pod pv6mv 0 2 Init 0 2 0 32s   kubectl taskrun NAME SUCCEEDED REASON STARTTIME COMPLETIONTIME build and push Unknown Pending 108s         Pod                  TaskRun       Pending                           Pod         kubectl pods NAME READY STATUS RESTARTS AGE build and push pod pv6mv 0 2 Completed 0 16m   kubectl logs  f build and push pod pv6mv   all containers   level   info   ts  1588907241 1187525  caller   creds init main go 44   msg   Credentials initialized      level   info   ts  1588907420 917656  caller   git git go 136   msg   Successfully cloned https   github com cnych tekton demo   f840e0c390be9a1a6edad76abbde64e882047f05  grafted  HEAD  origin master  path  workspace repo     level   info   ts  1588907421 0128217  caller   git git go 177   msg   Successfully initialized updated submodules path  workspace repo   INFO 0010  Retrieving image manifest golang 1 14 alpine INFO 0016  Retrieving image manifest golang 1 14 alpine INFO 0020  Built cross stage deps  map   INFO 0020  Retrieving image manifest golang 1 14 alpine INFO 0023  Retrieving image manifest golang 1 14 alpine INFO 0029  Executing 0 build triggers INFO 0029  Unpacking rootfs cmd COPY     requires it  INFO 0259  WORKDIR  go src app INFO 0259  cmd  workdir INFO 0259  Changed working directory  go src app INFO 0259  Creating directory  go src app INFO 0259  Resolving 1 paths INFO 0259  Taking snapshot files    INFO 0259  COPY     INFO 0259  Resolving 56 paths INFO 0259  Taking snapshot files    INFO 0259  RUN go  d  v       INFO 0259  Taking snapshot full filesystem    INFO 0265  Resolving 11667 paths INFO 0272  cmd   bin sh INFO 0272  args    c go  d  v        INFO 0272  Running    bin sh  c go  d  v        INFO 0272  Taking snapshot full filesystem    INFO 0275  Resolving 11667 paths INFO 0280  RUN go install  v       INFO 0280  cmd   bin sh INFO 0280  args    c go install  v        INFO 0280  Running    bin sh  c go install  v        app INFO 0281  Taking snapshot full filesystem    INFO 0284  Resolving 11666 paths INFO 0288  CMD   ",
        "objectID": "post/使用Tekton创建CI流水线2",
        "date": "2020-05-08T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "tekton"
        ],
        "slug": "create-ci-pipeline-with-tekton-2",
        "keywords": [
            "kubernetes",
            "tekton",
            "github",
            "git",
            "流水线"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200508114921.png",
                "desc": "https://unsplash.com/photos/YXQ_vYDcMIg"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Tekton 创建 CI/CD 流水线（3/4）",
        "uri": "post/使用Tekton创建CI流水线3",
        "content": "TaskRun      PipelineRun                                                Tekton     Triggers    Triggers           CRD     Tekton          TriggerTemplate                 PipelineResource   PipelineRun TriggerBinding                ClusterTriggerBinding    TriggerBinding           EventListener     TriggerBinding   TriggerTemplate              TriggerBinding           TriggerTemplate      resources      interceptor                           Tekton Triggers                    tektoncd triggers   GitHub                     kubectl apply   filename https   storage googleapis com tekton releases triggers latest release yaml              gcr                                                                 Docker Hub          kubectl apply  f https   www qikqiak com k8strain devops manifests tekton trigger yaml            Triggers                Running       kubectl pods   namespace tekton pipelines NAME READY STATUS RESTARTS AGE tekton dashboard 69656879d9 7bbkl 1 1 Running 0 2d6h tekton pipelines controller 67f4dc98d8 pgxrq 1 1 Running 0 22d tekton pipelines webhook 59df55445c jw76v 1 1 Running 0 22d tekton triggers controller 779fc9f557 vj6xs 1 1 Running 0 17m tekton triggers webhook c77f8dbd6 ctmlm 1 1 Running 0 17m           Jenkins Pipeline          Tekton                    GitLab     http   git k8s local course devops demo git                           GitLab          Tekton                             EventListener                  gitlab listener   EventListener                gitlab push listener yaml  apiVersion  triggers tekton dev v1alpha1 kind  EventListener metadata  name  gitlab listener spec  serviceAccountName  tekton triggers gitlab sa triggers  name  gitlab push events trigger interceptors  gitlab  secretRef       gitlab secret   Secret      secretToken    secretName  gitlab secret secretKey  secretToken eventTypes  Push Hook       GitLab Push    bindings  name  gitlab push binding   TriggerBinding    template  name  gitlab echo template   TriggerTemplate    apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  el gitlab listener spec  routes  match  Host tekton trigger k8s local  kind  Rule services  name  el gitlab listener      EventListener    port  8080    EventListener            Listener                                  gitlab listener              el gitlab listener   Service           IngressRoute                 Service   NodePort          GitLab              Service   DNS       EventListener                     EventListener          interceptors             gitlab          GitLab            WebHook   Secret Token      Secret         interceptors  gitlab  secretRef       gitlab secret   Secret      secretToken    secretName  gitlab secret secretKey  secretToken eventTypes  Push Hook       GitLab Push        Secret               WebHook   Secret Token         GitLab          secret yaml  apiVersion  v1 kind  Secret metadata  name  gitlab secret type  Opaque stringData  secretToken   1234567  apiVersion  v1 kind  Secret metadata  name  gitlab auth annotations  tekton dev git 0  http   git k8s local type  kubernetes io basic auth stringData  username  myusername password  mypassword    EventListener                     RBAC       rbac yaml  apiVersion  v1 kind  ServiceAccount metadata  name  tekton triggers gitlab sa secrets  name  gitlab secret name  gitlab auth kind  Role apiVersion  rbac authorization k8s io v1 metadata  name  tekton triggers gitlab minimal rules  Permissions every EventListener deployment function apiGroups    triggers tekton dev   resources    eventlisteners    triggerbindings    triggertemplates   verbs    get   apiGroups       secrets needed Github Gitlab interceptors  serviceaccounts per trigger authorization resources    configmaps    secrets    serviceaccounts   verbs    get    list    watch   Permissions create resources associated TriggerTemplates apiGroups    tekton dev   resources    pipelineruns    pipelineresources    taskruns   verbs    create   apiVersion  rbac authorization k8s io v1 kind  RoleBinding metadata  name  tekton triggers gitlab binding subjects  kind  ServiceAccount name  tekton triggers gitlab sa roleRef  apiGroup  rbac authorization k8s io kind  Role name  tekton triggers gitlab minimal             TriggerBinding   TriggerTemplate            EventListener                bindings  name  gitlab push binding   TriggerBinding    template  name  gitlab echo template   TriggerTemplate           TriggerBinding         TriggerTemplate                          TriggerBinding     apiVersion  triggers tekton dev v1alpha1 kind  TriggerBinding metadata  name  gitlab push binding spec  params  name  gitrevision value    body checkout_sha  name  gitrepositoryurl value    body repository githttpurl                      GitLab WebHook                     JSONPath                                                WebHook             GitLab Webhook   Push Hook                  object_kind    push    before    95790bf891e76fee5e1747ab589903a6a1f80f22    after    da1560886d4f094c3e6c9ef40349f7d38b5d27d7    ref    refs heads master    checkout_sha    da1560",
        "objectID": "post/使用Tekton创建CI流水线3",
        "subtitle": "Tekton Trigger 的使用",
        "date": "2020-05-29T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "tekton"
        ],
        "slug": "create-ci-pipeline-with-tekton-3",
        "keywords": [
            "kubernetes",
            "tekton",
            "github",
            "git",
            "gitlab",
            "流水线"
        ],
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200529181158.png",
                "desc": "https://unsplash.com/photos/aV31XuctrM8"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用YAML 文件创建 Kubernetes Deployment",
        "uri": "post/使用YAML 文件创建 kubernetes Deployment",
        "content": "kubernetes             kubectl          POD         kubernetes          YAML                 YAML         POD                  YAML              YAML         kubernetes pod          kubernetes deployment   YAML    YAML                         JSON     YAML        j m l                                                                         Tab                                                                      kubernetes                 Lists Maps            Lists Maps Maps Lists                                           Maps        Maps      Map        key value     Maps                      apiVersion  v1 kind  Pod                                                            kind   apiVersion           v1 Pod     YAML       JSON                    apiVersion    v1    kind    pod                   YAML         KEY               Maps  apiVersion  v1 kind  Pod metadata  name  kube100 site labels  app  web     YAML    metadata    KEY         Maps        labels    KEY       Map                             YAML         YAML                                YAML                                                                    4            name   labels             YAML                MAP   app   labels       app               YAML           tab                 YAML       JSON        apiVersion    v1    kind    Pod    metadata      name    kube100 site    labels      app    web                JSON                YAML              Lists Lists               YAML              args Cat Dog Fish                                                    JSON          args      Cat    Dog    Fish         list         Maps Maps        list      apiVersion  v1 kind  Pod metadata  name  kube100 site labels  app  web spec  containers  name  front end image  nginx ports  containerPort  80 name  flaskapp demo image  jcdemo flaskapp ports  containerPort  5000      YAML             containers   List           name image ports       ports      key   containerPort   Map                 JSON          apiVersion    v1    kind    Pod    metadata      name    kube100 site    labels      app   web        spec      containers       name    front end    image    nginx    ports       containerPort    80           name    flaskapp demo    image    jcdemo flaskapp    ports       containerPort    5000                   JSON           YAML             YAML    Pod         YAML                                     YAML         Deployment         kubernetes                             kubernetes            Pod apiVersion  v1 kind  Pod metadata  name  kube100 site labels  app  web spec  containers  name  front end image  nginx ports  containerPort  80 name  flaskapp demo image  jcdemo flaskapp ports  containerPort  5000                POD                   apiVersion       v1               kubernetes                     kind            Pod                      Deployment Job Ingress Service     metadata          Pod     meta         namespace         spec      containers storage volumes     Kubernetes                                    Kubernetes API     Kubernetes Pod                        spec  containers  name  front end image  nginx ports  containerPort  80                           front end     nginx                    80                                                                                               name image command args workingDir ports env resources volumeMounts livenessProbe readinessProbe livecycle terminationMessagePath imagePullPolicy securityContext stdin stdinOnce tty     POD              POD   YAML      pod yaml     kubectl   POD    kubectl create  f pod yaml pod  kube100 site  created                   kubectl      POD         kubectl pods NAME READY STATUS RESTARTS AGE kube100 site 2 2 Running 0 1m        POD                                  kubectl describe                POD    kubectl delete  f pod yaml pod  kube100 site  deleted    Deployment                Deployment                      POD           POD                      kubernetes     Deployment       kubernetes      POD                                       POD                      Deployment  apiVersion  extensions v1beta1 kind  Deployment metadata  name  kube100 site spec  replicas  2      apiVersion     extensions v1beta1   kind    Deployment                       meta                         spec                                     Pod                                Kubernetes v1beta1 API           Depolyment                        Deployment   YAML     apiVersion  extensions v1beta1 kind  Deployment metadata  name  kube100 site spec  replicas  2 template  metadata  labels  app  web spec  containers  name  front end image  nginx ports  containerPort  80 name  flaskapp demo image  jcdemo flaskapp ports  containerPort  5000             pod yaml          template       POD            YAML      deployment yaml      Deployment    kubectl create  f deployment yaml deployment  kube100 site  created                    Deployment       kubectl deployments NAME DESIRED CURRENT UP TO DATE AVAILABLE AGE kube100 site 2 2 2 2 2m           Pods                       YAML      Kubernetes",
        "objectID": "post/使用YAML 文件创建 kubernetes Deployment",
        "date": "2018-02-02T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "yaml",
            "Deployment"
        ],
        "keywords": [
            "kubernetes",
            "YAML",
            "Deployment"
        ],
        "slug": "use-yaml-create-kubernetes-deployment",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1502990313206-7f37a9514bea.jpeg",
                "desc": "Zigzag"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用编程语言描述 Kubernetes 应用 - cdk8s",
        "uri": "post/使用编程语言定义资源对象",
        "content": "cdk8s   AWS Labs         TypeScript                              Kubernetes       cdk8s           Kubernetes YAML                  cdk8s        Kubernetes            cdk8s          construct         Kubernetes      Deployment Service Ingress           Kubernetes                  App                         charts     Helm Chart                     Kubernetes                            Kubernetes                   cdk8s        Kubernetes                     cdk8s                              dist              kubectl apply  f dist chart k8syaml      GitOps            Kubernetes             cdk8s      TypeScript   Python           Kubernetes              Python       cdk8s        cdk8s           CLI                            cdk8s CLI                     Mac           Homebrew           brew install cdk8s           npm           Node js     npm install  g cdk8s cli              cdk8s         cdk8s        mkdir hello    cd hello cdk8s init TYPE   TYPE        python app    typescript app   cdk8s init python app Initializing project python app template Pipfile lock not found  creating  Locking  dev packages  dependencies  Locking  packages  dependencies  Updated Pipfile lock  a65489   Installing dependencies Pipfile lock  a65489                                       0 0   00 00 00 activate project s virtualenv  run following    pipenv shell Installing cdk8s  0 19 0  Requirement already satisfied  cdk8s  0 19 0  Users ych  virtualenvs hello ndJXVB8W lib python3 7 site packages  0 19 0  Requirement already satisfied  constructs 2 0 1  Users ych  virtualenvs hello ndJXVB8W lib python3 7 site packages  from cdk8s  0 19 0   2 0 1  Requirement already satisfied  publication  0 0 3  Users ych  virtualenvs hello ndJXVB8W lib python3 7 site packages  from cdk8s  0 19 0   0 0 3  Requirement already satisfied  jsii  1 1 0  Users ych  virtualenvs hello ndJXVB8W lib python3 7 site packages  from cdk8s  0 19 0   1 1 1  Requirement already satisfied  cattrs  1 0 0  Users ych  virtualenvs hello ndJXVB8W lib python3 7 site packages  from jsii  1 1 0  cdk8s  0 19 0   1 0 0  Requirement already satisfied  typing extensions  3 6 4  Users ych  virtualenvs hello ndJXVB8W lib python3 7 site packages  from jsii  1 1 0  cdk8s  0 19 0   3 7 4 2  Requirement already satisfied  python dateutil  Users ych  virtualenvs hello ndJXVB8W lib python3 7 site packages  from jsii  1 1 0  cdk8s  0 19 0   2 8 1  Requirement already satisfied  attrs  18 2  Users ych  virtualenvs hello ndJXVB8W lib python3 7 site packages  from jsii  1 1 0  cdk8s  0 19 0   19 3 0  Requirement already satisfied  six  1 5  Users ych  virtualenvs hello ndJXVB8W lib python3 7 site packages  from python dateutil  jsii  1 1 0  cdk8s  0 19 0   1 14 0  Adding cdk8s  0 19 0 Pipfile s  packages   Pipfile lock  a65489  date  updating  eea701   Locking  dev packages  dependencies  Locking  packages  dependencies  Updated Pipfile lock  eea701   Installing dependencies Pipfile lock  eea701                                       9 9   00 00 02 activate project s virtualenv  run following    pipenv shell cdk8s Python project ready  cat help Prints message cdk8s synth Synthesize k8s manifests dist  cdk8s import Imports k8s API objects  imports k8s  Deploy  kubectl apply  f dist   k8s yaml                  Node            v13 5 0                          K8S   API                             tree         Pipfile     Pipfile lock     cdk8s yaml     dist       hello k8s yaml     help     imports       k8s       init py       _jsii         init py         k8s 0 0 0 jsii tgz       py typed     main py 4 directories  10 files          main py               usr bin env python constructs import Construct cdk8s import App  Chart class MyChart Chart   def init self  scope  Construct  ns  str   super   init scope  ns  define resources app   App   MyChart app   hello   app synth                                              cdk8s init                          cdk8s synth                 Chart    Kubernetes             dist                       cdk8s synth dist hello k8s yaml   cat dist hello k8s yaml                       Kubernetes API      charts   apps    Kubernetes API     cdk8s            cdk8s import                               imports k8s                 cdk8s                    cdk8s import            imports                                                          Kubernetes         Deployment   Service         main py               usr bin env python constructs import Construct cdk8s import App  Chart imports import k8s       cdk8s import         k8s         class MyChart Chart   def init self  scope  Construct       app   ns  str                 k8s   namespace               super   init scope  ns         label     app    hello k8s                Deployment     k8s Deployment self   deployment   spec k8s DeploymentSpec  replicas 2  selector k8s LabelSelector match_labels label   template k8s PodTemplateSpec  metadata k8s ObjectMeta labels label   spec k8s PodSpec containers   k8s Container  name  hello k8s   image  paulbouwer hello kubernetes 1 7   ports  k8s ContainerPort container_port 8080           ",
        "objectID": "post/使用编程语言定义资源对象",
        "date": "2020-04-24T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "cdk8s",
            "python",
            "helm"
        ],
        "keywords": [
            "kubernetes",
            "cdk8s",
            "helm",
            "kustomize",
            "python",
            "typescript"
        ],
        "slug": "use-cdk8s-define-k8s-apps",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200424115708.png",
                "desc": "https://unsplash.com/photos/SGeLqzloJaw"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "免费获取 JetBrains 全系产品正版 License",
        "uri": "post/免费使用IDEA",
        "content": "IDE                 jetbrains                              IDE       IntelliJ IDEA PyCharm GoLand WebStorm    IDE                                                                                                                  jetbrains          License                                     License                                              star                            Docker   Kubernetes                 https   github com cnych kubernetes learning       Kubernetes                                   License        License                        License                     GitHub       Create new file       LICENSE  GitHub          LICENSE                      LICENSE            Apache License 2 0                    https   www jetbrains com shop eform opensource                  jetBrains              License                                                                                     Project website                                 GitHub        License URL                   License          No  required licenses     License                                                                                                          GitHub                                                   GitHub                                                GitHub                              License                                      JetBrains                                                                            License                                         JetBrains                            JetBrains         License                                     License        Take license s                            JetBrains                                  JetBrains                                        License      License                 License                Assign                   JetBrains            License                                                  License                           GoLand         JetBrains Account                Activate                      IDE                        IDE         PyCharm WebStorm                     JetBrains           License",
        "objectID": "post/免费使用IDEA",
        "date": "2019-10-06T00:00:00.000Z",
        "tags": [
            "jetbrains",
            "goland",
            "pycharm",
            "ops"
        ],
        "slug": "free-use-jetbrains-ide",
        "keywords": [
            "jetbrains",
            "goland",
            "pycharm",
            "IDE",
            "免费"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/pexels-photo-2071518.jpeg",
                "desc": "Ship Sailing"
            }
        ],
        "category": "ops"
    },
    {
        "title": "办公环境下 kubernetes 网络互通方案",
        "uri": "post/办公环境下 Kubernetes 网络互通方案",
        "content": "kubernetes                CNI      Flannel    Overlay Network              pod               spring cloud         k8s               pod      Eureka                         ingress   ingress controller             http 80   https 443                            TangT                        1         k8s pod                                     k8s                               2         k8s svc        k8s      mysql redis        ingress 7                           service   NodePort                        k8s             2 4G   node    node 30                  k8s    pod svc node 30 IP    10 60 20 30    DNS IP    10 60 20 1 pod   10 244 0 0 24 svc   10 96 0 0 12      192 168 0 0 22   node 30         taints     k8s    pod        kubectl taint nodes node 30 forward node 30 NoSchedule node 30    snat       vim  etc sysctl d k8s conf net ipv4 ip_forward   1 sysctl  p        pod service snat iptables  t nat  A POSTROUTING  s 192 168 0 0 22  d 10 244 0 0 24  j MASQUERADE iptables  t nat  A POSTROUTING  s 192 168 0 0 22  d 10 96 0 0 12  j MASQUERADE                      k8s pod   service         node 30     ip route 10 244 0 0 255 255 255 0 10 60 20 30 ip route 10 96 0 0 255 240 0 0 10 60 20 30 DNS                             pod ip   service ip           k8s      pod ip          service ip                        DNS       cluster local  coreDNS                   A            mysql     ProjectA dev1    namespace         k8s    service                  mysql             mysql ProjectA dev1 svc cluster local   DNS         DNS     CoreDNS       service ip       DNS       cluster local      CoreDNS                                    DNS   node 30              kube dns 10 96 0 10 kubectl svc  n kube system  grep kube dns kube dns ClusterIP 10 96 0 10 53 UDP 53 TCP 20d               DNS IP   10 60 20 1     node 30        10 60 20 1    svc  10 96 0 0 12      DNS IP 10 60 20 1         route add  net 10 96 0 0 12 gw 10 60 20 30 node 30 IP 10 60 20 30   snat iptables  t nat  A POSTROUTING  s 10 60 20 1 32  d 10 96 0 0 12  j MASQUERADE                     DNS IP 10 60 20 1    node 30       nodeSelector node 30     nginx ingress controller   4     coredns  TCP UDP 53     node 30      kubectl label nodes node 30 node dns l4     namespace  kubectl create ns dns l4   namespace dns l4     nginx ingress controller     node 30  Tolerate         kind  ConfigMap apiVersion  v1 metadata  name  nginx configuration namespace  dns l4 labels  app kubernetes io name  ingress nginx app kubernetes io part of  ingress nginx kind  ConfigMap apiVersion  v1 metadata  name  tcp services namespace  dns l4 labels  app kubernetes io name  ingress nginx app kubernetes io part of  ingress nginx data  53   kube system kube dns 53  kind  ConfigMap apiVersion  v1 metadata  name  udp services namespace  dns l4 labels  app kubernetes io name  ingress nginx app kubernetes io part of  ingress nginx data  53   kube system kube dns 53  apiVersion  v1 kind  ServiceAccount metadata  name  nginx ingress serviceaccount namespace  dns l4 labels  app kubernetes io name  ingress nginx app kubernetes io part of  ingress nginx apiVersion  rbac authorization k8s io v1beta1 kind  ClusterRole metadata  name  nginx ingress clusterrole labels  app kubernetes io name  ingress nginx app kubernetes io part of  ingress nginx rules  apiGroups     resources  configmaps endpoints nodes pods secrets verbs  list watch apiGroups     resources  nodes verbs  apiGroups     resources  services verbs  list watch apiGroups   extensions  resources  ingresses verbs  list watch apiGroups     resources  events verbs  create patch apiGroups   extensions  resources  ingresses status verbs  update apiVersion  rbac authorization k8s io v1beta1 kind  Role metadata  name  nginx ingress role namespace  dns l4 labels  app kubernetes io name  ingress nginx app kubernetes io part of  ingress nginx rules  apiGroups     resources  configmaps pods secrets namespaces verbs  apiGroups     resources  configmaps resourceNames  Defaults     Here      adapted change either parameter when launching nginx ingress controller   ingress controller leader nginx  verbs  update apiGroups     resources  configmaps verbs  create apiGroups     resources  endpoints verbs  apiVersion  rbac authorization k8s io v1beta1 kind  RoleBinding metadata  name  nginx ingress role nisa binding namespace  dns l4 labels  app kubernetes io name  ingress nginx app kubernetes io part of  ingress nginx roleRef  apiGroup  rbac authorization k8s io kind  Role name  nginx ingress role subjects  kind  ServiceAccount name  nginx ingress serviceaccount namespace  dns l4 apiVersion  rbac authorization k8s io v1beta1 kind  ClusterRoleBinding metadata  name  nginx ingress clusterrole nisa binding labels  app kubernetes io name  ingress nginx app kubernetes io part of  ingress nginx roleRef  apiGroup  rbac authorization k8s io kind  ClusterRole name  nginx ingress clusterrole subjects  kind  ServiceAccount name  nginx ingress serviceaccount namespace  dns l4 apiVersion  extensions v1beta1 kind  Deployment metadata  name  nginx ingress controller namespace  dns l4 labels  ",
        "objectID": "post/办公环境下 Kubernetes 网络互通方案",
        "date": "2019-01-11T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "dns",
            "coredns"
        ],
        "slug": "office-env-k8s-network",
        "keywords": [
            "kubernetes",
            "coredns",
            "kubedns",
            "网络互通"
        ],
        "gitcomment": true,
        "notoc": true,
        "category": "Kubernetes"
    },
    {
        "title": "使用 Sealed Secrets 加密 Kubernetes Secrets",
        "uri": "post/加密secret资源",
        "content": "GitOps          GitOps       Git                                      Kubernetes                                 Kubernetes   Secrets       Git                        Kubernetes Secrets                               OAuth Token SSH KEY              Secrets                             Secrets                                    Secrets                        base64                                    Secrets             Git                              GitOps            Bitnami Labs         Sealed Secrets               Sealed Secrets Sealed Secrets                    Kubernetes Operator       kubeseal        kubeseal                  Kubernetes Secrets    SealedSecret       Secret   Kubernetes CRD                        SealedSecret                          Kubernetes       SealedSecret             Operator               Secret             Pod         Secret            SealedSecret          apiVersion  bitnami com v1alpha1 kind  SealedSecret metadata  name  mysecret spec  encryptedData  secret  AgBy3i4OJSWK PiTySYZZA9rO43cGDEq        Operator                   Secret     apiVersion  v1 data  secret  VGhpcyBpcyBhIHNlY3JldCE  kind  Secret metadata  creationTimestamp  null name  mysecret SealedSecret        Operator       SealedSecret                 Secret                    RBAC               Secret                      Secret       SealedSecret                                         Secret          SealedSecret                                  SealedSecret                                     web                 foo    bar      Secret             Secret                  Secret    SealedSecret                                                                                               web                    Secrets        SealedSecret                web        foo   Secret      SealedSecret     web                 bar   Secret                SealedSecret        Secret       bar         Secret                 Secrets                                   Secret                          Kubernetes                            RBAC                        SealedSecrets                            3        SealedSecrets  strict                  Secret                      SealedSecret                  namespace wide               Secret           SealedSecret     cluster wide                 Secret           SealedSecret          Secret                           kubeseal        scope             kubeseal   scope cluster wide   format yaml sealed secret yaml        Secret     annotation         kubeseal          sealedsecrets bitnami com namespace wide   true     namespace wide sealedsecrets bitnami com cluster wide   true     cluster wide               kubeseal      strict                             SealedSecrets               SealedSecrets       kubeseal       Operator               kubeseal       GitHub Release                           wget https   github com bitnami labs sealed secrets releases download v0 12 4 kubeseal linux amd64  O kubeseal   sudo install  m 755 kubeseal  usr local bin kubeseal   kubeseal   version kubeseal version  v0 12 4 dirty      Kubernetes      Operator        kubectl apply  f https   github com bitnami labs sealed secrets releases download v0 12 4 controller yaml service sealed secrets controller created rolebinding rbac authorization k8s io sealed secrets service proxier created rolebinding rbac authorization k8s io sealed secrets controller created clusterrole rbac authorization k8s io secrets unsealer created serviceaccount sealed secrets controller created customresourcedefinition apiextensions k8s io sealedsecrets bitnami com created role rbac authorization k8s io sealed secrets service proxier created role rbac authorization k8s io sealed secrets key admin created clusterrolebinding rbac authorization k8s io sealed secrets controller created deployment apps sealed secrets controller created           kube system           kubectl pods  n kube system  l name sealed secrets controller NAME READY STATUS RESTARTS AGE sealed secrets controller 6bf8c44ff9 fqhgt 1 1 Running 0 3m36s                                SealedSecret        Secret              SealedSecret               Secret       echo  n  This secret    kubectl create secret generic mysecret   dry run   from file secret  dev stdin  o yaml   secret yaml   cat secret yaml apiVersion  v1 data  secret  VGhpcyBpcyBhIHNlY3JldA   kind  Secret metadata  creationTimestamp  null name  mysecret             dry run                   Secret         base64                                kubeseal             kubeseal   format yaml sealedsecret yaml   cat sealedsecret yaml apiVersion  bitnami com v1alpha1 kind  SealedSecret metadata  creationTimestamp  null name  mysecret namespace  default spec  encryptedData  secret  AgActQcD5PS8BkGE9bgB0gCtJrL0HQBA7IWoKYFcQAuOBxxAL5r i6shnJQByxyo4Wv5y62MrxXlKZkliXuHygrCaxZaKUyvuPkmAcpcgg P5kY2KI2yQd0ENqGzgPCBiqbBiEFYATykeAUSEe3uUrYeE0EeIDWpiX758UzukaP30Z9nr5m1Ce rvUUrIaVwQvlHH3pCENGcnb iCOd2N1zO4YUua1GIm8TFB9IaINCyJR1Djv5zoiu9auNEeVrTWW9gqr1Wj9UaHA7uYqMpdUvupRAdUxBL5HSjZKtcesOKvVtxLNPBmIzolMf42FrxBH42WEoXHOPsRxuKw6UIdsiigVwnTEJ",
        "objectID": "post/加密secret资源",
        "subtitle": "如何在 Git 中存储 Secrets 资源",
        "date": "2020-06-20T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "sealed",
            "secrets",
            "ops"
        ],
        "slug": "encrypt-k8s-secrets-with-sealed-secrets",
        "keywords": [
            "kubernetes",
            "sealed",
            "secrets",
            "ops",
            "gitops",
            "加密"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200620114105.png",
                "desc": "Sealed Secrets"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "加速开发流程的 Dockerfile 最佳实践",
        "uri": "post/加速开发流程的Dockerfile实践",
        "content": "Dockerfile     Docker                                                                     Dockerfile                                             Dockerfile                                                                                                                                                                      Dockerfile                      Dockerfile                  Docker                                                                          COPY   ADD                                                            Dockerfile     NodeJs                package json                       npm ci              Dockerfile         node lts ENV CI true ENV PORT 3000 WORKDIR  code COPY    code RUN npm ci CMD    npm    start                                Dockerfile       COPY                          package json                                  node_modules                                  package json   package lock json                                             Dockerfile       node lts ENV CI true ENV PORT 3000 WORKDIR  code COPY package json package lock json  code  RUN npm ci COPY src  code src CMD    npm    start                 package json   package lock json               RUN npm ci                                                                              Dockerfile                                      IDE                                                             Chokidar        NodeJS                     docker run  e CHOKIDARUSEPOLLING true  v   PWD  src   code src   p 3000 3000 repository imagename         v                                                       Dockerfile                                                           Dockerfile                           Dockerfile                                                 docker build                           NodeJS     lts        NodeJS       LTS                                                                node 13 12 0 ENV CI true ENV PORT 3000 WORKDIR  code COPY package json package lock json  code  RUN npm ci COPY src  code src CMD    npm    start                                                                             Docker 17 05                               Dockerfile                                         node 13 12 0 development ENV CI true ENV PORT 3000 WORKDIR  code COPY package json package lock json  code  RUN npm ci COPY src  code src CMD    npm    start    development builder RUN npm run build nginx 1 17 9 production COPY  from builder  code build  usr share nginx html       FROM                                 3           target                                      docker build  target development  t repository image_name development                docker run  e CHOKIDARUSEPOLLING true  v   PWD  src   code src  repository imagename development      target     docker                                   nginx                                                                                                                                                                      Swarm Kubernetes                     Search Docker engine containers using repository image_name development image   docker inspect   docker ps  q    jq  c        select  Config Image     repository image_name development        Id     State     Config     89bf376620b0da039715988fba42e78d42c239446d8cfd79e4fbc9fbcc4fd897    Status     running     Running   true   Paused   false   Restarting   false   OOMKilled   false   Dead   false   Pid   25463   ExitCode   0   Error          StartedAt     2020 04 20T09 38 31 600777983Z     FinishedAt     0001 01 01T00 00 00Z       Hostname     89bf376620b0     Domainname          User          AttachStdin   false   AttachStdout   true   AttachStderr   true   ExposedPorts      3000 tcp         Tty   false   OpenStdin   false   StdinOnce   false   Env      CHOKIDARUSEPOLLING true     PATH  usr local sbin  usr local bin  usr sbin  usr bin  sbin  bin     NODEVERSION 12 16 2     YARNVERSION 1 22 4     CI true     PORT 3000      Cmd      npm     start      Image     repository imagename development     Volumes   null   WorkingDir      code     Entrypoint      docker entrypoint sh      OnBuild   null   Labels         Search k8s pods running container repository image_name development image  using jq cli    kubectl pods  all namespaces  o json   jq  c   items     select  spec containers   image     repository image_name development     metadata    creationTimestamp   2020 04 10T09 41 55Z   generateName   imagename 78f95d4f8c    labels    com docker default service type      com docker deploy namespace   docker   com docker fry   imagename   com docker image tag   development   pod template hash   78f95d4f8c    name   imagename 78f95d4f8c gmlrz   namespace   docker   ownerReferences     apiVersion   apps v1   blockOwnerDeletion  true  controller  true  kind   ReplicaSet   name   imagename 78f95d4f8c   uid   5ad21a59 e691 4873 a6f0 8dc51563de8d     resourceVersion   532   selfLink    api v1 namespaces docker pods image_name 78f95d4f8c gmlrz   uid   5c70f340 05f1 418f 9a05 84d0abe7009d      CVE                                                  ",
        "objectID": "post/加速开发流程的Dockerfile实践",
        "date": "2020-04-30T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "docker",
            "Dockerfile"
        ],
        "keywords": [
            "kubernetes",
            "docker",
            "Dockerfile",
            "最佳实践"
        ],
        "slug": "speed-up-develop-flow-dockerfile-best-practices",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200430162404.png",
                "desc": "Dockerfile"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "华为 CloudNativeLives K8S 系列课程",
        "uri": "post/华为 CloudNativeLives K8S系列课程",
        "content": "CloudNativeLives   Kubernetes                                         Cloud Native                Cloud Migration      Cloud Native                                                                                                                  CloudNativeLives                                                              CNCF Cloud Native Computing Foundation                                                                                    CNCF   Maintainer Committer         CNCF                                CloudNativeLives           20 00                 https   bbs huaweicloud com webinar CloudNativeLives                                     k8s                CloudNativeLives",
        "objectID": "post/华为 CloudNativeLives K8S系列课程",
        "date": "2018-08-31T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "CloudNative",
            "课程"
        ],
        "keywords": [
            "kubernetes",
            "CloudNative",
            "课程",
            "华为"
        ],
        "slug": "huawei-cloudnativelives-k8s-course",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1535632788826-78ca9d09d2e7.jpeg",
                "desc": "NIGHT FULL OF MAGIC"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "双11精品课程限时优惠活动",
        "uri": "post/双11优点知识课程优惠活动",
        "content": "11                                         11                                                                11 11                                                                                              Kubernetes               1024    1688    Docker Kubernetes       360    399   Golang        360    399           https   youdianzhishi com",
        "objectID": "post/双11优点知识课程优惠活动",
        "date": "2019-11-10T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "课程"
        ],
        "keywords": [
            "kubernetes",
            "双11",
            "课程",
            "活动"
        ],
        "slug": "course-11-promotion",
        "gitcomment": true,
        "category": "kubernetes"
    },
    {
        "title": "可视化创建 Kubernetes 微服务应用",
        "uri": "post/可视化k8s微服务",
        "content": "icepanel                 Kubernetes                          VSCODE         VSCODE       IcePanel                 workspace             Open IcePanel                   icepanel yaml             IcePanel      IcePanel               IcePanel                      ConfigMap Deployment Service                  Kubernetes   IcePanel     Wordpress  MySQL            PV        Service             Secret            1                      MySQL   Wordpress          2    MySQL        Mysql   Deployment      Service                  Service                     3306             Service                          Service                3     MySQL           PVC       MySQL              PV            4    MySQL            Kubernetes Secret                                   Secret       MySQL   ROOT_PASSWORD            5    Wordpress          Wordpress            Deployment   Service              Service     LoadBalancer                  NodePort     Serivce  6     Wordpress      MySQL         PVC        Wordpress      7    MySQL   Wordpress      MySQL        Secret     Wordpress Deployment                Kubernetes Wordpress  MySQL     8           workspace                                   kubectl         Kubernetes                    LoadBalancer    NodePort     Service     Wordpress",
        "objectID": "post/可视化k8s微服务",
        "date": "2020-05-11T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "devops",
            "微服务"
        ],
        "keywords": [
            "kubernetes",
            "docker",
            "devops",
            "icepanel"
        ],
        "slug": "visualize-kubernetes-app",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200511100036.png",
                "desc": "https://unsplash.com/photos/fi5FPDZ6tns"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "名称解释OCI、runc、containerd、Docker、CRI、CRI-O",
        "uri": "post/名称解释OCI、runc、containerd、Docker、CRI、CRI-O",
        "content": "TODO",
        "objectID": "post/名称解释OCI、runc、containerd、Docker、CRI、CRI-O",
        "date": "2018-06-02T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "Pod",
            "Docker"
        ],
        "keywords": [
            "kubernetes",
            "Pod",
            "Docker",
            "runc",
            "CRI"
        ],
        "slug": "what-is-oci-runc-containerd-cri-docker",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1497864149936-d3163f0c0f4b.jpeg",
                "desc": "Coloured pencils"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "国庆 K8S 课程特别活动",
        "uri": "post/国庆 K8S 课程特别活动",
        "content": "3                                Kubernetes      59    Docker   Kubernetes       399       Kubernetes       99      557         399              www haimaxy com          2018 9 26  10 01        1             Kubernetes       Docker   Kubernetes          2      iEverything               59      3",
        "objectID": "post/国庆 K8S 课程特别活动",
        "date": "2018-09-27T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "课程"
        ],
        "keywords": [
            "kubernetes",
            "国庆",
            "课程",
            "活动"
        ],
        "slug": "k8s-course-promotion",
        "gitcomment": true,
        "category": "kubernetes"
    },
    {
        "title": "圣诞元旦课程优惠活动",
        "uri": "post/圣诞元旦课程优惠活动",
        "content": "A                                     B                                   C                                                                                              Docker Kubernetes      360    399   Kubernetes        59    69   Django2 0         88    99          Kubernetes      49    59       Kubernetes                Kubernetes      99         2019 1 3                               https   youdianzhishi com",
        "objectID": "post/圣诞元旦课程优惠活动",
        "date": "2018-12-22T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "课程"
        ],
        "slug": "shengdan-promotion",
        "keywords": [
            "kubernetes",
            "课程",
            "优惠"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/rx2a1.jpg",
                "desc": "活动"
            }
        ],
        "category": "课程"
    },
    {
        "title": "在 Kubernetes 上搭建 EFK 日志收集系统[更新]",
        "uri": "post/在 Kubernetes 上搭建 EFK 日志收集系统",
        "content": "Kubernetes              Kubernetes                 Elasticsearch Fluentd   Kibana EFK                      Elasticsearch                                                                    Elasticsearch     Kibana      Kibana   Elasticsearch               Dashboard Kibana       web       Elasticsearch       Fluentd                   Kubernetes         Fluentd                               Elasticsearch                                   Elasticsearch        Kubernetes         Kibana         DaemonSet     Fluentd        Kubernetes              Pod          EFK                    Kubernetes       addon            https   github com kubernetes kubernetes blob master cluster addons fluentd elasticsearch                                     Kubernetes v1 16 2 Elasticsearch    docker elastic co elasticsearch elasticsearch 7 6 2 Kibana    docker elastic co kibana kibana 7 6 2 Fluentd    quay io fluentd_elasticsearch fluentd v3 0 1 elastalert    jertel elastalert docker 0 2 4 Rook Ceph    rook ceph v1 2 1    Elasticsearch        Elasticsearch                                            kube logging yaml     apiVersion  v1 kind  Namespace metadata  name  logging      kubectl                logging   namespace    kubectl create  f kube logging yaml namespace logging created   kubectl ns NAME STATUS AGE default Active 244d istio system Active 100d kube ops Active 179d kube public Active 244d kube system Active 244d logging Active 4h monitoring Active 35d                                 EFK              3    Elasticsearch           3  Elasticsearch Pod                                                                     Elasticsearch              https   www elastic co guide en elasticsearch reference current modules node html split brain              discover zen minimummasternodes N 2 1   N  Elasticsearch                    3       N     2                                                                    Elasticsearch                         elasticsearch            elasticsearch svc yaml         kind  Service apiVersion  v1 metadata  name  elasticsearch namespace  logging labels  app  elasticsearch spec  selector  app  elasticsearch clusterIP  None ports  port  9200 name  rest port  9300 name  inter node         elasticsearch   Service      app elasticsearch      Elasticsearch StatefulSet                   app elasticsearch  Elasticsearch Pods   DNS         clusterIP None                        9200 9300       REST API                  kubectl                  kubectl create  f elasticsearch svc yaml service elasticsearch created   kubectl services   namespace logging Output NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE elasticsearch ClusterIP None 9200 TCP 9300 TCP 26s         Pod                 elasticsearch logging svc cluster local         StatefulSet        Elasticsearch   Pod     Kubernetes StatefulSet       Pod                 Elasticsearch            Pod                          StatefulSet     Pod            StaefulSet              StatefulSet       https   kubernetes io docs concepts workloads controllers statefulset        elasticsearch statefulset yaml                   apiVersion  apps v1 kind  StatefulSet metadata  name  es namespace  logging spec  serviceName  elasticsearch replicas  3 selector  matchLabels  app  elasticsearch template  metadata  labels  app  elasticsearch                es   StatefulSet        serviceName elasticsearch       Service               DNS      StatefulSet       Pod es  0 1 2  elasticsearch logging svc cluster local    0 1 2         Pod         3      matchLabels    app elasticsearch    Pod       spec template metadata lables     app elasticsearch         Pod             spec  containers  name  elasticsearch image  docker elastic co elasticsearch elasticsearch 7 6 2 resources  limits  cpu  1000m requests  cpu  100m ports  containerPort  9200 name  rest protocol  TCP containerPort  9300 name  inter node protocol  TCP volumeMounts  name  data mountPath   usr share elasticsearch data env  name  cluster name value  k8s logs name  node name valueFrom  fieldRef  fieldPath  metadata name name  cluster initialmasternodes value   es 0 es 1 es 2  name  discovery zen minimummasternodes value   2  name  discovery seed_hosts value   elasticsearch  name  ESJAVAOPTS value    Xms512m  Xmx512m  name  network host value   0 0 0 0         StatefulSet    Pod    9200 9300                 Service           volumeMount                     VolumeClaims                       cluster name Elasticsearch               k8s logs  node name          metadata name           es  0 1 2              discovery seed_hosts          Elasticsearch                                  Pod       DNS  es 0 1 2  elasticsearch logging svc cluster local                    Elasticsearch             Elasticsearch       https   www elastic co guide en elasticsearch reference current modules discovery html  discovery zen minimummasternodes         N 2    1 N                      3  Elasticsearch              2                                  Elasticsearch    https   www elastic co guide en elasticsearch reference current modules node html split b",
        "objectID": "post/在 Kubernetes 上搭建 EFK 日志收集系统",
        "subtitle": "一文彻底搞定 EFK 日志收集",
        "date": "2020-04-28T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "EFK",
            "Elasticsearch",
            "Fluentd",
            "Kibana"
        ],
        "keywords": [
            "kubernetes",
            "log",
            "EFK",
            "Elasticsearch",
            "Fluentd",
            "Kibana"
        ],
        "slug": "install-efk-stack-on-k8s",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/vphcv.jpg",
                "desc": "EFK Stack"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "在 Kubernetes 上部署 Spinnaker",
        "uri": "post/在 Kubernetes 上部署 Spinnaker",
        "content": "Spinnaker               Netflix                   Spinnaker                                       Jenkins                          Spinnaker        GFW                                 Kubernetes           Spinnaker        helm3         Kubernetes       Spinnaker                helm version version BuildInfo Version  v3 0 1   GitCommit  7c22ef9ce89e0ebeb7125ba2ebf7d421f3e82ffa   GitTreeState  clean   GoVersion  go1 13 4     kubectl version Client Version  version Info Major  1   Minor  14   GitVersion  v1 14 2   GitCommit  66049e3b21efe110454d67df4fa62b08ea79a19b   GitTreeState  clean   BuildDate  2019 05 16T18 55 03Z   GoVersion  go1 12 5   Compiler  gc   Platform  darwin amd64   Server Version  version Info Major  1   Minor  16   GitVersion  v1 16 2   GitCommit  c97fe5036ef3df2967d086711e6c0c405941e14b   GitTreeState  clean   BuildDate  2019 10 15T19 09 08Z   GoVersion  go1 12 10   Compiler  gc   Platform  linux amd64      Helm3                 kubectl           Helm3              kubeconfig                     helm chart        helm repo ls NAME URL stable http   mirror azure cn kubernetes charts    helm repo update Hang tight grab latest chart repositories       Successfully update  stable  chart repository Update Complete    Happy Helming              Kubernetes 1 16 x                        API         Deployment      apps v1                 Spinnaker     chart             API                         helm fetch stable spinnaker   tar  xvf spinnaker 1 23 2 tgz     spinnaker chart      Deployment StatefulSet         apiVersion     apps v1          Deployment        selector matchLabels                  chart    https   github com cnych spinnaker helm    chart     values yaml        halyard spinnakerVersion 1 17 6       apiVersion                  Kubernetes v1 16 x            gcr io               gcr azk8s cn                              StorageClass                      Ceph RBD       rook ceph block         StorageClass            apiVersion  storage k8s io v1 kind  StorageClass metadata  name  rook ceph block provisioner  rook ceph rbd csi ceph com reclaimPolicy  Retain parameters  clusterID   rook           clusterID  rook ceph       pool  k8s test pool RBD image                    2   imageFormat   2  RBD image     CSI RBD       layering   imageFeatures  layering Ceph               clusterID             csi storage k8s io provisioner secret name  rook csi rbd provisioner csi storage k8s io provisioner secret namespace  rook ceph csi storage k8s io node stage secret name  rook csi rbd node csi storage k8s io node stage secret namespace  rook ceph    volume                csi provisioner        ext4 csi storage k8s io fstype  ext4     halyard redis mino                      PVC                     halyard      persistence  storageClass  rook ceph block     redis      master  persistence  storageClass  rook ceph block     minio      persistence  storageClass  rook ceph block                     halyard                         Kubernetes   Pod                      10 151 30 11 8118            JAVA_OPTS         halyard  env  name  JAVA_OPTS value     Djava security egd file  dev   urandom    Dhttp proxyHost 10 151 30 11    Dhttps proxyHost 10 151 30 11    Dhttp proxyPort 8118    Dhttps proxyPort 8118    Dhttp nonProxyHosts   localhost   spinnaker com                Spinnaker   Chart      values yaml                           git clone https   github com cnych spinnaker helm spinnaker   kubectl create ns spinnaker    spinnaker   helm install spinnaker   namespace spinnaker   spinnaker                  helm install                       helm ls  n spinnaker NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION spinnaker spinnaker 1 2020 02 17 19 28 02 644552  0800 CST failed spinnaker 1 23 2 1 16 2                    Pod    spinnaker install using hal th8qf           Spinnaker     Job       kubectl pods  n spinnaker spinnaker install using hal th8qf 0 1 Completed 0 17h spinnaker minio 86f5b8785 bkjfq 1 1 Running 0 17h spinnaker redis master 0 1 1 Running 0 17h spinnaker spinnaker halyard 0 1 1 Running 0 17h         Spinnaker         gcr io             Pod                        Deployment             kubectl deploy  n spinnaker NAME READY UP TO DATE AVAILABLE AGE spin clouddriver 0 1 1 0 17h spin deck 0 1 1 0 17h spin echo 0 1 1 0 17h spin front50 0 1 1 0 17h spin gate 0 1 1 0 17h spin igor 0 1 1 0 17h spin orca 0 1 1 0 17h spin rosco 0 1 1 0 17h spinnaker minio 1 1 1 1 17h      spin deck    Deployment              kubectl edit deploy spin deck  n spinnaker            gcr io     gcr azk8s cn                                   Pod       Pod           kubectl pods  n spinnaker NAME READY STATUS RESTARTS AGE spin clouddriver 76b8989b4f cjw8r 1 1 Running 0 17h spin deck 5fd7b64b77 fnl5r 1 1 Running 0 17h spin echo 644c4cb6b6 gh98w 1 1 Running 0 17h spin front50 9d99cd697 cqbxb 1 1 Running 0 17h spin gate 6c49bccb6f nhbzx 1 1 Running 0 17h spin igor 7c84d9bcb rltw7 1 1 Running 0 17h spin orca b5944685 wbm5p 1 1 Running 0 17h spin rosco 6d5f9c8f55 g89hq 1 1 Running 0 17h spinnaker install using hal th8qf 0 1 Completed 0 17h spi",
        "objectID": "post/在 Kubernetes 上部署 Spinnaker",
        "date": "2020-02-18T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "spinnaker",
            "jenkins",
            "helm"
        ],
        "keywords": [
            "kubernetes",
            "spinnaker",
            "jenkins",
            "ci/cd",
            "helm",
            "安装"
        ],
        "slug": "deploy-spinnaker-on-k8s",
        "gitcomment": true,
        "notoc": true,
        "category": "kubernetes"
    },
    {
        "title": "在 Kubernetes 上部署 Vault",
        "uri": "post/在 Kubernetes 上部署 Vault",
        "content": "API Token                                          Kubernetes          Secret                         Base64                                        Secret                      HashiCorp Vault   Kubernetes            Vault    Vault                         Vault    secret           Vault     secret                         kv    secret             Vault                              1Password                                                     Vault                             Token        Token                                Vault                                       Vault                           Vault                               Token        Rolling           Vault         Vault                                             Vault                                 Vault                    1    Vault                                                         API                               Helm3   Kubernetes       Vault                helm version version BuildInfo Version  v3 0 1   GitCommit  7c22ef9ce89e0ebeb7125ba2ebf7d421f3e82ffa   GitTreeState  clean   GoVersion  go1 13 4     kubectl version Client Version  version Info Major  1   Minor  14   GitVersion  v1 14 2   GitCommit  66049e3b21efe110454d67df4fa62b08ea79a19b   GitTreeState  clean   BuildDate  2019 05 16T18 55 03Z   GoVersion  go1 12 5   Compiler  gc   Platform  darwin amd64   Server Version  version Info Major  1   Minor  16   GitVersion  v1 16 2   GitCommit  c97fe5036ef3df2967d086711e6c0c405941e14b   GitTreeState  clean   BuildDate  2019 10 15T19 09 08Z   GoVersion  go1 12 10   Compiler  gc   Platform  linux amd64          Vault       chart       https   github com hashicorp vault helm         chart              clone     Helm3                        Release                     helm install vault   namespace kube system     set  server dev enabled true    https   github com hashicorp vault helm archive v0 3 3 tar gz NAME  vault LAST DEPLOYED  Wed Feb 19 10 50 42 2020 NAMESPACE  kube system STATUS  deployed REVISION  1 TEST SUITE  None NOTES  Thank installing HashiCorp Vault  deployed Vault  look docs using Vault Kubernetes available here  https   www vaultproject io docs  release named vault  learn release  try    helm status vault   helm vault          kube system              vault   Helm release    helm ls  n kube system NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION vault kube system 1 2020 02 19 10 50 42 449755  0800 CST deployed vault 0 3 3     kubectl pods  n kube system NAME READY STATUS RESTARTS AGE        vault 0 1 1 Running 0 6m26s vault agent injector 584db8849f x6wsv 1 1 Running 0 6m27s         Vault     Pod                                                         Vault                   internal database config            secret       kv secret                         vault 0               kubectl exec  it vault 0  bin sh  n kube system       internal        kv v2 secrets         vault secrets enable  path internal kv v2 Success  Enabled kv v2 secrets engine at  internal      internal exampleapp config                        vault kv put internal database config username  db readonly username  password  db secret password  Key Value created_time 2020 02 19T02 58 54 06574878Z deletion_time n a destroyed false version 1                      secret      vault kv internal database config Metadata        Key Value created_time 2020 02 19T02 58 54 06574878Z deletion_time n a destroyed false version 1 Data        Key Value password db secret password username db readonly username                    Vault   Vault       Kubernetes                 Kubernetes ServiceAccount            Kubernetes           vault auth enable kubernetes Success  Enabled kubernetes auth method at  kubernetes  Vault        Kubernetes              Token          Vault       Kubernetes       ServiceAccount   Token       ServiceAccount   Token Kubernetes     CA        Kubernetes           vault write auth kubernetes config     tokenreviewerjwt    cat  var run secrets kubernetes io serviceaccount token       kuberneteshost  https    KUBERNETESPORT443TCP_ADDR 443      kubernetescacert   var run secrets kubernetes io serviceaccount ca crt Success  Data written to  auth kubernetes config    tokenreviewerjwt   kubernetescacert    Kubernetes       Pod          KUBERNETESPORT443TCPADDR         Kubernetes APIServer                      internal database config       secret              read                 internal app                 internal database config    secret            vault policy write internal app   path  internal data database config      capabilities     read         EOH Success  Uploaded policy  internal app          internal app   Kubernetes             vault write auth kubernetes role internal app     boundserviceaccount_names internal app     boundserviceaccount_namespaces default     policies internal app     ttl 24h Success  Data written to  auth kubernetes role internal app      Kubernetes default           internal app   ServiceAccount   Vault   internal app                 Token  24              vault 0      exit       Vault                       Kubernetes     ",
        "objectID": "post/在 Kubernetes 上部署 Vault",
        "date": "2020-02-19T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "vault",
            "consul",
            "helm"
        ],
        "keywords": [
            "kubernetes",
            "vault",
            "consul",
            "secret",
            "helm",
            "安装"
        ],
        "slug": "deploy-vault-on-k8s",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200219141007.png",
                "desc": "https://unsplash.com/photos/1w4ptVjagA8"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "在 Kubernetes 集群中使用 NodeLocal DNSCache",
        "uri": "post/在 Kubernetes 集群中使用 NodeLocal DNSCache.md",
        "content": "CoreDNS  5              dnsConfig       tcp                NodeLocal DNSCache         NodeLocal DNSCache              DaemonSet     clusterDNS           ClusterFirst   DNS      Pod       kube dns   serviceIP    DNS       kube proxy       iptables         CoreDNS                 DNS    NodeLocal DNSCache      DNS           DNS                  kube dns   DNS              NodeLocal DNSCache                 CoreDNS          DNS QPS   Pod                   NodeLocal DNSCache                     iptables DNAT             conntrack       UDP DNS      conntrack      5s                        kube dns            TCP TCP conntrack                UDP           nfconntrackudp_timeout   30      DNS     UDP     TCP           UDP      DNS                30   3      10          NodeLocal DNSCache                        wget https   github com kubernetes kubernetes raw master cluster addons dns nodelocaldns nodelocaldns yaml                    PILLARDNSSERVER     kube dns    Service   ClusterIP        kubectl svc  n kube system   grep kube dns   awk    print  3       PILLARLOCALDNS    DNSCache     IP     169 254 20 10 PILLARDNSDOMAIN            cluster local          PILLARCLUSTERDNS   PILLARUPSTREAMSERVERS            1 15 6                    kube dns   ConfigMap      Upstream Server                       sed  s k8s gcr io cnych g s PILLARDNSSERVER 10 96 0 10 g s PILLARLOCALDNS 169 254 20 10 g s PILLARDNSDOMAIN cluster local g  nodelocaldns yaml   kubectl apply  f                  Pod             kubectl pods  n kube system   grep node local dns node local dns 8zm2f 1 1 Running 0 9m54s node local dns dd4xg 1 1 Running 0 9m54s node local dns hs8qq 1 1 Running 0 9m54s node local dns pxfxn 1 1 Running 0 9m54s node local dns stjm9 1 1 Running 0 9m54s node local dns wjxvz 1 1 Running 0 9m54s node local dns wn5wc 1 1 Running 0 7m49s              DaemonSet    node local dns     hostNetwork true         8080                                kube proxy        ipvs             kubelet     cluster dns         169 254 20 10 Daemonset                  IP Pod        IP   DNS                        DNS       iptables     Pod          DNS           IP                   DNS           cluster dns               kubeadm     1 16                     var lib kubelet config yaml      clusterDNS                          DaemonSet           initContainer          initContainers    ipvs       dns     kubelet name  setup image  alpine tty  true stdin  true securityContext  privileged  true command  nsenter   target  1    mount   uts   ipc   net   pid    bash  c      kubelet   cluster dns      169 254 20 10 echo  Configuring kubelet   cluster dns 169 254 20 10  sed  i  s 10 96 0 10 169 254 20 10 g   var lib kubelet config yaml systemctl daemon reload    systemctl restart kubelet                                   kubelet   cluster dns               NodeLocal                                    sed  i  s 10 96 0 10 169 254 20 10 g   var lib kubelet config yaml   systemctl daemon reload    systemctl restart kubelet   node local dns                    Pod       test node local dns yaml  apiVersion  v1 kind  Pod metadata  name  test node local dns spec  containers  name  local dns image  busybox command     bin sh     c    sleep 60m           kubectl apply  f test node local dns yaml   kubectl exec  it test node local dns  bin sh     cat  etc resolv conf nameserver 169 254 20 10 search default svc cluster local svc cluster local cluster local options ndots 5        nameserver      169 254 20 10             Pod      node local dns                 DNS",
        "objectID": "post/在 Kubernetes 集群中使用 NodeLocal DNSCache.md",
        "date": "2020-04-23T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "coredns"
        ],
        "keywords": [
            "kubernetes",
            "coredns",
            "NodeLocal",
            "DNSCache"
        ],
        "slug": "use-nodelocal-dns-cache",
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200423130200.png",
                "desc": "Cairns City QLD, Australia"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "在 Kubernetes 中配置 Container Capabilities",
        "uri": "post/在 Kubernetes中配置Capabilities",
        "content": "Kubernetes                     securityContext  capabilities  drop  add  NETBINDSERVICE               Capabilities       docker run           cap add     cap drop          Linux Capabilities               Linux Capabilities       Linux Capabilities     Linux Capabilities      Linux              Linux 2 2                      Linux               UID 0                UID  0                              effective UID  effective GID supplementary group                    passwd                 root                                                Linux                          SUID Set User ID execution              owner                     bin passwd      SUID              passwd          passwd          root                          SUID                     SUID                        SUID      root                 SUID                         Linux     Capabilities      root                                             Capabilities     2 2    Linux           root                  capabilites Capabilites                                                        root                   capabilites                                     CAPSYSTIME    capabilites      capabilities man page      capabilites          Capabilities        getcap   setcap                   capabilities           zuiapp         getcap      ping         capabilities    ll  bin ping  rwxr xr x  1 root root 62088 Nov 7 2016  bin ping   getcap  bin ping  bin ping   capnetadmin capnetraw p          capnetadmin                 ping       ping www qikqiak com PING www qikqiak com w kunlungr com  115 223 14 186  56 84  bytes data  64 bytes 115 223 14 186  115 223 14 186   icmp_seq 1 ttl 54 time 7 87 ms 64 bytes 115 223 14 186  115 223 14 186   icmp_seq 2 ttl 54 time 7 85 ms            capabilities          sudo setcap capnetadmin capnetraw p  bin ping   getcap  bin ping  bin ping            ping                  ping www qikqiak com ping  socket  Operation not permitted    ping                  capabilities   capnetadmin   capnetraw          setcap             sudo setcap capnetadmin capnetraw p  bin ping   getcap  bin ping  bin ping   capnetadmin capnetraw p   ping www qikqiak com PING www qikqiak com w kunlungr com  115 223 14 188  56 84  bytes data  64 bytes 115 223 14 188  115 223 14 188   icmp_seq 1 ttl 54 time 7 39 ms      p    Permitted                     capabilities                                             capabilities        Permitted        Permitted      capabilites           Permitted      Inheritable Inheritable      capabilites       Inheritable                  execve       capabilites      Effective Effective      bit               execve     Permitted        capabilities           Effective               capabilities            capabilites     capabilities            Bounding   Ambient                      capabilities       cat  proc 7029 status   grep  Cap   7029 PID CapInh  0000000000000000 CapPrm  0000000000000000 CapEff  0000000000000000 CapBnd  0000001fffffffff CapAmb  0000000000000000          capsh                             capabilities      capsh   decode 0000001fffffffff 0x0000001fffffffff capchown capdacoverride capdacreadsearch capfowner capfsetid capkill capsetgid capsetuid capsetpcap caplinuximmutable capnetbindservice capnetbroadcast capnetadmin capnetraw capipclock capipcowner capsysmodule capsysrawio capsyschroot capsysptrace capsyspacct capsysadmin capsysboot capsysnice capsysresource capsystime capsysttyconfig capmknod caplease capauditwrite capauditcontrol capsetfcap capmacoverride capmacadmin capsyslog 35 36 Docker Container Capabilities     Docker                                             Docker        capabilities       capabilities              root          capabilities             root                    root                                     root       Docker    Capabilities                                         privileded                                 root                                                                          cap add     cap drop                                      Capabilities   Docker                   cap drop                      Capabilities   Docker               cap add                cap add   cap drop        ALL                 MKNOD                         sudo docker run   cap add ALL   cap drop MKNOD                                        NET_ADMIN    Capabilities           docker run  it   rm busybox  bin sh     ip link add dummy0 type dummy ip  RTNETLINK answers  Operation not permitted            privileged                   cap add NET_ADMIN     Capabilities         docker run  it   rm   cap add NET_ADMIN busybox  bin sh     ip link add dummy0 type dummy          OK    Kubernetes    Capabilities         Docker          Capabilities   Kubernetes                      Pod     spec containers sercurityContext capabilities          add   drop                 busybox      NET_ADMIN    Capabilities     YAML           cpb demo yaml  apiVersion  v1 kind  Pod metadata  name  cpb demo spec  containers  name  cpb image  busybox args  sleep  3600  securityContext  capabilities  add      ",
        "objectID": "post/在 Kubernetes中配置Capabilities",
        "date": "2019-11-18T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "Capabilities",
            "docker"
        ],
        "slug": "capabilities-on-k8s",
        "keywords": [
            "kubernetes",
            "Capabilities",
            "docker",
            "Container",
            "安全"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1574012437553-8fda4179ae82.jpeg",
                "desc": "https://unsplash.com/photos/6T0rb_X_3Bs"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "在 Django 中如何添加没有微秒的 DateTimeField 属性",
        "uri": "post/在django中如何添加没有微秒的DateTimeField",
        "content": "Django                              DateTimeField                            Task Model       class Task models Model                  title   models CharField maxlength 256  verbosename u      createdat   models DateTimeField autonowadd True  verbosename u                            page page_size                                                               data      count   5   has_next   1   tasks        title            1    ts   1546829224000   id   1       title            2    ts   1546829641000   id   2         result   1       2            API                            1546829641000                                                            ts   stringutils getnum request GET get  ts   0   0  alltask   Task objects filter createdatgt dateutils timestamp2datetime ts                              DateTime           createdat_gt                                                             gt   gte                              created_at                           task   Task objects get pk 2      task created_at datetime datetime 2019  1  7  10  54  1  343136            DateTime            ts   int 1546829641000 1000      date_utils timestamp2datetime ts  datetime datetime 2019  1  7  10  54  1                      createdat                   343136         DateTime                           createdat_gt         createdat                                                                                                                        created_at    DateTimeField                                               DateTimeField               django db backends mysql base py            class DatabaseWrapper BaseDatabaseWrapper   vendor    mysql  dictionary maps Field objects associated MySQL column types  strings  Column type strings contain format strings  they ll interpolated against values Field dict output  column type set None  won t included output  datatypes      AutoField    integer AUTO_INCREMENT    BinaryField    longblob    BooleanField    bool    CharField    varchar   max_length s     CommaSeparatedIntegerField    varchar   max_length s     DateField    date    DateTimeField    datetime    DecimalField    numeric   maxdigits s    decimalplaces s     DurationField    bigint    FileField    varchar   max_length s     FilePathField    varchar   max_length s     FloatField    double precision    IntegerField    integer    BigIntegerField    bigint    IPAddressField    char 15     GenericIPAddressField    char 39     NullBooleanField    bool    OneToOneField    integer    PositiveIntegerField    integer UNSIGNED    PositiveSmallIntegerField    smallint UNSIGNED    SlugField    varchar   max_length s     SmallIntegerField    smallint    TextField    longtext    TimeField    time    UUIDField    char 32       cached_property def data_types self   self features supportsmicrosecondprecision  return dict self datatypes  DateTimeField  datetime 6    TimeField  time 6    else  return self datatypes     further class methods     datatypes        MySQL        supportsmicrosecond_precision     django db backends mysql features py  class DatabaseFeatures BaseDatabaseFeatures       properties methods def supportsmicrosecondprecision self   https   github com farcepest MySQLdb1 issues 24 reason requiring MySQLdb 1 2 5 return self connection mysqlversion     5  6  4  Database versioninfo     1  2  5                 MySQL      5 6 4      DateTimeField           datetime 6                   Django                                                   data_types          django db backends mysql base import DatabaseWrapper DatabaseWrapper datatypes   DatabaseWrapper data_types                  models py  init py             migrations       DateTimeField                      datetime    datetime 6         5 6 4                                    created_at          mysql  ALTER TABLE task CHANGE COLUMN createdat createdat datetime NOT NULL  Query OK  156 rows affected  0 14 sec  Records  156 Duplicates  0 Warnings  0         BUG              https   stackoverflow com questions 46539755 how to add datetimefield in django without microsecond",
        "objectID": "post/在django中如何添加没有微秒的DateTimeField",
        "subtitle": "Django 中关于 DateTimeField 属性的一个大坑",
        "date": "2019-01-29T00:00:00.000Z",
        "tags": [
            "django",
            "mysql"
        ],
        "keywords": [
            "django",
            "DateTimeField",
            "mysql"
        ],
        "slug": "how-to-add-datetimefield-in-django-without-microsecond",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/th4t4.jpg",
                "desc": "C H A O S"
            }
        ],
        "category": "django"
    },
    {
        "title": "在 Docker 容器中运行 JVM 的注意事项",
        "uri": "post/在Docker容器中运行JVM的注意事项",
        "content": "https   medium com domain tech running jvm inside a container what you need to know aac6fa6c12c8",
        "objectID": "post/在Docker容器中运行JVM的注意事项",
        "date": "2019-01-05T00:00:00.000Z",
        "tags": [
            "docker",
            "java",
            "jvm"
        ],
        "slug": "running-jvm-inside-a-container",
        "keywords": [
            "docker",
            "容器",
            "java",
            "jvm"
        ],
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1544137105-295758788545.jpeg",
                "desc": "Monte Due Mani, Italy"
            }
        ],
        "category": "docker",
        "draft": true
    },
    {
        "title": "在 Kubernetes 中运行 Kubernetes",
        "uri": "post/在K8S中运行K8S",
        "content": "Windows     WSL2      KinD       Kubernetes    KinD           Kubernetes         Docker      Kubernetes                Docker         Kubernetes                    Pod         Pod                Pod     Docker Daemon KinD        Docker                     Pod     Docker Deamon              Pod       docker run                         docker sock    DIND             Pod     Docker Deamon            PID 1                     Docker Daemon      Kubernetes                KinD   Docker Damon                      systemd      systemd                          Kubernetes             watch            PID 1              systemd                        Kubernetes                     Kubernetes           stdout   stderr              systemd                                                      dockerd   Wait until dockerd ready  until docker ps   dev null 2  1 echo  Waiting dockerd     sleep 1 done exec                              entrypoint         entrypoint        PID 1             pid namespace   PID 1                                         PID 1                                                     SIGTERM                             SIGTERM                        Kubernetes      Pod   SIGTERM            Pod      Terminating                                                             tini                              ENTRYPOINT    usr bin tini           entrypoint sh                                  PID 1                      cgroups    Docker Daemon      cgroups       cgroup                  cgroups                   Docker Daemon     cgroups                       cgroups       Docker Daemon         cgroups              Docker Daemon       cgroup parent       Daemon        cgroups        cgroup           Kubernetes                Docker Daemon    cgroup parent           cgroups        Kubernetes        cgroup             cgroup                         sys fs cgroup                                      cgroup parent             Docker Daemon     cgroups            CGROUP_PARENT    grep systemd  proc self cgroup   cut  d   f3  docker        proc self cgroup           cgorup                     sys fs cgroup                       cgroup                        Docker              cgroups             Docker      cgroups     cgroup     cgroup                  docker run   rm debian findmnt  lo source target  t cgroup SOURCE TARGET cpuset  docker 451b803b3cd7cd2b69dde64cd833fdd799ae16f9d2d942386ec382f6d55bffac   sys fs cgroup cpuset cpu  docker 451b803b3cd7cd2b69dde64cd833fdd799ae16f9d2d942386ec382f6d55bffac   sys fs cgroup cpu cpuacct  docker 451b803b3cd7cd2b69dde64cd833fdd799ae16f9d2d942386ec382f6d55bffac   sys fs cgroup cpuacct blkio  docker 451b803b3cd7cd2b69dde64cd833fdd799ae16f9d2d942386ec382f6d55bffac   sys fs cgroup blkio memory  docker 451b803b3cd7cd2b69dde64cd833fdd799ae16f9d2d942386ec382f6d55bffac   sys fs cgroup memory cgroup  docker 451b803b3cd7cd2b69dde64cd833fdd799ae16f9d2d942386ec382f6d55bffac   sys fs cgroup systemd           cgroups        cgroup         sys fs cgroup memory memory limitinbytes        sys fs cgroup memory docker  memory limitinbytes        cgroup                                 cgroup              cadvisor   kubelet                        proc  cgroup          docker run   rm debian cat  proc 1 cgroup 14 name systemd  docker 512f6b62e3963f85f5abc09b69c370d27ab1dc56549fa8afcbb86eec8663a141 5 memory  docker 512f6b62e3963f85f5abc09b69c370d27ab1dc56549fa8afcbb86eec8663a141 4 blkio  docker 512f6b62e3963f85f5abc09b69c370d27ab1dc56549fa8afcbb86eec8663a141 3 cpuacct  docker 512f6b62e3963f85f5abc09b69c370d27ab1dc56549fa8afcbb86eec8663a141 2 cpu  docker 512f6b62e3963f85f5abc09b69c370d27ab1dc56549fa8afcbb86eec8663a141 1 cpuset  docker 512f6b62e3963f85f5abc09b69c370d27ab1dc56549fa8afcbb86eec8663a141 0    cadvisor        proc  cgroup          cgroup         cgroup     CPU              Docker Daemon          cadvisor              cgroup                            sys fs cgroup memory      sys fs cgroup memory docker         cgroup                                   cgroup namespace              4 6    Linux      runc   docker      cgroup              Kubernetes        cgroup              cgroups v2         IPtables                Kubernetes               Docker Daemon                                                                            Docker             iptables   POSTROUTING         masqueraded            Docker Daemon        Debian buster          Debian buster      nftables    iptables          Docker        nftables                     iptables       RUN update alternatives   set iptables  usr sbin iptables legacy    true      update alternatives   set ip6tables  usr sbin ip6tables legacy    true      update alternatives   set arptables  usr sbin arptables legacy    true     Dockerfile            GitHub https   github com jieyu docker images tree master dind              jieyu dind buster v0 1 8            docker run   rm   privileged jieyu dind buster v0 1 8 docker run alpine wget baidu com   Kubernetes            Pod           apiVersion  v1 kind  Pod metadata  name  dind spec  containers  image  jieyu dind",
        "objectID": "post/在K8S中运行K8S",
        "date": "2020-06-12T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "wsl",
            "kind",
            "docker"
        ],
        "slug": "k8s-in-k8s",
        "keywords": [
            "kubernetes",
            "windows",
            "wsl",
            "kind",
            "cgroup"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200612120656.png",
                "desc": "Kubernetes IN Kubernetes"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "在 Kubernetes 集群上部署 Kafka",
        "uri": "post/在K8S中部署kafka",
        "content": "Elasticsearch            ES                                    Kafka      Logstash   Kafka           Elasticsearch              Kafka                    Kafka                       kubectl version Client Version  version Info Major  1   Minor  14   GitVersion  v1 14 2   GitCommit  66049e3b21efe110454d67df4fa62b08ea79a19b   GitTreeState  clean   BuildDate  2019 05 16T18 55 03Z   GoVersion  go1 12 5   Compiler  gc   Platform  darwin amd64   Server Version  version Info Major  1   Minor  16   GitVersion  v1 16 2   GitCommit  c97fe5036ef3df2967d086711e6c0c405941e14b   GitTreeState  clean   BuildDate  2019 10 15T19 09 08Z   GoVersion  go1 12 10   Compiler  gc   Platform  linux amd64     helm version version BuildInfo Version  v3 0 1   GitCommit  7c22ef9ce89e0ebeb7125ba2ebf7d421f3e82ffa   GitTreeState  clean   GoVersion  go1 13 4       kafka helm chart      kafka 0 20 8 tgz                 Helm3     Kafka            incubator          stable             Kafka   Chart      helm repo add incubator http   mirror azure cn kubernetes charts incubator    helm repo update Hang tight grab latest chart repositories       Successfully update  incubator  chart repository    Successfully update  stable  chart repository Update Complete    Happy Helming     Kafka   Helm Chart                 Chart                      helm fetch incubator kafka   ls kafka 0 20 8 tgz   tar  xvf kafka 0 20 8 tgz          kafka test yaml             resources  limits  cpu  200m memory  1536Mi requests  cpu  100m memory  1024Mi livenessProbe  initialDelaySeconds  60 persistence  storageClass   rook ceph block     kafka                                         livenessProbe initialDelaySeconds 60                                 kafka             StorageClass       kafka      IO                   Local PV          ceph rbd     StorageClass       storageclass yaml  apiVersion  storage k8s io v1 kind  StorageClass metadata  name  rook ceph block provisioner  rook ceph rbd csi ceph com parameters  clusterID   rook           clusterID  rook ceph       pool  k8s test pool RBD image                    2   imageFormat   2  RBD image     CSI RBD       layering   imageFeatures  layering Ceph               clusterID             csi storage k8s io provisioner secret name  rook csi rbd provisioner csi storage k8s io provisioner secret namespace  rook ceph csi storage k8s io node stage secret name  rook csi rbd node csi storage k8s io node stage secret namespace  rook ceph    volume                csi provisioner        ext4 csi storage k8s io fstype  ext4 reclaimPolicy  Retain                                 Rook     Ceph                            Rook      Ceph                values                Helm           kubectl create ns kafka   helm install  f kafka yaml kfk incubator kafka   namespace kafka NAME  kfk LAST DEPLOYED  Tue Mar 17 11 49 51 2020 NAMESPACE  kafka STATUS  deployed REVISION  1 NOTES  Connecting Kafka inside Kubernetes connect Kafka running simple pod K8s cluster configuration this  apiVersion  v1 kind  Pod metadata  name  testclient namespace  kafka spec  containers  name  kafka image  confluentinc cp kafka 5 0 1 command  sh  c  exec tail  f  dev null  Once testclient pod above running  list kafka topics with  kubectl  n kafka exec testclient    kafka topics   zookeeper kfk zookeeper 2181   list create new topic  kubectl  n kafka exec testclient    kafka topics   zookeeper kfk zookeeper 2181   topic test1   create   partitions 1   replication factor 1 listen messages topic  kubectl  n kafka exec  ti testclient    kafka console consumer   bootstrap server kfk kafka 9092   topic test1   from beginning stop listener session above press  Ctrl C start interactive message producer session  kubectl  n kafka exec  ti testclient    kafka console producer   broker list kfk kafka headless 9092   topic test1 create message above session  simply type message press  enter  end producer session try  Ctrl C specify  zookeeper connect  configurationOverrides  please replace  kfk zookeeper 2181  value  zookeeper connect   will error             Release        helm ls  n kafka NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION kfk kafka 1 2020 03 17 14 50 41 595746  0800 CST deployed kafka 0 20 8 5 0 1               3     kafka   zookeeper        kubectl pods  n kafka NAME READY STATUS RESTARTS AGE kfk kafka 0 1 1 Running 0 3h52m kfk kafka 1 1 1 Running 0 3h50m kfk kafka 2 1 1 Running 0 3h48m kfk zookeeper 0 1 1 Running 0 3h55m kfk zookeeper 1 1 1 Running 0 3h54m kfk zookeeper 2 1 1 Running 0 3h54m                     kafka          testclient yaml  apiVersion  v1 kind  Pod metadata  name  testclient namespace  kafka spec  containers  name  kafka image  confluentinc cp kafka 5 0 1 command  sh  c  exec tail  f  dev null                     kubectl apply  f testclient yaml   kubectl pods  n kafka NAME READY STATUS RESTARTS AGE testclient 1 1 Running 0 3h44m                                 topic    kubectl  n kafka exec testclient    kafka topics   zookeeper kfk zookeeper 2181   topic test1   create   partitions 1   replication factor 1 Created topic  test1        test1    ",
        "objectID": "post/在K8S中部署kafka",
        "date": "2020-03-17T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "helm",
            "kafka"
        ],
        "keywords": [
            "kubernetes",
            "helm",
            "kafka",
            "zookeeper",
            "logstash",
            "Elasticsearch",
            "Operator"
        ],
        "slug": "install-kafka-in-kubernetes",
        "gitcomment": true,
        "notoc": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200317190406.png",
                "desc": "person standing on a mountain overlooking the ocean"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "在kubernetes 集群上搭建docker 私有仓库Harbor",
        "uri": "post/在kubernetes 上搭建docker 私有仓库Harbor",
        "content": "Harbor          Docker       Registry                                      Docker Distribution          Registry     Harbor                   Registry               Harbor        Registry                   Registry                           Harbor                                       kubernetes            Harbor                    Docker                                      project                        Registry                                                              Docker                AD LDAP      Harbor           AD LDAP                                                                                         RESTful API   RESTful API         Harbor                                                     vSphere   OVA               clone harbor             harbor    kubernetes        kubernetes_deployment md  harbor      python    make kubernetes prepare    kubernetes  ConfigMap           python               python             openssl                            openssl                f         harbor cfg                  k  https          harbor cfg     sslcertkey     c  https           harbor cfg     ssl_cert     s          16                                               make harbor cfg  Harbor          make kubernetes    rc yaml                      rc yaml                     containers  name  nginx app it s importent need modify path image  image  harbor nginx make kubernetes pv  pvc yaml  Persistent Volume Claim                     resources  requests  set value adapt needs storage  100Gi make kubernetes pv  pv yaml  Persistent Volume          pvc yaml  PV   PVC              PVC                PV         capacity  value PVC storage  100Gi                        ConfigMap    python make kubernetes prepare                    make kubernetes jobservice jobservice cm yaml make kubernetes mysql mysql cm yaml make kubernetes nginx nginx cm yaml make kubernetes registry registry cm yaml make kubernetes ui ui cm yaml                                               make kubernetes templates         Harbor       jobservice cm yaml  jobservice       WEB     mysql cm yaml  MySQL  Root      nginx cm yaml  Https     nginx    registry cm yaml  Token       Registry                                storage  filesystem  rootdirectory   storage                         Docker         ui cm yaml  Token       UI  Dashboard       WEB     ui   jobservice   beego        beego                                            namespace kube ops    Harbor    namespace                traefik ingress                     nginx             nginx              make kubernetes     rc yaml    ReplicationController  Deployment   Deployment ReplicationController        apiVersion      apiVersion  extensions v1beta1    sepc    selector         make kubernetes      rc yaml  mysql rc yaml    svc yaml     namespace kube ops         mysql              mysql rc yaml  StatefulSet apiVersion        apps v1beta1             nfs                make kubernetes pv      ops pv yaml      pv         apiVersion  v1 kind  PersistentVolume metadata  name  opspv labels  k8s app  opspv spec  accessModes  ReadWriteMany capacity  storage  100Gi persistentVolumeReclaimPolicy  Retain nfs  path   ops data server  192 168 1 139          nfs           apiVersion  v1 kind  PersistentVolumeClaim metadata  name  opspvc namespace  kube ops labels  k8s app  opspvc spec  accessModes  ReadWriteMany resources  requests  storage  100Gi selector  matchLabels  k8s app  opspv             pv pvc       rc yaml     claimName      opspvc      volumeMounts       subPath               volumeMounts  name  logs mountPath   var log jobs subPath  harbor logs volumes  name  logs persistentVolumeClaim  claimName  opspvc           Harbor realse                            harbor   tgz          docker                docker load  i harbor   tgz            POD                                                         vmware docker            adminserver     clone     make kubernetes template    adminserver cm yaml             github                        github                       ConfigMap                  Harbor   create pv   pvc   kubectl apply  f make kubernetes pv ops pv yaml create config map   kubectl apply  f make kubernetes adminserver adminserver cm yaml   kubectl apply  f make kubernetes jobservice jobservice cm yaml   kubectl apply  f make kubernetes mysql mysql cm yaml   kubectl apply  f make kubernetes registry registry cm yaml   kubectl apply  f make kubernetes ui ui cm yaml create service   kubectl apply  f make kubernetes adminserver adminserver svc yaml   kubectl apply  f make kubernetes jobservice jobservice svc yaml   kubectl apply  f make kubernetes mysql mysql svc yaml   kubectl apply  f make kubernetes registry registry svc yaml   kubectl apply  f make kubernetes ui ui svc yaml create k8s deployment statefulset   kubectl apply  f make kubernetes adminserver adminserver rc yaml   kubectl apply  f make kubernetes registry registry rc yaml   kubectl apply  f make kubernetes mysql mysql rc yaml   kubectl apply  f make kubernetes jobservice jobservice rc yaml   kubectl apply  f make kubernetes u",
        "objectID": "post/在kubernetes 上搭建docker 私有仓库Harbor",
        "date": "2017-11-20T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "docker",
            "Harbor"
        ],
        "keywords": [
            "kubernetes",
            "docker",
            "Harbor",
            "私有仓库"
        ],
        "slug": "install-docker-registry-harbor-in-kubernetes",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/23595852_383101912103802_7062153744867131392_n.jpg",
                "desc": "it’s the season for rainy days and yellow ginkgo leaves. "
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "在 Windows 下使用 WSL2 搭建 Kubernetes 集群",
        "uri": "post/在Windows下使用WSL2搭建k8s集群",
        "content": "Windows10     WSL2   KinD       Kubernetes          Kubernetes                                Kubernetes              Kubernetes                                    Kubernetes                     Kubernetes          Linux                                Windows           Windows      Linux             WSL  Windows Subsystem Linux              Windows     Linux        Windows   Linux                     WSL2               WSL2     Docker                     WSL2      Kubernetes               Windows10           WSL2    Kubernetes        WSL2               Linux   Windows                Windows     Linux              PowerShell            dism exe  online  enable feature  featurename Microsoft Windows Subsystem Linux  all  norestart          WSL1                         Linux               WSL2                                    WSL2              Windows 10             2004       19041            Windows       R      Windows         winver              Windows          ver               19041         Windows          Windows                     https   www microsoft com zh cn software download windows10                  WSL 2                              PowerShell            dism exe  online  enable feature  featurename VirtualMachinePlatform  all  norestart             WSL        WSL2                               BIOS         WSL2              Linux         Powershell            WSL 2          wsl   set default version 2      Linux        Microsoft Store    Terminal    Windows Terminal       WSL           Ubuntu                   Ubuntu                                   Ubuntu                      Windows Terminal     Ubuntu       Windows Terminal     Ubuntu           Ubuntu                                       root                  root          passwd     root                Linux       Ubuntu               root k8s    cp  etc apt sources list  etc apt sources list bak root k8s    echo  deb http   mirrors aliyun com ubuntu  focal main restricted deb http   mirrors aliyun com ubuntu  focal updates main restricted deb http   mirrors aliyun com ubuntu  focal universe deb http   mirrors aliyun com ubuntu  focal updates universe deb http   mirrors aliyun com ubuntu  focal multiverse deb http   mirrors aliyun com ubuntu  focal updates multiverse deb http   mirrors aliyun com ubuntu  focal backports main restricted universe multiverse deb http   mirrors aliyun com ubuntu  focal security main restricted deb http   mirrors aliyun com ubuntu  focal security universe deb http   mirrors aliyun com ubuntu  focal security multiverse     etc apt sources list root k8s             root k8s    apt update    apt upgrade  y                         zsh     zsh root k8s    apt get install zsh oh my zsh        zsh        Github                                   root k8s    sh  c    curl  fsSL https   raw githubusercontent com ohmyzsh ohmyzsh master tools install sh     zsh syntax higlighting        root k8s    git clone https   github com zsh users zsh syntax highlighting git     plugins      root k8s    mv zsh syntax highlighting  ZSH_CUSTOM plugins        root k8s    cd   root k8s    vim  zshrc    plugins       zsh syntax highlighting    plugins  git sh syntax highlighting          root k8s    source  ZSH_CUSTOM plugins zsh syntax highlighting zsh syntax highlighting zsh      root k8s    source    zshrc        Terminal                Systemd         WSL       systemd                                      https   forum snapcraft io t running snaps on wsl2 insiders only for now 13033          SystemD           Systemd          apt install  yqq fontconfig daemonize                  Create starting script SystemD vi  etc profile d 00 wsl2 systemd sh SYSTEMD_PID   ps  ef   grep   lib systemd systemd   system unit basic target     grep  v unshare   awk   print  2       z   SYSTEMD_PID     sudo  usr bin daemonize  usr bin unshare   fork   pid   mount proc  lib systemd systemd   system unit basic target SYSTEMD_PID   ps  ef   grep   lib systemd systemd   system unit basic target     grep  v unshare   awk   print  2    fi    n   SYSTEMDPID           SYSTEMDPID      1     exec sudo  usr bin nsenter  t  SYSTEMD_PID  a su    LOGNAME fi           etc profile d                        session                   WSL2            Docker               WSL      Docker        Linux                 Docker            WSL2    Docker                 Docker Desktop WSL2 backend          Docker Desktop Windows                        WSL2       Use WSL 2 based engine        WSL      docker                  Resources         WSL2        Docker         Ubuntu 20 04         Docker Windows             WSL      docker          Docker   WSL2                    Kubernetes        Kubernetes    Kubernetes                    minikube microk8s             KinD         Kubernetes                 KinD         https   kind sigs k8s io docs user quick start            KinD       curl  Lo   kind https   github com kubernetes sigs kind releases download v0 8 1 kind   uname  amd64          chmod  x   kind     PATH      mv   kind  usr local bin  TODO          kubectl       KinD              ",
        "objectID": "post/在Windows下使用WSL2搭建k8s集群",
        "date": "2020-06-10T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "wsl",
            "kind"
        ],
        "slug": "deploy-k8s-on-win-use-wsl2",
        "keywords": [
            "kubernetes",
            "windows",
            "wsl",
            "kind",
            "minikube"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/0_ELInjYSqoY9iKX1W.jpeg",
                "desc": "Windows WSL2"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "在命令行终端中可视化 Kubernetes",
        "uri": "post/在命令行终端中可视化K8S",
        "content": "Kui       GUI              Kui   ASCII                      Kui                                 Kui   Kubernetes                    Kui        Kui      https   github com IBM kui blob master docs installation md                       Mac               https   macos tarball kui shell org                      Kui app                   Mac            Applications                                       curl  sL https   raw githubusercontent com IBM kui master tools install sh   sh         Kui           kubeconfig              Kui         Kubernetes                      Kui          k     kubectl                kubectl                        K8S                                                                                                                              Kui                   kubectl                     Kui",
        "objectID": "post/在命令行终端中可视化K8S",
        "date": "2020-03-12T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "kui"
        ],
        "keywords": [
            "kubernetes",
            "terminal",
            "终端",
            "可视化",
            "kui",
            "krew"
        ],
        "slug": "navigate-k8s-with-kui",
        "gitcomment": true,
        "draft": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1564760055775-d63b17a55c44.jpeg",
                "desc": "https://unsplash.com/photos/j4ocWYAP_cs"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Kubernetes Helm 安装 Drone",
        "uri": "post/基于 Drone 的 CICD(一)",
        "content": "CI CD   devops                       CI CD              CI CD                       Jenkins  gitlab ci          CI CD                                            CI CD      Drone       Drone   Kubernetes               Drone                    Kubernetes            Helm   Kubernetes        Drone           K8S       Drone                     Drone                                Drone 1 2 Kubectl   Kubernetes v1 14 2 Helm CLI   Tiller  v2 14 1 Docker  18 09 1 Golang  1 11 4 Drone Drone    Go         Docker          CI CD         SaaS                Drone       YAML            Docker        Pipeline Drone          Server                Secrets    Webhook        Agent                   Pipeline      Server   Agent                  10 15MB                             Raspberry PI         Drone                 Drone    GitHub GitLab Gogs                        Kubernetes               Helm    Drone     Kubernetes           Kubernetes                   Kubernetes                  Helm                    Helm            Helm                       Helm Chart          Chart   https   github com helm charts tree master stable drone                Drone                                  GitHub   Drone           GitHub         OAuth         GitHub     https   github com settings applications new                      Drone   ClientID   ClientSecret                 drone values yaml          values yaml    values       Drone       ingress  enabled  true annotations  kubernetes io ingress class  nginx kubernetes io tls acme   true  hosts  drone qikqiak com tls  secretName  drone tls hosts  drone qikqiak com sourceControl  provider  github github  clientID       ClientID  clientSecretKey  clientSecret clientSecretValue       ClientSecret  server  https   github com server  adminUser  cnych   github      Configures drone use kubernetes run pipelines rather agents  enabled will not deploy agents  kubernetes  set true want drone use kubernetes run pipelines enabled  true host  drone qikqiak com              github      drone Service   protocol  https persistence  enabled  true existingClaim  dronepvc      Ingress       Drone            kubernetes io tls acme   true   annotation               Cert Manager           https               Let s Encrypt    Kubernetes Ingress     HTTPS     server adminUser   GitHub                              server kubernetes enabled true         true     Drone              Kubernetes   Job             Drone   agent       true             drone agent          persistence existingClaim       PVC                       dronepvc    PVC    volume yaml   apiVersion  v1 kind  PersistentVolume metadata  name  dronepv spec  capacity  storage  5Gi accessModes  ReadWriteOnce persistentVolumeReclaimPolicy  Retain nfs  server  10 151 30 11 path   data k8s kind  PersistentVolumeClaim apiVersion  v1 metadata  name  dronepvc namespace  kube ops spec  accessModes  ReadWriteOnce resources  requests  storage  5Gi            values       Drone    kubectl apply  f volume yaml   helm repo update   helm install   name drone     namespace kube ops    f drone values yaml   stable drone Release  drone  installed  Happy Helming  LAST DEPLOYED  Mon Aug 5 23 35 22 2019 NAMESPACE  kube ops STATUS  DEPLOYED RESOURCES    v1 ServiceAccount NAME SECRETS AGE drone drone pipeline 1 18d drone drone 1 18d   v1 RoleBinding NAME AGE drone drone 18d   v1beta1 Deployment NAME DESIRED CURRENT UP TO DATE AVAILABLE AGE drone drone server 1 1 1 0 18d   v1beta1 Ingress NAME HOSTS ADDRESS PORTS AGE drone drone drone qikqiak com 80  443 18d   v1 Pod related  NAME READY STATUS RESTARTS AGE drone drone server 6f66b47dc 69qmf 0 1 ContainerCreating 0 0s   v1 Secret NAME TYPE DATA AGE drone drone source control Opaque 1 18d drone drone Opaque 1 18d   v1 ClusterRole NAME AGE drone drone pipeline 18d   v1 ClusterRoleBinding NAME AGE drone drone pipeline 18d   v1 Role NAME AGE drone drone 18d   v1 Service NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE drone drone ClusterIP 10 105 20 182 80 TCP 18d NOTES    PLEASE PATIENT  drone may few minutes install   outside cluster  server URL s  are  http   drone qikqiak com             Drone Chart    drone 2 0 5                                   Pod       kubectl pods  n kube ops  l app drone NAME READY STATUS RESTARTS AGE drone drone server 6f66b47dc 69qmf 1 1 Running 0 96s             drone qikqiak com     DNS                       nginx ingress Pod                             drone        etc hosts                   drone qikqiak com             GitHub              GitHub          Drone                       ACTIVATE                                 Helm       Drone                 Drone   Pipeline     CI CD",
        "objectID": "post/基于 Drone 的 CICD(一)",
        "subtitle": "基于 Drone 的 CI/CD（一）",
        "date": "2019-08-05T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "devops",
            "drone",
            "CI",
            "CD",
            "github",
            "helm"
        ],
        "keywords": [
            "kubernetes",
            "devops",
            "drone",
            "CI",
            "CD",
            "github",
            "动态",
            "helm"
        ],
        "slug": "drone-with-k8s-1",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1564760055775-d63b17a55c44.jpeg",
                "desc": "https://unsplash.com/photos/j4ocWYAP_cs"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Drone 结合 Helm 部署 Kubernetes 应用",
        "uri": "post/基于 Drone 的 CICD(三)",
        "content": "Drone                          Kubernetes       Helm       Drone     cert manager   Drone         HTTPS                 Drone     Pipeline        Docker              Helm Chart        Drone Pipeline               Kubernetes          Helm                           Helm      Helm Chart       https   github com cnych drone k8s demo          Helm Chart      helm create drone k8s demo Creating drone k8s demo   mv drone k8s demo helm           helm   Helm Chart             helm create           chart                 charts             chart       templates            chart               values yaml          Kubernetes        Charts yaml    Chart      Meta    values yaml    Chart       values                      tree       Dockerfile     README md     go mod     go sum     helm       Chart yaml       charts       templates         NOTES txt         _helpers tpl         deployment yaml         ingress yaml         service yaml       values yaml     main go 6 directories  19 files                        values yaml   templates                      helm create        chart                      metadata              metadata  name     include  drone k8s demo fullname       labels  app     include  drone k8s demo name       chart     include  drone k8s demo chart       release      Release Name    heritage      Release Service                                         Chart             Values             values yaml      replicaCount  1 image  repository  nginx tag  stable pullPolicy  IfNotPresent nameOverride     fullnameOverride     service  type  ClusterIP port  80 ingress  enabled  false annotations     path    hosts  chart example local tls       secretName  chart example tls hosts    chart example local resources     nodeSelector     tolerations     affinity          values                                                   image                      Drone Pipeline               image  repository  cnych drone k8s demo tag  latest pullPolicy  Always        pullPolicy     Always             latest                                      Web           health                                deployment yaml          liveness probe   rediness probe                     health       livenessProbe  httpGet  path   health port  http readinessProbe  httpGet  path   health port  http        health           200         Kubernetes               liveness probe           Pod readiness probe          Pod   Service   Endpoints          Service              Pod                 8080               Deployment           ports  name  http containerPort  8080 protocol  TCP                                  helm install   dry run   debug                             helm install   dry run   debug   name staging   namespace kube ops helm   debug  Created tunnel using local port   64832   debug  SERVER   127 0 0 1 64832         Source  drone k8s demo templates deployment yaml apiVersion  apps v1beta2 kind  Deployment metadata  name  staging drone k8s demo labels  app  drone k8s demo chart  drone k8s demo 0 1 0 release  staging heritage  Tiller spec  replicas  1 selector  matchLabels  app  drone k8s demo release  staging template  metadata  labels  app  drone k8s demo release  staging spec  containers  name  drone k8s demo image   cnych drone k8s demo latest  imagePullPolicy  Always ports  name  http containerPort  8080 protocol  TCP livenessProbe  httpGet  path   health port  http readinessProbe  httpGet  path   health port  http resources            values yaml               Deployment                                                   Service yaml     apiVersion  v1 kind  Service metadata  name     include  drone k8s demo fullname       labels  app     include  drone k8s demo name       chart     include  drone k8s demo chart       release      Release Name    heritage      Release Service    spec  type      Values service type    ports  port      Values service port    targetPort  http protocol  TCP name  http selector  app     include  drone k8s demo name       release      Release Name                             ports     targetPort   http                      Pod                 Service     targetPort               8080       http       Pod               selector       Pod       label                 Ingress                  Ingress          Values ingress enabled                end                values     ingress enabled true      Ingress            helm         my values yaml             values     image  repository  cnych drone k8s demo tag  latest pullPolicy  Always ingress  enabled  true annotations  kubernetes io ingress class  nginx path    hosts  drone k8s demo local resources  limits  cpu  50m memory  128Mi requests  cpu  50m memory  128Mi                             helm install   dry run   debug   name staging   namespace kube ops  f helm my values yaml helm        Chart         Pipeline                Pipeline                    Chart         Drone Pipeline                            Helm                    helm               Kubernetes                          helm                                            Drone                   Drone        ",
        "objectID": "post/基于 Drone 的 CICD(三)",
        "subtitle": "基于 Drone 的 CI/CD（三）",
        "date": "2019-08-07T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "devops",
            "drone",
            "CI",
            "CD",
            "github",
            "helm"
        ],
        "keywords": [
            "kubernetes",
            "devops",
            "drone",
            "CI",
            "CD",
            "github",
            "动态",
            "helm"
        ],
        "slug": "drone-with-k8s-3",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1551949730-c0b55d675af1.jpeg",
                "desc": "Here we go for a photo, above the clouds."
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "使用 Drone Pipeline 构建 Docker 镜像",
        "uri": "post/基于 Drone 的 CICD(二)",
        "content": "Drone                          Kubernetes       Helm       Drone     cert manager   Drone         HTTPS               Golang       Drone   Pipeline        Docker     Go           Go        web    gin         web      GitHub         drone k8s demo       Clone          main go           package main import    net http   github com gin gonic gin   github com sirupsen logrus    func main     r    gin Default   r GET   health   func c  gin Context    c JSON http StatusOK  gin H    health   true        err    r Run   8080    err    nil   logrus WithError err  Fatal  Couldn t listen              8080             health           JSON                     go1 11 4           Go Modules                    mod init    go mod init dronek8s      Go Modules                      Go Modules                   GitHub     https   github com cnych drone k8s demo Docker                  Docker       Dockerfile                                   Dockerfile              Drone   Pipeline                        Dockerfile          alpine WORKDIR  home   alpine      RUN sed  i  s dl cdn alpinelinux org mirrors ustc edu cn g   etc apk repositories      apk update      apk upgrade      apk add ca certificates    update ca certificates      apk add   update tzdata      rm  rf  var cache apk   COPY demo app  home  ENV TZ Asia Shanghai EXPOSE 8080 ENTRYPOINT   demo app              demo app                                        demo app              go build       CGO_ENABLED 0 GOOS linux GOARCH amd64 go build  o demo app   ls Dockerfile README md demo app go mod go sum main go                 Docker        docker build  t cnych drone k8s demo       Successfully built 85a88c8e944a   docker images cnych drone k8s demo latest 85a88c8e944a 43 hours ago 31 1MB        Golang       Docker                       docker run   rm   name drone k8s demo  p 8080 8080 cnych drone k8s demo  GIN debug   WARNING  Creating Engine instance Logger Recovery middleware already attached   GIN debug   WARNING  Running  debug  mode  Switch  release  mode production  using env  export GIN_MODE release using code  gin SetMode gin ReleaseMode   GIN debug   health     main main func1  3 handlers   GIN debug  Listening serving HTTP 127 0 0 1 8080    health       curl http   127 0 0 1 8080 health   health  true             Docker          Pipeline               Golang       Docker                       Drone                  Drone                           Drone        Travis CI GitLab CI                          drone yml                           Pipeline       kind  pipeline name  default steps  name  linter image  golang latest environment  GOPROXY  https   mirrors aliyun com goproxy  commands  go  u github com golangci golangci lint cmd golangci lint golangci lint run name  build image  golang latest environment  GOPROXY  https   mirrors aliyun com goproxy  commands  CGO_ENABLED 0 go build  o demo app name  docker image  plugins docker settings  repo  cnych drone k8s demo use_cache  true username  fromsecret  dockerusername password  fromsecret  dockerpassword tags  latest when  event  push branch  master         pipeline        3    linter build docker                                                     linter   build      golang latest           build                go build        docker        plugins docker                 Dockerfile         tag                      username   password              secret     username fromsecret dockerusername password fromsecret dockerpassword     secret        drone cli             Drone                  GitHub     Drone                    Pipeline         Secret          Drone Pipeline                   drone yml      GitHub                     Drone             Pipeline                                                 Drone      Kubernetes              Agent     Drone                    Job          kubectl job  n kube ops NAME COMPLETIONS DURATION AGE        drone job 26 lo6kxn8f4dde6t8n5 1 1 7m1s 22h drone job 27 aibtb6jahfq8dg88t 1 1 6m14s 11m drone job 28 lgwtvdybpxwwgxwxl 0 1 12s 12s   kubectl pods  n kube ops        drone job 28 lgwtvdybpxwwgxwxl hs28f 1 1 Running 0 2m3s drone job 26 lo6kxn8f4dde6t8n5 bbw8t 0 1 Completed 0 22h drone job 27 aibtb6jahfq8dg88t qkmn5 0 1 Completed 0 12m Job   Drone                 Pod         Completed                          Job                       Job              APIServer     TTLAfterFinished    Feature Gates                    Drone Pipeline              Docker          DockerHub                   Helm        Kubernetes",
        "objectID": "post/基于 Drone 的 CICD(二)",
        "subtitle": "基于 Drone 的 CI/CD（二）",
        "date": "2019-08-06T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "devops",
            "drone",
            "CI",
            "CD",
            "github",
            "helm"
        ],
        "keywords": [
            "kubernetes",
            "devops",
            "drone",
            "CI",
            "CD",
            "github",
            "动态",
            "helm"
        ],
        "slug": "drone-with-k8s-2",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1565010505255-cd05a670b436.jpeg",
                "desc": "Drone Shot of a bridge over a river"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "基于 kubernetes 的动态 jenkins slave",
        "uri": "post/基于 jenkins 的 CICD(一)",
        "content": "Kubernetes                                                          CI CD                            Kubernete CI CD              Jenkins Gitlab CI     drone                  Jenkins  CI CD                              Jenkins                 Jenkins                     Jenkins                             Kubernetes  CI CD           Jenkins     Kubernetes           Deployment  jenkins2 yaml  apiVersion  extensions v1beta1 kind  Deployment metadata  name  jenkins2 namespace  kube ops spec  template  metadata  labels  app  jenkins2 spec  terminationGracePeriodSeconds  10 serviceAccountName  jenkins2 containers  name  jenkins image  jenkins jenkins lts imagePullPolicy  IfNotPresent ports  containerPort  8080 name  web protocol  TCP containerPort  50000 name  agent protocol  TCP resources  limits  cpu  1000m memory  1Gi requests  cpu  500m memory  512Mi livenessProbe  httpGet  path   login port  8080 initialDelaySeconds  60 timeoutSeconds  5 failureThreshold  12 readinessProbe  httpGet  path   login port  8080 initialDelaySeconds  60 timeoutSeconds  5 failureThreshold  12 volumeMounts  name  jenkinshome subPath  jenkins2 mountPath   var jenkins_home securityContext  fsGroup  1000 volumes  name  jenkinshome persistentVolumeClaim  claimName  opspvc apiVersion  v1 kind  Service metadata  name  jenkins2 namespace  kube ops labels  app  jenkins2 spec  selector  app  jenkins2 type  NodePort ports  name  web port  8080 targetPort  web nodePort  30002 name  agent port  50000 targetPort  agent                              kube ops   namespace                 namespace    kubectl create namespace kube ops            jenkins jenkins lts        jenkins     Docker                                                                   https   github com jenkinsci docker                                    var jenkins_home            opspvc   PVC                        PVC                   StorageClass          pvc yaml  apiVersion  v1 kind  PersistentVolume metadata  name  opspv spec  capacity  storage  20Gi accessModes  ReadWriteMany persistentVolumeReclaimPolicy  Delete nfs  server  10 151 30 57 path   data k8s kind  PersistentVolumeClaim apiVersion  v1 metadata  name  opspvc namespace  kube ops spec  accessModes  ReadWriteMany resources  requests  storage  20Gi         PVC       kubectl create  f pvc yaml                       serviceAccount jenkins2         jenkins                   serviceAccount                  sa      cluster admin                             rbac yaml  apiVersion  v1 kind  ServiceAccount metadata  name  jenkins2 namespace  kube ops kind  ClusterRole apiVersion  rbac authorization k8s io v1beta1 metadata  name  jenkins2 rules  apiGroups    extensions    apps   resources    deployments   verbs    create    delete    get    list    watch    patch    update   apiGroups       resources    services   verbs    create    delete    get    list    watch    patch    update   apiGroups       resources    pods   verbs    create   delete   get   list   patch   update   watch   apiGroups       resources    pods exec   verbs    create   delete   get   list   patch   update   watch   apiGroups       resources    pods log   verbs    get   list   watch   apiGroups       resources    secrets   verbs    get   apiVersion  rbac authorization k8s io v1beta1 kind  ClusterRoleBinding metadata  name  jenkins2 roleRef  apiGroup  rbac authorization k8s io kind  ClusterRole name  jenkins2 subjects  kind  ServiceAccount name  jenkins2 namespace  kube ops    rbac            kubectl create  f rbac yaml serviceaccount  jenkins2  created role rbac authorization k8s io  jenkins2  created rolebinding rbac authorization k8s io  jenkins2  created                   NodePort        Jenkins   web       30002             agent               Jenkins   master   slave                              Jenkins       kubectl create  f jenkins2 yaml deployment extensions  jenkins2  created service  jenkins2  created                               Pod        kubectl pods  n kube ops NAME READY STATUS RESTARTS AGE jenkins2 7f5494cd44 pqpzs 0 1 Running 0 2m       Pod    Running       READY    0       describe         Pod          kubectl describe pod jenkins2 7f5494cd44 pqpzs  n kube ops     Normal Created 3m kubelet  node01 Created container Normal Started 3m kubelet  node01 Started container Warning Unhealthy 1m  x10 2m  kubelet  node01 Liveness probe failed  http   10 244 1 165 8080 login  dial tcp 10 244 1 165 8080  getsockopt  connection refused Warning Unhealthy 1m  x10 2m  kubelet  node01 Readiness probe failed  http   10 244 1 165 8080 login  dial tcp 10 244 1 165 8080  getsockopt  connection refused         Warning                                          kubectl logs  f jenkins2 7f5494cd44 pqpzs  n kube ops touch  cannot touch   var jenkinshome copyreference_file log   Permission denied not write  var jenkinshome copyreference_file log  Wrong volume permissions                             jenkins   home                        jenkins            PVC     nfs                root                                   nfs                            chown  R 1000  data k8s jenki",
        "objectID": "post/基于 jenkins 的 CICD(一)",
        "subtitle": "基于 Jenkins 的 CI/CD(一)",
        "date": "2018-07-28T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "devops",
            "jenkins",
            "slave",
            "CI",
            "CD",
            "gitlab"
        ],
        "keywords": [
            "kubernetes",
            "devops",
            "jenkins",
            "slave",
            "CI",
            "CD",
            "gitlab",
            "动态"
        ],
        "slug": "kubernetes-jenkins1",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1532154984646-37dc46508066.jpeg",
                "desc": "Rainbow after the Hailstorm"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Jenkins Blue Ocean 的使用",
        "uri": "post/基于 jenkins 的 CICD(三)",
        "content": "Jenkins Pipeline        Kubernetes                                                                               CI CD                           Jenkins                     Jenkins     Jenkinsfile                              Jenkins Web UI                                Jenkinsfile                             git        dev         main go                                     k8s yaml                            https   github com cnych jenkins demo tree dev         Jenkinsfile                                 Jenkinsfile  node  haimaxy jnlp     stage  Prepare     echo  1 Prepare Stage  checkout scm script   build_tag   sh returnStdout  true  script   git rev parse   short HEAD   trim    env BRANCH_NAME     master     buildtag      env BRANCHNAME    build_tag         stage  Test     echo  2 Test Stage    stage  Build     echo  3 Build Docker Image Stage  sh  docker build  t cnych jenkins demo   build_tag       stage  Push     echo  4 Push Docker Image Stage  withCredentials  usernamePassword credentialsId   dockerHub   passwordVariable   dockerHubPassword   usernameVariable   dockerHubUser       sh  docker login  u   dockerHubUser   p   dockerHubPassword   sh  docker push cnych jenkins demo   build_tag       stage  Deploy     echo  5  Deploy Stage   env BRANCH_NAME     master     input                 sh  sed  i  s    build_tag    k8s yaml  sh  sed  i  s    env BRANCH_NAME    k8s yaml  sh  kubectl apply  f k8s yaml   record                checkout scm                                tag           master                               master                                      k8s yaml                      dev     github      BlueOcean        BlueOcean           CI CD     BlueOcean   Jenkins                Jenkins Pipeline         UI            fressstyle     job BlueOcean                 CD Pipeline                  Pipeline          Pipeline          Pipeline                 BlueOcean     Pipeline                                        GitHub    Bitbucket                             BlueOcean          Jenkins           Docker                      Jenkins       BlueOcean       Jenkins Web UI          Manage Jenkins    Manage Plugins    Available         BlueOcean                     Blue Ocean                 Pipeline   Job            Blue Ocean          Pipeline             Git GitHub                 Pipeline              Jenkins Web UI            Open Blue Ocean                         Pipeline     Blue Ocean       Create new pipeline                     Pipeline            Git Bitbucket GitHub        GitHub                GitHub       token   GitHub          Personal access token         token          Pipeline                                                jenkins demo           Pipeline     Blue Ocean                        Jenkinsfile          Pipeline         master   dev                 Jenkinsfile                 Pipeline                        master                dev             dev    pipeline                                                        Push                 jenkins demo_dev I2WMFUIFQCIFGRPNHN3HU7IZIMHEQMHWPUN2TP6DCYSWHFFFFHOA  Running shell script docker push    jenkins demo dev ee90aa5 push refers repository  docker io    jenkins demo                   Docker     Tag  dev ee90aa5         Jenkinsfile                k8s yaml               BRANCH_NAME    Jenkinsfile                 dev      push   Github           Jenkins Blue Ocean                                                      kubectl pods NAME READY STATUS RESTARTS AGE     jenkins demo 648876568d q5mbx 0 1 Completed 3 57s       kubectl logs jenkins demo 648876568d q5mbx Hello  Kubernetes I m Jenkins CI  BRANCH  dev             BRANCH  dev          CI CD              dev          master                   jenkins demo  dev  git status branch dev nothing commit  working directory clean   jenkins demo  dev  git checkout master Switched branch  master  branch up to date  origin master     jenkins demo  master  git merge dev Updating 50e0401  ee90aa5 Fast forward Jenkinsfile   29                               k8s yaml   3     main go   2    3 files changed  14 insertions     20 deletions      jenkins demo  master  git push origin master Total 0  delta 0   reused 0  delta 0  git github com cnych jenkins demo git 50e0401  ee90aa5 master    master        Jenkins   Blue Ocean            master                             Push               jenkins demo_master XA3VZ5LP4XTCFAHHXIN3G5ZB4XA4J5H6I4DNKOH6JAXZXARF7LYQ  Running shell script docker push    jenkins demo ee90aa5                    TAG   ee90aa5                   Jenkinsfile                     Deploy                                                     master                            Proceed                         Kubernetes                kubectl pods NAME READY STATUS RESTARTS AGE     jenkins demo c69dc6fdf 6ssjf 0 1 Completed 5 4m       kubectl logs jenkins demo c69dc6fdf 6ssjf Hello  Kubernetes I m Jenkins CI  BRANCH  master                  master                                    CI CD                             CI CD                                            Helm Gitlab                Pipe",
        "objectID": "post/基于 jenkins 的 CICD(三)",
        "subtitle": "基于 Jenkins 的 CI/CD(三)",
        "date": "2018-08-02T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "devops",
            "jenkins",
            "blueocean",
            "CI",
            "CD",
            "github",
            "pipeline"
        ],
        "keywords": [
            "kubernetes",
            "devops",
            "jenkins",
            "blueocean",
            "CI",
            "CD",
            "pipeline"
        ],
        "slug": "kubernetes-jenkins3",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1533151027763-09535debae4a.jpeg",
                "desc": "Durdle Door Holiday Park"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Jenkins Pipeline 部署 Kubernetes 应用(二)",
        "uri": "post/基于 jenkins 的 CICD(二)",
        "content": "Kubernetes       Jenkins Slave                     Jenkins        Kubernetes     Jenkins Pipeline         Jenkins                            Pipeline      Pipeline              Jenkins                                                           Jenkins Pipeline          Node       Node      Jenkins    Master    Agent     Step                     Jenkins Slave      Node    Stage       Pipeline          Stage    Stage           Build Test Deploy Stage                  Node Step    Step                             Docker        Jenkins           sh  make           shell                      Jenkins Pipline    Pipeline      Groovy                    Groovy          Pipeline        Declarative       Scripted Pipeline        Pipeline                Jenkins   Web UI                   Jenkinsfile                       Jenkins           SCMD       Jenkinsfile Pipeline              Pipeline                   Pipeline     Jenkins   Web UI               Job   Web UI     New Item         pipeline demo          Pipeline       OK          Pipeline        Script            node   stage  Clone     echo  1 Clone Stage    stage  Test     echo  2 Test Stage    stage  Build     echo  3 Build Stage    stage  Deploy     echo  4  Deploy Stage                 Build Now      Job                           Console Output                           Pipeline     4                                 Pipeline                         Pipeline Syntax              Pipeline                         Slave                    Pipeline                     Jenkins   Slave                  Slave                Slave Pod              label                label             Pipeline      node      label        node  haimaxy jnlp     stage  Clone     echo  1 Clone Stage    stage  Test     echo  2 Test Stage    stage  Build     echo  3 Build Stage    stage  Deploy     echo  4  Deploy Stage              node       haimaxy jnlp      label                kubernetes      Pod    kubectl pods  n kube ops NAME READY STATUS RESTARTS AGE jenkins 7c85b6f4bd rfqgv 1 1 Running 4 6d               kubectl pods  n kube ops NAME READY STATUS RESTARTS AGE jenkins 7c85b6f4bd rfqgv 1 1 Running 4 6d jnlp 0hrrz 1 1 Running 0 23s           jnlp 0hrrz  Pod             Pod         kubectl pods  n kube ops NAME READY STATUS RESTARTS AGE jenkins 7c85b6f4bd rfqgv 1 1 Running 4 6d         Job            Jenkins   Web UI       Console Output                                      Pod                 Job                     Stage View        Kubernetes                 Jenkins Slave                     Kubernetes          Kubernetes                                                    Dockerfile      Docker       Docker          Kubernetes YAML       YAML     Docker    TAG    kubectl              Kubernetes                                              Jenkins                          YAML      CI           CD                            Pipeline              node  haimaxy jnlp     stage  Clone     echo  1 Clone Stage    stage  Test     echo  2 Test Stage    stage  Build     echo  3 Build Docker Image Stage    stage  Push     echo  4 Push Docker Image Stage    stage  YAML     echo  5  Change YAML File Stage    stage  Deploy     echo  6  Deploy Stage                 golang        kubernetes          https   github com cnych jenkins demo                         Pipeline         clone                                           Dockerfile                              Docker                                                YAML        TAG        TAG                    kubectl                     CI CD                                               Clone    stage  Clone     echo  1 Clone Stage  git url   https   github com cnych jenkins demo git                                       stage  Build     echo  3 Build Docker Image Stage  sh  docker build  t cnych jenkins demo   build_tag                         docker build                              Slave Pod             Docker Docker                  Slave     docker build               sh      docker build            tag            tag       latest   tag                                 git commit        tag              tag     git                           tag          stage                              tag                 Clone    stage             stage             stage  Clone     echo  1 Clone Stage  git url   https   github com cnych jenkins demo git  script   build_tag   sh returnStdout  true  script   git rev parse   short HEAD   trim       stage  Build     echo  3 Build Docker Image Stage  sh  docker build  t cnych jenkins demo   build_tag                                                                                         docker hub                        Harbor            Harbor         docker hub                                                           docker hub                                   docker              docker login                         docker push            docker hub                    Pipeline            stage  Push     echo  4 Push Docker Image Stage  sh  docker login  u cnych  p xxxxx  sh  docker push cnych jenkins demo   build_tag     ",
        "objectID": "post/基于 jenkins 的 CICD(二)",
        "subtitle": "基于 Jenkins 的 CI/CD",
        "date": "2018-07-29T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "devops",
            "jenkins",
            "slave",
            "CI",
            "CD",
            "github",
            "pipeline"
        ],
        "keywords": [
            "kubernetes",
            "devops",
            "jenkins",
            "slave",
            "CI",
            "CD",
            "pipeline"
        ],
        "slug": "kubernetes-jenkins2",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1532727296720-528974148542.jpeg",
                "desc": "Blood Moon Eclipse"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "基于 Jenkins 的 DevOps 流水线实践",
        "uri": "post/基于Jenkins的DevOps流水线实践",
        "content": "DevOps      DevOps                                                                                                              DevOps                                                                                                                                                                                                                                 DevOps            Internet                                                                                                                                                          20                                                                         CI CD       Jenkins CI        Continuous Integration  CD        Continuous Delivery       Continuous Deployment                                                                                                      DevOps                 CI CD                                    Jenkins           Jenkins     DevOps                                                                        101                168       299       https   youdianzhishi com web course 1013",
        "objectID": "post/基于Jenkins的DevOps流水线实践",
        "subtitle": "全面掌握基于 Jenkins 的流水线最佳实践方式",
        "date": "2020-01-13T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "jenkins",
            "devops",
            "课程"
        ],
        "keywords": [
            "kubernetes",
            "课程",
            "优惠",
            "jenkins",
            "devops",
            "流水线"
        ],
        "slug": "devops-base-on-jenkins",
        "landing": true,
        "gitcomment": true,
        "weight": 2,
        "category": "kubernetes"
    },
    {
        "title": "对 Kubernetes 应用进行自定义指标扩缩容",
        "uri": "post/基于自定义指标扩展Kubernetes应用",
        "content": "Prometheus          HPA                                                                            Kubernetes   Prometheus                                 Kubernetes              1 10 0      Kubernetes                 Helm   Kubectl             Helm Clone                      GitHub   Clone          git clone https   github com cnych k8s prometheus custom scaling git   cd k8s prometheus custom scaling                      Flask      React                  Flask Promethues Exporter                     flask import Flask  render_template prometheusflaskexporter multiprocess import GunicornInternalPrometheusMetrics application   Flask name  staticfolder    public   templatefolder    templates   metrics   GunicornInternalPrometheusMetrics application   application route      def index    return render_template  index html    application route   click button   methods   POST     metrics counter  demoappbutton_clicks    Number button presses user   def web_button    return               docker compose           docker compose  d              localhost 8000                     Web       Hit me                    POST          Promethues                     POST                Prometheus Counter            metrics                        Prometheus                                 curl  s localhost 8000 metrics   grep demoappbutton_clicks HELP demoappbuttonclickstotal Multiprocess metric TYPE demoappbuttonclickstotal counter demoappbuttonclickstotal 0 0 Prometheus Counter                                                               curl  s localhost 8000 metrics   grep demoappbutton_clicks HELP demoappbuttonclickstotal Multiprocess metric TYPE demoappbuttonclickstotal counter demoappbuttonclickstotal 1 0    Prometheus Operator         Prometheus Operator    Operator       Prometheus                       Prometheus         kube ops          Prometheus Operator    helm install stable prometheus operator  f helm values prometheus operator values yml  n prome demo   namespace kube ops LAST DEPLOYED  Fri Sep 27 08 51 40 2019 NAMESPACE  kube ops STATUS  DEPLOYED RESOURCES         NOTES  Prometheus Operator installed  Check its status running  kubectl   namespace kube ops pods  l  release prome demo  Visit https   github com coreos prometheus operator instructions create   configure Alertmanager Prometheus instances using Operator                       Pod        kubectl   namespace kube ops pods  l  release prome demo  NAME READY STATUS RESTARTS AGE prome demo grafana 944f89874 kf8nt 0 2 Init Blocked 0 10m prome demo prometheus node exporter 7xswz 1 1 Running 0 21m prome demo prometheus node exporter jwmwj 1 1 Running 0 21m prome demo prometheus node exporter zl79d 1 1 Running 0 21m prome demo prometheus oper operator 6fd58cc4fd 74jv8 2 2 Running 0 21m           Pod         grafana    Pod       Init Blocked           kubectl describe       Pod          kubectl describe pod prome demo grafana 944f89874 kf8nt  n kube ops Name  prome demo grafana 944f89874 kf8nt Namespace  kube ops Priority  0 PriorityClassName  Node  ydzs node2 10 151 30 23 Start Time  Fri  27 Sep 2019 09 02 42  0800 Labels  app grafana pod template hash 944f89874 release prome demo Annotations  checksum config  062340540c04487760c6487c9c4195fdca5ed6521330d6b842b61f3964fcabe4 checksum dashboards json config  01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b checksum sc dashboard provider config  511400f9e888cb5ae2906a914e06cbdcb1f19904cf150384c0bb9831723bee45 checksum secret  5bf8b81f17dbd08ebd81e7e67fd393d5936aeadf8285480e899cd28a92267890 container apparmor security beta kubernetes io grafana  runtime default container apparmor security beta kubernetes io grafana sc dashboard  runtime default container apparmor security beta kubernetes io grafana sc datasources  runtime default kubernetes io psp  prome demo grafana seccomp security alpha kubernetes io pod  docker default Status  Pending Reason  AppArmor Message  Cannot enforce AppArmor  AppArmor not enabled host IP  Controlled By  ReplicaSet prome demo grafana 944f89874                    Cannot enforce AppArmor  AppArmor not enabled host     Message                 PSP            Helm    Prometheus Operator               PSP       kubectl psp  l release prome demo NAME PRIV CAPS SELINUX RUNASUSER FSGROUP SUPGROUP READONLYROOTFS VOLUMES prome demo grafana false RunAsAny RunAsAny RunAsAny RunAsAny false configMap emptyDir projected secret downwardAPI persistentVolumeClaim prome demo grafana test false RunAsAny RunAsAny RunAsAny RunAsAny false configMap downwardAPI emptyDir projected secret prome demo prometheus node exporter false RunAsAny RunAsAny MustRunAs MustRunAs false configMap emptyDir projected secret downwardAPI persistentVolumeClaim hostPath prome demo prometheus oper operator false RunAsAny RunAsAny MustRunAs MustRunAs false configMap emptyDir projected secret downwardAPI persistentVolumeClaim prome demo prometheus oper prometheus false RunAsAny RunAsAny MustRunAs MustRunAs false configMap emptyDir projected secret downwardAPI persistentVolumeClaim        prome demo grafana    PSP       kubectl edi",
        "objectID": "post/基于自定义指标扩展Kubernetes应用",
        "date": "2019-09-27T00:00:00.000Z",
        "tags": [
            "prometheus",
            "kubernetes",
            "websocket"
        ],
        "keywords": [
            "prometheus",
            "kubernetes",
            "prometheus operator",
            "adapter",
            "扩缩容"
        ],
        "slug": "build-k8s-app-with-custom-metrics",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1569493422961-ee22a2e51a07.jpeg",
                "desc": "https://unsplash.com/photos/H3z8BDFIByU"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "外部服务发现之 ingress(一)",
        "uri": "post/外部服务发现之 ingress(一)",
        "content": "Kubernetes      kube dns                 Kubernetes                               NodePort   LoadBlancer     Service                       Kubernetes                                     ingress             NodePort                                   NodePort                  ingress                  Port     Ingress      kuberenets                               Service          nginx haproxy                           nginx            nginx                          Nginx                         Nginx Pod                     consul                       docker                   Ingress                                                                   Ingress controller      Ingress controller                   kube apiserver             service pod                Ingress controller     Ingress                                       consul consul template                  Ingress controller        traefik nginx controller Kubernetes Ingress Controller Kong HAProxy Ingress controller              Ingress Controller            traefik   nginx controller traefik      nginx controller                          traefik         ingress      Traefik Traefik                                                           Docker Swarm Mesos Marathon  Mesos Kubernetes Consul Etcd Zookeeper BoltDB Rest API             traefik          traefik   Pod              master                  master             traefik                           RBAC         rbac yaml   apiVersion  v1 kind  ServiceAccount metadata  name  traefik ingress controller namespace  kube system kind  ClusterRole apiVersion  rbac authorization k8s io v1beta1 metadata  name  traefik ingress controller rules  apiGroups     resources  services endpoints secrets verbs  list watch apiGroups  extensions resources  ingresses verbs  list watch kind  ClusterRoleBinding apiVersion  rbac authorization k8s io v1beta1 metadata  name  traefik ingress controller roleRef  apiGroup  rbac authorization k8s io kind  ClusterRole name  traefik ingress controller subjects  kind  ServiceAccount name  traefik ingress controller namespace  kube system               kubectl create  f rbac yaml serviceaccount  traefik ingress controller  created clusterrole rbac authorization k8s io  traefik ingress controller  created clusterrolebinding rbac authorization k8s io  traefik ingress controller  created      Deployment     Pod         traefik        traefik yaml  apiVersion  apps v1 kind  Deployment metadata  name  traefik ingress controller namespace  kube system labels  k8s app  traefik ingress lb spec  replicas  1 selector  matchLabels  k8s app  traefik ingress lb template  metadata  labels  k8s app  traefik ingress lb name  traefik ingress lb spec  serviceAccountName  traefik ingress controller terminationGracePeriodSeconds  60 tolerations  operator   Exists  nodeSelector  kubernetes io hostname  master containers  image  traefik v1 7 17 name  traefik ingress lb ports  name  http containerPort  80 name  admin containerPort  8080 args    api   kubernetes   logLevel INFO kind  Service apiVersion  v1 metadata  name  traefik ingress service namespace  kube system spec  selector  k8s app  traefik ingress lb ports  protocol  TCP port  80 name  web protocol  TCP port  8080 name  admin type  NodePort                  kubectl create  f traefik yaml deployment apps  traefik ingress controller  created service  traefik ingress service  created       yaml     tolerations  operator   Exists  nodeSelector  kubernetes io hostname  master               master                 nodeSelector   traefik      master           tolerations                    kubeadm     master                                tolerations                                       nodeSelector   tolerations      Pod                        traefik        web ui          8080                                 NodePort    kubectl pods  n kube system  l k8s app traefik ingress lb  o wide NAME READY STATUS RESTARTS AGE IP NODE traefik ingress controller 57c4f787d9 bfhnl 1 1 Running 0 8m 10 244 0 18 master   kubectl svc  n kube system NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE     traefik ingress service NodePort 10 102 183 112 80 30539 TCP 8080 30486 TCP 8m               masternodeip 30486        traefik   dashboard    Ingress            NodePort     traefik   Dashboard          ingress                 ingress     ingress yaml  apiVersion  extensions v1beta1 kind  Ingress metadata  name  traefik web ui namespace  kube system annotations  kubernetes io ingress class  traefik spec  rules  host  traefik haimaxy com http  paths  backend  serviceName  traefik ingress service servicePort  8080     traefik dashboard       ingress       kubectl create  f ingress yaml ingress extensions  traefik web ui  created        ingress            rules             traefik   dashboard      ingress          serviceName             traefik ingress service          8080                 servicePort               port     admin                             etc hosts      traefik haimaxy com   master      IP                   http   traefik haimaxy com                 dashboard           ",
        "objectID": "post/外部服务发现之 ingress(一)",
        "subtitle": "traefik 的安装使用",
        "date": "2018-08-15T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "ingress",
            "traefik",
            "nginx",
            "haproxy",
            "kong"
        ],
        "keywords": [
            "kubernetes",
            "ingress",
            "traefik",
            "nginx",
            "haproxy",
            "kong"
        ],
        "slug": "ingress-traefik1",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1534181220741-388dc50c711d.jpg",
                "desc": "In the middle of the nowhere"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "外部服务发现之 ingress(二)",
        "uri": "post/外部服务发现之 ingress(二)",
        "content": "traefik          ingress                 ingress tls    path     ingress           TLS                     https                                          CA                                       openssl     CA       openssl req  newkey rsa 2048  nodes  keyout tls key  x509  days 365  out tls crt                 kubectl      secret               kubectl create secret generic traefik cert   from file tls crt   from file tls key  n kube system    Traefik          Traefik               Traefik      https  defaultEntryPoints     http    https    entryPoints   entryPoints http  address     80   entryPoints http redirect  entryPoint    https  entryPoints https  address     443   entryPoints https tls    entryPoints https tls certificates   CertFile     ssl tls crt  KeyFile     ssl tls key                 http   https             http          https              traefik         https       https                           CertFile   KeyFile         traefik pod                                Pod               secret        volume       Pod         traefik toml            traefik pod                   ConfigMap               traefik toml          ConfigMap       traefik pod       kubectl create configmap traefik conf   from file traefik toml  n kube system              traefik pod   yaml      kind  Deployment apiVersion  extensions v1beta1 metadata  name  traefik ingress controller namespace  kube system labels  k8s app  traefik ingress lb spec  replicas  1 selector  matchLabels  k8s app  traefik ingress lb template  metadata  labels  k8s app  traefik ingress lb name  traefik ingress lb spec  serviceAccountName  traefik ingress controller terminationGracePeriodSeconds  60 volumes  name  ssl secret  secretName  traefik cert name  config configMap  name  traefik conf tolerations  operator   Exists  nodeSelector  kubernetes io hostname  master containers  image  traefik name  traefik ingress lb volumeMounts  mountPath    ssl  name   ssl  mountPath    config  name   config  ports  name  http containerPort  80 hostPort  80 name  https containerPort  443 hostPort  443 name  admin containerPort  8080 args    configfile  config traefik toml   api   kubernetes   logLevel INFO              443                 configfile      traefik toml                volume             traefik pod    kubectl apply  f traefik yaml   kubectl logs  f traefik ingress controller 7dcfd9c6df v58k7  n kube system time  2018 08 26T11 26 44Z  level info msg  Server configuration reloaded  80  time  2018 08 26T11 26 44Z  level info msg  Server configuration reloaded  443  time  2018 08 26T11 26 44Z  level info msg  Server configuration reloaded  8080            traefik pod                                      traefik   dashboard      https                                                                                                                       traefik   dashboard       ingress       TLS                             ingress   path              3     web                           backend yaml  kind  Deployment apiVersion  extensions v1beta1 metadata  name  svc1 spec  replicas  1 template  metadata  labels  app  svc1 spec  containers  name  svc1 image  cnych example web service env  name  APP_SVC value  svc1 ports  containerPort  8080 protocol  TCP kind  Deployment apiVersion  extensions v1beta1 metadata  name  svc2 spec  replicas  1 template  metadata  labels  app  svc2 spec  containers  name  svc2 image  cnych example web service env  name  APP_SVC value  svc2 ports  containerPort  8080 protocol  TCP kind  Deployment apiVersion  extensions v1beta1 metadata  name  svc3 spec  replicas  1 template  metadata  labels  app  svc3 spec  containers  name  svc3 image  cnych example web service env  name  APP_SVC value  svc3 ports  containerPort  8080 protocol  TCP kind  Service apiVersion  v1 metadata  labels  app  svc1 name  svc1 spec  type  ClusterIP ports  port  8080 name  http selector  app  svc1 kind  Service apiVersion  v1 metadata  labels  app  svc2 name  svc2 spec  type  ClusterIP ports  port  8080 name  http selector  app  svc2 kind  Service apiVersion  v1 metadata  labels  app  svc3 name  svc3 spec  type  ClusterIP ports  port  8080 name  http selector  app  svc3            3  Deployment     3  Service    kubectl create  f backend yaml deployment extensions  svc1  created deployment extensions  svc2  created deployment extensions  svc3  created service  svc1  created service  svc2  created service  svc3  created          ingress         3     example ingress yaml  apiVersion  extensions v1beta1 kind  Ingress metadata  name  example web app annotations  kubernetes io ingress class   traefik  spec  rules  host  example haimaxy com http  paths  path   s1 backend  serviceName  svc1 servicePort  8080 path   s2 backend  serviceName  svc2 servicePort  8080 path    backend  serviceName  svc3 servicePort  8080           ingress                     path                        ingress       kubectl create  f test ingress yaml ingress extensions  example web app  created   kubectl ingress NAME HOSTS ADDRESS PORTS AGE example web app example haimaxy com 80 1m   kubectl desc",
        "objectID": "post/外部服务发现之 ingress(二)",
        "subtitle": "Ingress TLS 和 PATH 的使用",
        "date": "2018-08-31T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "ingress",
            "traefik",
            "nginx",
            "https"
        ],
        "keywords": [
            "kubernetes",
            "ingress",
            "openssl",
            "traefik",
            "https",
            "nginx"
        ],
        "slug": "ingress-traefik2",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1535565454739-863432ea3c0e.jpeg",
                "desc": "Thunderstorm over Paris"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "360 开源 K8S Dashboard Wayne 的安装使用",
        "uri": "post/奇虎360 开源 Kubernetes Dashboard wayne使用",
        "content": "Kubernetes                 Dashboard          Dashboard              360         Kubernetes Dashboard    Wayne  Wayne           Web   Kubernetes               Kubernetes                                                            Wayne         360                                    360                   DC       Wayne      Wayne               Bruce Wayne                              Angular               Ace      Kubernetes             Beego              Client go   Kubernetes           MySQL           RBAC Role based access control                                                                  k8s           k8s                         Json Yaml     k8s     LDAP OAuth 2 0 DB                LDAP     DB              OAuth2                        Kubernetes                                                                         webhook       APIKey                   APIKey                         APIKey                                                                k8s                                                                        web shell        web shell          Pod                                                     Web UI                      Worker                    audit   webhook           Wayne    MySQL   RabbitMQ    MySQL                    RabbitMQ                               MySQL                  MySQL                    Kubernetes            MySQL                 db yaml  apiVersion  apps v1beta1 kind  Deployment metadata  name  mysql namespace  kube system labels  app  mysql spec  template  metadata  labels  app  mysql spec  containers  name  mysql image  mysql 5 7 14 imagePullPolicy  IfNotPresent ports  containerPort  3306 name  dbport env  name  MYSQLROOTPASSWORD value  rootPassw0rd volumeMounts  name  db mountPath   var lib mysql volumes  name  db emptyDir     apiVersion  v1 kind  Service metadata  name  mysql namespace  kube system spec  selector  app  mysql ports  name  mysqlport protocol  TCP port  3306 targetPort  dbport              root             wayne                                                                    kubec create  f db yaml   kubectl pods  n kube system NAME READY STATUS RESTARTS AGE mysql 6ffcf87ddc 7kkbk 1 1 Running 0 1h          kubectl svc  n kube system NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE mysql ClusterIP 10 106 31 171 3306 TCP 1h                         mysql 3306    MySQL         Wayne    clone Wayne   git       git clone https   github com Qihoo360 wayne     hack kubernetes               Wayne            ls  la hack kubernetes total 24 drwxr xr x 5 ych staff 160 Nov 19 13 40   drwxr xr x 5 ych staff 160 Nov 19 11 33     rw r  r   1 ych staff 339 Nov 19 11 33 configmap yaml  rw r  r   1 ych staff 967 Nov 19 13 40 deployment yaml  rw r  r   1 ych staff 229 Nov 19 11 33 service yaml                kube system                   namespace     kube system                   MySQL            configmap yaml             360       ConfigMap                app conf                    from file       ConfigMap         app conf    appname   wayne httpport   8080 runmode   prod autorender   false copyrequestbody   true EnableDocs   true EnableAdmin   true StaticDir   public static Custom config ShowSql   false enable username password login EnableDBLogin   true token  generate jwt token RsaPrivateKey      apikey rsa private pem  RsaPublicKey      apikey rsa public pem  token end time  second TokenLifeTime 86400 kubernetes labels config AppLabelKey  wayne app NamespaceLabelKey   wayne ns PodAnnotationControllerKindLabelKey   wayne cloud controller kind database configuration  mysql DBName   wayne DBTns   tcp mysql 3306  DBUser   root DBPasswd   rootPassw0rd DBLoc    Asia 2FShanghai  DBConnTTL   30 web shell auth appKey    860af247a91a19b2368d6425797921c6  Set demo namespace group id DemoGroupId   1 DemoNamespaceId   1 Sentry LogLevel   7 SentryEnable   false  SentryDSN      SENTRY_DSN    SentryLogLevel      SENTRY_LOGLEVEL  4   Robin EnableRobin   false api keys EnableApiKeys   false Bus BusEnable   false  BusRabbitMQURL      MQ_URL  amqp   guest guest rabbitmq 5672     Canary Production            metaData   mode   beta       beta    BetaUrl      BETA_URL  https   beta wayne cloud    AppUrl      APP_URL  https   www wayne cloud   oauth2  RedirectUrl      REDIRECT_URL  https   www wayne cloud    auth qihoo  enabled   false client_id   client client_secret   secret auth_url   https   example com oauth2 v1 authorize token_url   https   example com oauth2 v1 token api_url   https   example com oauth2 v1 userinfo ldap config enable ldap login  auth ldap  enabled   false ldap_url   ldap   127 0 0 1 ldapsearchdn    cn admin dc example dc com  ldapsearchpassword   admin ldapbasedn    dc example dc com  ldap_filter   ldap_uid   cn ldap_scope   2 ldapconnectiontimeout   30                          runmode   prod                           DBName   wayne DBTns   tcp mysql 3306  DBUser   root DBPasswd   rootPassw0rd DBLoc    Asia 2FShanghai  DBConnTTL   30  DBTns      mysql                    DBUser    root                             ConfigMap       kubectl create configmap infra wa",
        "objectID": "post/奇虎360 开源 Kubernetes Dashboard wayne使用",
        "date": "2018-11-19T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "wayne"
        ],
        "slug": "kubernetes-dashboard-wayne-usage",
        "keywords": [
            "kubernetes",
            "360",
            "开源",
            "dashboard",
            "wayne"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1542481889-27404a7ec14a.jpeg",
                "desc": "church of St. John of Nepomuk in Ranui, Italy"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "好吧，海马学院正式上线了",
        "uri": "post/好吧，海马学院正式上线了",
        "content": "Sideproject                                      Python                                                                                                                                                                                Web                                                                                                                                                                                                               10                                                                                                                                                                                                                              Python   Golang   Docker   Kubernetes   Devops         Vue   React                                                        Kubernetes 1 9 2             Webpack3 x           Python                        Python      Celery Django              Kubernetes    Python        Vue   Django                                    iEverything                 PC     https   www haimaxy com                              PC                                                                                                                                                                                                             ydzs io       io                                         k8s",
        "objectID": "post/好吧，海马学院正式上线了",
        "subtitle": "一个互联网实战项目学习平台",
        "date": "2018-04-02T00:00:00.000Z",
        "tags": [
            "海马学院",
            "一点知识",
            "上线"
        ],
        "keywords": [
            "海马学院",
            "一点知识",
            "上线",
            "视频教程",
            "实战项目"
        ],
        "slug": "haimaxy-online",
        "toc": true,
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1511376777868-611b54f68947.jpeg",
                "desc": "BEGIN."
            }
        ],
        "category": "一点知识"
    },
    {
        "title": "如何保护对外暴露的 Kubernetes 服务",
        "uri": "post/如何保护对外暴露的Kubernetes服务",
        "content": "Kubernetes                           xpack   Kibana           Jenkins                                      Kubernetes          Ingress                    cert manager       HTTPS                          Basic Auth            Dashboard                          Basic Auth    haproxy nginx   traefik nginx ingress     haproxy nginx                basic auth                    traefik nginx ingress        basic auth            nginx ingress    Jenkins        basic auth                            htpasswd      htpasswd  bc auth admin admin321 Adding password user admin             htpasswd     Secret       kubectl create secret generic jenkins basic auth   from file auth  n kube ops secret  jenkins basic auth  created          Ingress      auth type basic auth jenkins basic auth   annotations  ingress yaml  apiVersion  extensions v1beta1 kind  Ingress metadata  name  jenkins namespace  kube ops annotations  kubernetes io ingress class  nginx      nginx ingress kubernetes io auth type  basic    user password   Secret    nginx ingress kubernetes io auth secret  jenkins basic auth                    nginx ingress kubernetes io auth realm   Authentication Required   admin  spec  rules  host  jenkins qikqiak com http  paths  backend  serviceName  jenkins servicePort  web                kubectl apply  f ingress yaml ingress extensions  jenkins  configured                  Jenkins                         OAuth          Basic Auth                Github Google      OAuth                   OAuth2 Proxy                                                               HTTPS               Let s Encrypt    Kubernetes Ingress     HTTPS       Github  https   github com settings applications new      OAuth                          URL     oauth2 callback                Client ID Client Secret             cookie                 python                Docker             docker run  ti   rm python 3 alpine   python  c  import secrets base64  print base64 b64encode base64 b64encode secrets token_bytes 16       b       OAuth2 Proxy            Helm          helm install   name authproxy     namespace kube system     set config clientID      set config clientSecret      set config cookieSecret      set extraArgs provider github     set extraArgs email domain       stable oauth2 proxy NAME  authproxy LAST DEPLOYED  Sun Apr 14 01 11 50 2019 NAMESPACE  kube system STATUS  DEPLOYED RESOURCES    v1 Secret NAME TYPE DATA AGE authproxy oauth2 proxy Opaque 3 0s   v1 ConfigMap NAME DATA AGE authproxy oauth2 proxy 1 0s   v1 Service NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE authproxy oauth2 proxy ClusterIP 10 109 110 219 80 TCP 0s   v1beta2 Deployment NAME DESIRED CURRENT UP TO DATE AVAILABLE AGE authproxy oauth2 proxy 1 0 0 0 0s   v1 Pod related  NAME READY STATUS RESTARTS AGE authproxy oauth2 proxy 798cff85fc pc8x5 0 1 ContainerCreating 0 0s NOTES  verify oauth2 proxy started  run  kubectl   namespace kube system pods  l  app oauth2 proxy                 Running              kubectl   namespace kube system pods  l  app oauth2 proxy  NAME READY STATUS RESTARTS AGE authproxy oauth2 proxy cdb4f675b wvdg5 1 1 Running 0 1m      GitHub       github org github team          email doamin           OAuth2 Proxy           GitHub Provider                      Jenkins                                            x pack   Kibana                     nginx ingress controller   annotations        auth url auth signin                            annotation    nginx ingress controller   v0 9 0            Jenkins     Ingress            url https    host oauth2 auth             Ingress    oauth2     OAuth2 proxy           nginx ingress kubernetes io auth url   https    host oauth2 auth  nginx ingress kubernetes io auth signin   https    host oauth2 start rd  escapedrequesturi                Jenkins     Ingress       cat",
        "objectID": "post/如何保护对外暴露的Kubernetes服务",
        "date": "2019-04-14T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "traefik",
            "nginx",
            "ingress",
            "oauth"
        ],
        "keywords": [
            "kubernetes",
            "traefik",
            "nginx",
            "ingress",
            "oauth",
            "basic auth",
            "安全"
        ],
        "slug": "how-to-protect-exposed-k8s-server",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/j14tu.jpg",
                "desc": "oauth"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "如何学习Kubernetes？",
        "uri": "post/如何学习Kubernetes",
        "content": "Docker Kubernetes                            Google Microsoft IBM                                  BAT                      Kubernetes                                                                                                                                        namespace     cgroups                                                                                                                              JVM                 Kubernetes     IP               Debug  Kubernetes StatefulSet Operator       PV PVC                                                                                                                                                                                          Linux                              Kubernetes                     Docker  Kubernetes                                                                       Kubernetes         Kubernetes                Kubernetes                                  Kubernetes                       Docker     Docker           katacoda          Kubernetes                                 Kubernetes       Kubernetes          Rancher    Kubernetes               Rancher          Kubernetes                     Docker MAC Windows   Kubernetes              kubectl     Kubernetes                     Kubeadm                                          kubeadm         Kubernetes                                                        Kubernetes                                      Kubernetes                             Kubernetes                CI CD     ServiceMesh                                Kubernetes                                          Kubernetes                                                                               Kubernetes         Docker Kubernetes                  Docker        Kubernetes                          Docker  Kubernetes                 Docker                 Kubernetes     kubeadm     Kubernetes      Kubernetes                       Kubernetes        Kubernetes         Helm             Kubernetes CI CD                399    499                               40                                                                                  Kubernetes                                    Kubernetes                  Kubernetes                                                                                                     4                                                                               Kubernetes         Kubernetes                                                                          Kubernetes                                       Kubernetes                                                                     Kubernetes                       Kubernetes                       Kubernetes                                                                                              4                                   Kubernetes                                                                                                                                                                                                 68    99 9 8                        24                               App                                             9 2           Docker Kubernetes                           Kubernetes",
        "objectID": "post/如何学习Kubernetes",
        "subtitle": "如何可以快速学习Kubernetes",
        "date": "2018-08-29T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "k8s"
        ],
        "keywords": [
            "kubernetes",
            "学习",
            "视频",
            "专栏",
            "极客时间",
            "优点知识"
        ],
        "slug": "how-to-learn-kubernetes",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1535383494412-9bdda0d6d9f3.jpeg",
                "desc": "Lighthouse"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 应用简单安装",
        "uri": "post/安装K8S应用简单方式",
        "content": "curl  sLS https   dl get arkade dev   sudo sh Password  Downloading package https   github com alexellis arkade releases download 0 2 0 arkade darwin  tmp arkade darwin Download complete  Running sufficient permissions attempt move arkade  usr local bin New version arkade installed  usr local bin Creating alias  ark   arkade   _ _ _ _     _     _                                              _                 _  Kubernetes apps easy Version  0 2 0 Git Commit  f2af156fadc052c641aaddaa1282f825f6474de0",
        "objectID": "post/安装K8S应用简单方式",
        "date": "2020-03-17T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "helm",
            "kafka"
        ],
        "keywords": [
            "kubernetes",
            "helm",
            "kafka",
            "zookeeper",
            "logstash",
            "Elasticsearch",
            "Operator"
        ],
        "slug": "install-kafka-in-kubernetes",
        "gitcomment": true,
        "notoc": true,
        "draft": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200317190406.png",
                "desc": "person standing on a mountain overlooking the ocean"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Metrics Server 安装",
        "uri": "post/安装Metrics-Server",
        "content": "kubernetes              heapster         1 11          heapster      metrics server     metrics server                   kubelet     Summary API         metrics server      APIServer    kube aggregator         APIServer             APIServer           APIServer                        requestheader client ca file  etc kubernetes certs proxy ca crt   proxy client cert file  etc kubernetes certs proxy crt   proxy client key file  etc kubernetes certs proxy key   requestheader allowed names aggregator   requestheader extra headers prefix X Remote Extra    requestheader group headers X Remote Group   requestheader username headers X Remote User   enable aggregator routing true             master       kube proxy       kube apiserver          enable aggregator routing true             metrics server                    https   github com kubernetes incubator metrics server tree master deploy kubernetes 1 7   kubectl create  f 1 7  kubernetes   1 8   kubectl create  f 1 8            Helm           metrics server   Chart   fetch                        helm fetch stable metrics server   tar  xvf metrics server 2 7 1 tgz   cd metrics server                   gcr io              helm install   name metric   namespace kube system   set image repository gcr azk8s cn google_containers metrics server amd64   NAME  metric LAST DEPLOYED  Wed May 22 01 30 53 2019 NAMESPACE  kube system STATUS  DEPLOYED RESOURCES    v1 ServiceAccount NAME SECRETS AGE metric metrics server 1 1s   v1 ClusterRole NAME AGE system metrics server aggregated reader 1s system metric metrics server 1s   v1 ClusterRoleBinding NAME AGE metric metrics server system auth delegator 1s system metric metrics server 1s   v1beta1 RoleBinding NAME AGE metric metrics server auth reader 1s   v1 Service NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE metric metrics server ClusterIP 10 103 214 219 443 TCP 1s   v1 Deployment NAME DESIRED CURRENT UP TO DATE AVAILABLE AGE metric metrics server 1 1 1 0 1s   v1beta1 APIService NAME AGE v1beta1 metrics k8s io 1s   v1 Pod related  NAME READY STATUS RESTARTS AGE metric metrics server 697bd98b8b kvg2d 0 1 ContainerCreating 0 1s NOTES  metric server deployed  few minutes able list metrics using following command  kubectl   raw   apis metrics k8s io v1beta1 nodes              Pod           kubectl pods  n kube system  l release metric NAME READY STATUS RESTARTS AGE metric metrics server 697bd98b8b kvg2d 1 1 Running 0 58m   kubectl logs  f metric metrics server 697bd98b8b kvg2d  n kube system I0521 17 31 54 580374 1 serving go 273  Generated self signed cert   tmp apiserver crt   tmp apiserver key   restful  2019 05 21 17 31 55 log go 33   restful swagger  listing available https    8443 swaggerapi  restful  2019 05 21 17 31 55 log go 33   restful swagger  https    8443 swaggerui  mapped folder  swagger ui  I0521 17 31 55 112171 1 serve go 96  Serving securely      8443 E0521 17 32 55 229771 1 manager go 111  unable fully collect metrics   unable fully scrape metrics source kubeletsummary ydzs node2  unable fetch metrics kubelet ydzs node2  ydzs node2   https   ydzs node2 10250 stats summary   dial tcp  lookup ydzs node2 10 96 0 10 53  no host  unable fully scrape metrics source kubeletsummary ydzs master  unable fetch metrics kubelet ydzs master  ydzs master   https   ydzs master 10250 stats summary   dial tcp  lookup ydzs master 10 96 0 10 53  no host  unable fully scrape metrics source kubelet_summary ydzs node1  unable fetch metrics kubelet ydzs node1  ydzs node1   https   ydzs node1 10250 stats summary   dial tcp  lookup ydzs node1 10 96 0 10 53  no host         Pod            xxx  no host                    DNS                metrics server     kubelet   10250             hostname                etc hosts          hostname   ip            metrics server   Pod         hosts            hostname                                DNS         hostname                   CoreDNS           CoreDNS   Configmap        hosts       kubectl edit configmap coredns  n kube system apiVersion  v1 data  Corefile      53   errors health hosts           hosts     10 151 30 11 ydzs master 10 151 30 22 ydzs node1 10 151 30 23 ydzs node2 fallthrough   kubernetes cluster local in addr arpa ip6 arpa   pods insecure upstream fallthrough in addr arpa ip6 arpa   prometheus  9153 proxy    etc resolv conf cache 30 reload   kind  ConfigMap metadata  creationTimestamp  2019 05 18T11 07 46Z name  coredns namespace  kube system               hostname              ip             metrics server         kubelet preferred address types       custom values yaml  image  repository  gcr azk8s cn google_containers metrics server amd64 args    kubelet preferred address types InternalIP                       helm delete metric   purge   helm install   name metric   namespace kube system  f custom values yaml            kubectl pods  n kube system  grep metric metric metrics server 58fc94d9f jlxcb 1 1 Running 0 47s   kubectl logs  f metric metrics server 58fc94d9f jlxcb  n kube system I0521 17 54 32 873326 1 serving go 273  Generated self signed cert   tmp apiserver crt   tmp apiserver key",
        "objectID": "post/安装Metrics-Server",
        "date": "2019-05-22T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "metrics-server"
        ],
        "slug": "install-metrics-server",
        "keywords": [
            "kubernetes",
            "metrics-server",
            "安装",
            "helm"
        ],
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1558429886-f2d4fa936469.jpeg",
                "desc": "https://unsplash.com/photos/uShcDKPSaCE"
            }
        ],
        "category": "kubernetes",
        "notoc": true
    },
    {
        "title": "nginx-ingress 的安装使用",
        "uri": "post/安装nginx-ingress",
        "content": "nginx ingress   traefik         ingress controller                     Kubernetes     Service         Ingress           Service                            traefik    nginx ingress              traefik                                        traefik              nginx ingress   Kubernetes                  Helm    nginx ingress          Helm                    Kubernetes Helm         nginx ingress                                        nginx ingress       80   443             DasemonSet   hostPort              nodeSelector        IP          kubectl nodes   show labels NAME STATUS ROLES AGE VERSION LABELS ydzs master Ready master 30d v1 10 0 beta kubernetes io arch amd64 beta kubernetes io os linux kubernetes io hostname ydzs master node role kubernetes io master  ydzs node1 Ready 30d v1 10 0 beta kubernetes io arch amd64 beta kubernetes io os linux kubernetes io hostname ydzs node1 ydzs node2 Ready 30d v1 10 0 beta kubernetes io arch amd64 beta kubernetes io os linux kubernetes io hostname ydzs node2          kubeadm          master       IP       nginx ingress     master        nodeSelector    label    kubernetes io hostname ydzs master                                       custom yaml       nginx ingress Chart           controller  hostNetwork  true daemonset  useHostPort  false hostPorts  http  80 https  443 service  type  ClusterIP tolerations  operator   Exists  nodeSelector  kubernetes io hostname  ydzs master defaultBackend  tolerations  operator   Exists  nodeSelector  kubernetes io hostname  ydzs master     Chart                       helm fetch stable nginx ingress   tar  xvf nginx ingress 1 4 0 tgz nginx ingress      values yaml                                           helm install stable nginx ingress   namespace kube system   name nginx ingress  f custom yaml                  nginx ingress   Pod           kubectl pods  n kube system   grep nginx ingress nginx ingress controller 587b4c68bf vsqgm 1 1 Running 0 11h nginx ingress default backend 64fd9fd685 lmxhw 1 1 Running 0 1d            gcr io quay io          dockerhub     pull         tag            nginx ingress                          ngdemo yaml  apiVersion  extensions v1beta1 kind  Deployment metadata  name  my nginx spec  template  metadata  labels  app  my nginx spec  containers  name  my nginx image  nginx 1 7 9 ports  containerPort  80 apiVersion  v1 kind  Service metadata  name  my nginx labels  app  my nginx spec  ports  port  80 protocol  TCP name  http selector  app  my nginx apiVersion  extensions v1beta1 kind  Ingress metadata  name  my nginx annotations  kubernetes io ingress class   nginx  spec  rules  host  ngdemo qikqiak com http  paths  path    backend  serviceName  my nginx servicePort  80                kubectl apply  f ngdemo yaml deployment extensions  my nginx  created service  my nginx  created ingress extensions  my nginx  created       Ingress            annotations kubernetes io ingress class   nginx           Ingress    nginx ingress                         ngdemo qikqiak com   nginx ingress                       etc hosts                                  nginx ingress                  cert manager    HTTPS               Kubernetes Ingress     HTTPS nginx ingress                        https   kubernetes github io ingress nginx",
        "objectID": "post/安装nginx-ingress",
        "date": "2019-04-14T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "nginx",
            "ingress",
            "helm",
            "traefik"
        ],
        "keywords": [
            "kubernetes",
            "nginx",
            "ingress",
            "helm",
            "traefik"
        ],
        "slug": "install-nginx-ingress",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/xxlj0.jpg",
                "desc": "https://unsplash.com/photos/fvaoHivsHGE"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "基于 Jenkins、Gitlab、Harbor、Helm 和 Kubernetes 的 CI/CD(一)",
        "uri": "post/完整流水线1",
        "content": "Gitlab CI  Kubernetes   CI CD                                    Jenkins   Gitlab   Harbor   Helm   Kubernetes          CI CD                         Jenkins Pipeline   Kubernetes            Kubernetes       Jenkins   Slave                Jenkins Slave                           Github        Docker        Docker Hub                             Jenkins Gitlab Harbor Helm Kubernetes                                           1            Gitlab      2     Gitlab     Jenkins Webhook    Pipeline      3  Jenkins             Pipeline           4                 5       Maven    Java     6           Docker    7     Docker     Harbor    8              Helm       Release 9                                Spring Boot Spring Security JWT React   Ant Design                   https   github com callicoder spring security react ant design polls app                         CI CD                                                                     src main resources application properties                     spring datasource url  jdbc mysql     DBHOST localhost    DBPORT 3306    DBNAME pollingapp  useSSL false serverTimezone UTC useLegacyDatetimeCode false spring datasource username    DB_USER root  spring datasource password    DB_PASSWORD root                                                                   Kubernetes                                      Dockerfile          openjdk 8 jdk alpine MAINTAINER cnych ENV LANG en_US UTF 8 ENV LANGUAGE en_US en ENV LCALL enUS UTF 8 ENV TZ Asia Shanghai RUN mkdir  app WORKDIR  app COPY target polls 0 0 1 SNAPSHOT jar  app polls jar EXPOSE 8080 ENTRYPOINT   java     Djava security egd file  dev   urandom     jar    app polls jar             Spring Boot              openjdk            jar            java  jar                          Jenkins   Pipeline                         jar                  jar                                   Docker     17 06                Docker                             Dockerfile             maven                 maven 3 6 alpine BUILD COPY src  usr app src COPY pom xml  usr app RUN mvn  f  usr app pom xml clean package  Dmaven test skip true openjdk 8 jdk alpine MAINTAINER cnych ENV LANG en_US UTF 8 ENV LANGUAGE en_US en ENV LCALL enUS UTF 8 ENV TZ Asia Shanghai RUN mkdir  app WORKDIR  app COPY   from BUILD  usr app target polls 0 0 1 SNAPSHOT jar  app polls jar EXPOSE 8080 ENTRYPOINT   java     Djava security egd file  dev   urandom     jar    app polls jar               Docker                           maven 3 6 alpine                            jar                                  Docker                           Jenkins Pipeline      maven             Docker                 jar                              Jenkins Pipeline                   Dockerfile                               Gitlab               http   git qikqiak com course polling app server git                                   API           src constants index js APIBASEURL                           APISERVER_URL                API        let API_URL    http   localhost 8080 api    process env APISERVER_URL    APIURL     process env APISERVERURL  api    export const APIBASEURL   API_URL                                                          Kubernetes                             Dockerfile    nginx 1 15 10 alpine ADD build  usr share nginx html ADD nginx conf  etc nginx conf d default conf                          nginx              nginx conf      server   gzip on  listen 80  server_name localhost  root  usr share nginx html  location     try_files  uri  index html  expires 1h    error_page 500 502 503 504  50x html  location    50x html   root  usr share nginx html                            build             nginx      usr share nginx html       nginx                                          build                                               Docker             node                             Dockerfile       node          nginx     node alpine BUILD WORKDIR  usr src app RUN mkdir  p  usr src app ADD    usr src app RUN npm install      npm run build nginx 1 15 10 alpine MAINTAINER cnych COPY   from BUILD  usr src app build  usr share nginx html ADD nginx conf  etc nginx conf d default conf             Jenkins Pipeline                              Dockerfile                               Gitlab               http   git qikqiak com course polling app client git Jenkins                    Jenkins            Pipeline    Kubernetes            kubernetes  Jenkins                         Jenkins Pipeline               Slave Pod             Slave Pod                     docker maven node java                        Slave            Pipeline       Slave Pod                            Slave Pod Template                     Slave           Jenkins   kubernetes      Pod Template     Jenkins                         Kubernetes        Kubernetes Pod Template                polling app server       Pipeline                                                   URL   JENKINS_URL     Jenkins               http   jenkins qikqiak com job polling app server build token server321                  Pipeline script             ",
        "objectID": "post/完整流水线1",
        "date": "2019-04-12T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "Jenkins",
            "Gitlab",
            "Harbor",
            "Helm",
            "Docker",
            "Pipeline",
            "devops"
        ],
        "keywords": [
            "kubernetes",
            "Jenkins",
            "Gitlab",
            "Harbor",
            "Helm",
            "Docker",
            "Pipeline",
            "CI/CD",
            "流水线",
            "devops"
        ],
        "slug": "complete-cicd-demonstrate-1",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/n1l43.jpg",
                "desc": "devops"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "基于 Jenkins、Gitlab、Harbor、Helm 和 Kubernetes 的 CI/CD(二)",
        "uri": "post/完整流水线2",
        "content": "Pipeline      Pipeline                                                                             maven                                       maven              stage             try   container  maven     echo  2            sh  mvn clean package  Dmaven test skip true      catch  exc    println           currentBuild fullDisplayName   throw exc               Docker        Docker                tag      Harbor                             withCredentials            credentialsId dockerhub          stage     Docker        withCredentials    class   UsernamePasswordMultiBinding   credentialsId   dockerhub   usernameVariable   DOCKERHUBUSER   passwordVariable   DOCKERHUBPASSWORD       container  docker     echo  3     Docker       sh     docker login   dockerRegistryUrl   u   DOCKERHUBUSER   p   DOCKERHUBPASSWORD  docker build  t   image    imageTag    docker push   image    imageTag                 image      imageTag                  def imageTag   sh script   git rev parse   short HEAD   returnStdout  true  trim   def dockerRegistryUrl    registry qikqiak com  def imageEndpoint    course polling app server  def image      dockerRegistryUrl    imageEndpoint   docker                          jenkins                                     ID        credentialsId                 kubectl                       kubectl                                      Helm Chart               YAML                          Chart                        Chart                               Deployment            k8s yaml  apiVersion  extensions v1beta1 kind  Deployment metadata  name  polling server namespace  course labels  app  polling server spec  strategy  rollingUpdate  maxSurge  1 maxUnavailable  1 type  RollingUpdate template  metadata  labels  app  polling server spec  restartPolicy  Always imagePullSecrets  name  myreg containers  image    name  polling server imagePullPolicy  IfNotPresent ports  containerPort  8080 name  api env  name  DB_HOST value  mysql name  DB_PORT value   3306  name  DB_NAME value  polling_app name  DB_USER value  polling name  DB_PASSWORD value  polling321 kind  Service apiVersion  v1 metadata  name  polling server namespace  course spec  selector  app  polling server type  ClusterIP ports  name  api port port  8080 targetPort  api apiVersion  extensions v1beta1 kind  Deployment metadata  name  mysql namespace  course spec  template  metadata  labels  app  mysql spec  restartPolicy  Always containers  name  mysql image  mysql 5 7 imagePullPolicy  IfNotPresent ports  containerPort  3306 name  dbport env  name  MYSQLROOTPASSWORD value  rootPassW0rd name  MYSQL_DATABASE value  polling_app name  MYSQL_USER value  polling name  MYSQL_PASSWORD value  polling321 volumeMounts  name  db mountPath   var lib mysql volumes  name  db hostPath  path   var lib mysql kind  Service apiVersion  v1 metadata  name  mysql namespace  course spec  selector  app  mysql type  ClusterIP ports  name  dbport port  3306 targetPort  dbport           YAML                                                                                                                                    Controller  src main java com example polls controller StatusController java  package com example polls controller  import org springframework web bind annotation     RestController  RequestMapping   api _status healthz   public class StatusController    GetMapping public String healthCheck     return  UP                                         src main resources application properties                                                                                              Secret       kubectl create secret docker registry myreg   docker server registry qikqiak com   docker username DOCKERUSER   docker password DOCKERPASSWORD   docker email DOCKER_EMAIL   namespace course              manifests                                             k8s yaml              OK             stage     Kubectl     container  kubectl     echo     K8S    Pod     sh  kubectl pods  sh     sed  i  s    image   manifests k8s yaml sed  i  s    imageTag   manifests k8s yaml kubectl apply  f k8s yaml                 Helm           Helm                            Chart          Chart        https   github com cnych polling helm       values yaml                                                                                          Clone     Chart       git clone https   github com cnych polling helm git                     custom yaml       values yaml        persistence  enabled  true persistentVolumeClaim  database  storageClass   database  database  type  internal internal  database   polling        username   polling          password   polling321                 database  StorgeClass                     apiVersion  storage k8s io v1 kind  StorageClass metadata  name  database provisioner  fuseim pri ifs          Chart                      helm upgrade   install polling  f custom yaml     namespace course Release  polling  does not exist  Installing now  NAME  polling LAST DEPLOYED  Sat May 4 23 31 42 2019 NAMESPACE  course STATUS  DEPLOYED RESOURCES    v1 Pod related  NAME READY STATUS R",
        "objectID": "post/完整流水线2",
        "date": "2019-05-04T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "Jenkins",
            "Gitlab",
            "Harbor",
            "Helm",
            "Docker",
            "Pipeline",
            "devops"
        ],
        "keywords": [
            "kubernetes",
            "Jenkins",
            "Gitlab",
            "Harbor",
            "Helm",
            "Docker",
            "Pipeline",
            "CI/CD",
            "流水线",
            "devops"
        ],
        "slug": "complete-cicd-demonstrate-2",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/ked0s.jpeg",
                "desc": "https://unsplash.com/photos/Lvcm9B-8LAg"
            }
        ],
        "notoc": true,
        "category": "kubernetes"
    },
    {
        "title": "利用Python 优雅的将PDF 转换成图片",
        "uri": "post/将PDF转换成图片",
        "content": "PDF                                           PDF                                 PDF                                 PyPDF    PDF                                        PDF                          PDF          PdfFileReader        PyPDF2 API                                          wand             coding  utf 8    import io wand image import Image wand color import Color PyPDF2 import PdfFileReader  PdfFileWriter memo      def getPdfReader filename   reader   memo get filename  None  reader None  reader   PdfFileReader filename  strict False  memo filename    reader return reader def runconvert filename  page  res 120   idx   page   1 pdfile   getPdfReader filename  pageObj   pdfile getPage page  dst_pdf   PdfFileWriter   dst_pdf addPage pageObj  pdf_bytes   io BytesIO   dstpdf write pdfbytes  pdf_bytes seek 0  img   Image file pdf_bytes  resolution res  img format    png  img compression_quality   90 img background_color   Color  white   img_path     s d png     filename  filename rindex        idx  img save filename img_path  img destroy             PDF              PDF                           PDF                                      PDF                                                                           celery                            github                      PDF  H5                                https   pdfh5 com",
        "objectID": "post/将PDF转换成图片",
        "date": "2017-10-30T00:00:00.000Z",
        "publishdate": "2017-12-06T00:00:00.000Z",
        "tags": [
            "python",
            "PDF"
        ],
        "bigimg": [
            {
                "src": "/img/posts/15624042_1804617946454032_2037034921851092992_n.jpg",
                "desc": "普吉岛@泰国 JAN 6,2017"
            }
        ],
        "slug": "python-convert-pdf-images",
        "category": "python",
        "gitcomment": true
    },
    {
        "title": "并发模型",
        "uri": "post/并发模型",
        "content": "Golang       goroutine                                                                                                C10k C10k   Client 10000          1                   C100k C1000k                                                                                                                                                                  CPU        I O                     Web    I O            I O           CPU                           CPU           I O                                      handle                           I O                                    I O                                         The C10K problem                                                     Web                  Web                                                    jQuery Ajex                                                                   B                B                                   B    B        A                                                                                    Unix    I O                               UNIX    I O                                                                              I O                                 PCB process control block                                   TCB thread control block                                            TCB                                                                                                                         KST Kernel Supported Threads          UST  User Supported Threads         TCB                                                                                                                                                                                                                                                  1 1 1 n n m                                  RR  round robin                                            Preemptive Mode                                   Nonpreemptiv Mode                                I O                               Coroutine                                                            Erlang Lua Python Golangfork                                                      Apache                Prefork MPM                                               worker MPM                               worker MPM                          PHP3 4 5                          worker MPM        Worker MPM                                    MPM                       prefork MPM                                     crash                             web   apache      3                                 accept                                                                                                                                                                                                                                                                      IO                                                                                                                                                   100         1000     10000          10                           4        callback       Nginx                  IO      Nginx           master            worker                  worker                        master       worker           worker                      worker         master         socket         sock             fork      workers                sockfd socket              accept              connected descriptor                                                            Nginx   accept                     worker     Nginx      epoll        I O               Nginx      Node js         Node js                   Node js                                           I O         emit                                              Node js               libev     libev                                            Node js                                                                                                                                             Node js             libevent   libev          5                                                                           python         yield     golang     go      goroutine                     gorounte            k                 Windows     2M Linux     8M     goroutine                                                                                                                                                goroutine                                   goroutine           goroutine                         goroutine        goroutine                   G goroutine  M machine  P  process",
        "objectID": "post/并发模型",
        "date": "2018-09-17T00:00:00.000Z",
        "tags": [
            "并发",
            "golang"
        ],
        "keywords": [
            "并发",
            "高并发",
            "线程",
            "进程",
            "协程",
            "同步",
            "异步",
            "阻塞",
            "非阻塞"
        ],
        "slug": "concurrency-model-compare",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1535429102716-478f09fbf748.jpeg",
                "desc": "并发模型"
            }
        ],
        "category": "golang"
    },
    {
        "title": "微博图床一键迁移到阿里云 OSS",
        "uri": "post/微博图床一键迁移到阿里云OSS",
        "content": "Chrome            403                                                              _                                                                                                                                      OSS                      OSS           bucket accessKey accessSecret    mover  h    Golang                                  OSS      https   github com cnych sinaimgmover Usage  mover  flags  mover  command  Available Commands  help Help command oss        OSS Flags   h    help help mover  l    length int      OSS              6  default 6   p    post string   markdown               default        f    prefix string Bucket              images  default  images   Use  mover  command    help  information command        mover oss   bucket bxdc static   key xxxx   secret xxxx   post  Users ych devs workspace www qikqiak com content page         https   ws3 sinaimg cn large 006tKfTcgy1g1o2gcoqs2j30u021fe81 jpg         https   ws3 sinaimg cn large 006tKfTcgy1g1o2gcoqs2j30u0212233 jpg                                           v0 2                Cobra    CLI                       https   github com cnych sinaimgmover",
        "objectID": "post/微博图床一键迁移到阿里云OSS",
        "date": "2019-04-25T00:00:00.000Z",
        "tags": [
            "微博",
            "阿里云",
            "OSS",
            "图床"
        ],
        "keywords": [
            "微博",
            "阿里云",
            "OSS",
            "图床"
        ],
        "slug": "sina-img-transfer-to-oss",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/654ck.jpeg",
                "desc": "sinaimgmover"
            }
        ],
        "category": "极客"
    },
    {
        "title": "手动搭建高可用的kubernetes 集群",
        "uri": "post/手动搭建高可用的Kubernetes 集群",
        "content": "kubernetes                         kubernetes                   v1 8 2      kube apiserver     traefik ingress      kubernetes   docker     harbor    kubernetes                                                                    kubernetes                                           CentOS 7 Ubuntu 16 04               TLS      RBAC                                                                                                                                                                            1 9         Kubernetes                                        k8s                                       kubernetes            1                    Kubernetes 1 8 2 1 9 x               Docker 17 10 0 ce Etcd 3 2 9 Flanneld TLS            etcd kubernetes master  node  RBAC    kubelet TLS Bootstrapping kubedns dashboard heapster    harbor   nfs     etcd       k8s master       k8s node    master01 192 168 1 137 master02 192 168 1 138 master03 node03 192 168 1 170             master03    node                node01  192 168 1 161 node02  192 168 1 162                                             TLS Bootstrapping    Token        head  c 16  dev urandom   od  An  t x   tr  d        BOOTSTRAP_TOKEN  8981b594122ebed7596f1d3b69c78223                   Pod         Service CIDR                    IP Port   SERVICE_CIDR  10 254 0 0 16  Pod    Cluster CIDR                   flanneld     CLUSTER_CIDR  172 30 0 0 16         NodePort Range  NODEPORTRANGE  30000 32766  etcd         ETCD_ENDPOINTS  https   192 168 1 137 2379 https   192 168 1 138 2379 https   192 168 1 170 2379  flanneld        FLANNELETCDPREFIX   kubernetes network  kubernetes   IP         SERVICE_CIDR     IP  CLUSTERKUBERNETESSVC_IP  10 254 0 1     DNS   IP  SERVICE_CIDR        CLUSTERDNSSVC_IP  10 254 0 2     DNS    CLUSTERDNSDOMAIN  cluster local   MASTER API Server    MASTER_URL  k8s api virtual local            env sh               usr k8s bin                            apiserver        etc hosts        192 168 1 137 k8s api virtual local k8s api   192 168 1 137 master01  IP      IP   apiserver                    ECS                                                                        2    CA       kubernetes           TLS                CloudFlare PKI    cfssl    Certificate Authority CA           CA                    TLS        CFSSL   wget https   pkg cfssl org R1 2 cfssl_linux amd64   chmod  x cfssl_linux amd64   sudo mv cfssl_linux amd64  usr k8s bin cfssl   wget https   pkg cfssl org R1 2 cfssljson_linux amd64   chmod  x cfssljson_linux amd64   sudo mv cfssljson_linux amd64  usr k8s bin cfssljson   wget https   pkg cfssl org R1 2 cfssl certinfo_linux amd64   chmod  x cfssl certinfo_linux amd64   sudo mv cfssl certinfo_linux amd64  usr k8s bin cfssl certinfo   export PATH  usr k8s bin  PATH   mkdir ssl    cd ssl   cfssl print defaults config   config json   cfssl print defaults csr   csr json        usr k8s bin                      export PATH  usr k8s bin  PATH    etc rc local       CA        config json   ca config json    cat ca config json    signing      default      expiry    87600h      profiles      kubernetes      expiry    87600h    usages      signing    key encipherment    server auth    client auth            config json       profiles                                 profile  signing                    ca pem    CA TRUE  server auth    client     CA  server            client auth    server     CA  client              CA        ca csr json    cat ca csr json    CN    kubernetes    key      algo    rsa    size   2048     names        C    CN    L    BeiJing    ST    BeiJing    O    k8s    OU    System        CN  Common Name kube apiserver                   User Name                    O  Organization kube apiserver                     Group     CA          cfssl gencert  initca ca csr json   cfssljson  bare ca   ls ca    ca config json ca csr ca csr json ca key pem ca pem          CA                      etc kubernetes ssl        sudo mkdir  p  etc kubernetes ssl   sudo cp ca   etc kubernetes ssl 3       etcd    kubernetes     etcd              3    etcd     3       kubernetes master 3         etcd01 etcd02 etcd03  etcd01 192 168 1 137 etcd02 192 168 1 138 etcd03 192 168 1 170                    export NODE_NAME etcd01                                 export NODE_IP 192 168 1 137          IP   export NODE_IPS  192 168 1 137 192 168 1 138 192 168 1 170    etcd        IP     etcd       IP      export ETCD_NODES etcd01 https   192 168 1 137 2380 etcd02 https   192 168 1 138 2380 etcd03 https   192 168 1 170 2380                 ETCDENDPOINTS FLANNELETCDPREFIX CLUSTERCIDR   source  usr k8s bin env sh   etcd        https   github com coreos etcd releases                  wget https   github com coreos etcd releases download v3 2 9 etcd v3 2 9 linux amd64 tar gz   tar  xvf etcd v3 2 9 linux amd64 tar gz   sudo mv etcd v3 2 9 linux amd64 etcd   usr k8s bin    TLS                     etcdctl  etcd    etcd            TLS       etcd           cat   etcd csr json etcd service         etcd        etcd            ip   NODE_IPS   ETCDCTL_API 3  usr k8s bin etcdctl     endpoin",
        "objectID": "post/手动搭建高可用的Kubernetes 集群",
        "date": "2017-11-06T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "高可用",
            "集群",
            "docker"
        ],
        "keywords": [
            "kubernetes",
            "安装",
            "二进制",
            "高可用",
            "集群",
            "docker",
            "kubectl",
            "Haproxy",
            "Keepalived"
        ],
        "slug": "manual-install-high-available-kubernetes-cluster",
        "gitcomment": true,
        "toc": true,
        "bigimg": [
            {
                "src": "/img/posts/23164024_304744326693830_684783048734015488_n.jpg",
                "desc": "Foggy weather on the coast + a chance encounter with wild horses"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "手摸手教你写 Kubernetes 的 golang 服务",
        "uri": "post/手摸手教你写Kubernetes的golang服务",
        "content": "kubernetes                  kubernetes                              kubernetes golang    golang    golang                                                                         golang                   https   golang google cn             goappk8s             src     mkdir goappk8s    cd goappk8s   mkdir src  goappk8s         GOPATH     setup gopath sh     bin bash DIR    cd    dirname    BASH_SOURCE 0         pwd   export GOPATH   DIR                GOPATH           source setup gopath sh   echo  GOPATH  Users ych devs workspace yidianzhishi goappk8s       GOPATH                 src       golang       mkdir  p github com cnych goappk8s    cd github com cnych goappk8s   touch main go           golang         ping     package main import    github com gin gonic gin   net http    func main     router    gin Default   router GET   ping   func c  gin Context    c String http StatusOK   PONG      router Run   8080                          github com gin gonic gin                  GOPATH           govendor                         dep glide     github com cnych goappk8s               govendor init   govendor fetch github com gin gonic gin                                     GOPATH              go install github com cnych goappk8s      bin goappk8s  GIN debug   WARNING  Creating Engine instance Logger Recovery middleware already attached   GIN debug   WARNING  Running  debug  mode  Switch  release  mode production  using env  export GIN_MODE release using code  gin SetMode gin ReleaseMode   GIN debug   ping     main main func1  3 handlers   GIN debug  Listening serving HTTP  8080          golang                      http   127 0 0 1 8080 ping            PONG                 Docker         Docker                   golang     Dockerfile     main go     golang build env ADD    go src app WORKDIR  go src app RUN go  u  v github com kardianos govendor RUN govendor sync RUN GOOS linux GOARCH 386 go build  v  o  go src app app server alpine RUN apk add  U tzdata RUN ln  sf  usr share zoneinfo Asia Shanghai  etc localtime COPY   from build env  go src app app server  usr local bin app server EXPOSE 8080 CMD    app server        Docker      docker build  t cnych goappk8s v1 0 0                Successfully built 00751f94d8a9 Successfully tagged cnych goappk8s v1 0 0   docker push cnych goappk8s v1 0 0                cnych goappk8s v1 0 0      dockerhub                                                                kubernetes    Kubernetes             kubernetes                                     Dockerfile             kubernetes       k8s yaml  apiVersion  extensions v1beta1 kind  Deployment metadata  name  goapp deploy namespace  kube apps labels  k8s app  goappk8s spec  replicas  2 revisionHistoryLimit  10 minReadySeconds  5 strategy  type  RollingUpdate rollingUpdate  maxSurge  1 maxUnavailable  1 template  metadata  labels  k8s app  goappk8s spec  containers  image  cnych goappk8s v1 0 0 imagePullPolicy  Always name  goappk8s ports  containerPort  8080 protocol  TCP resources  limits  cpu  100m memory  100Mi requests  cpu  50m memory  50Mi livenessProbe  tcpSocket  port  8080 initialDelaySeconds  10 timeoutSeconds  3 readinessProbe  httpGet  path   ping port  8080 initialDelaySeconds  10 timeoutSeconds  2 apiVersion  v1 kind  Service metadata  name  goapp svc namespace  kube apps labels  k8s app  goappk8s spec  ports  name  api port  8080 protocol  TCP targetPort  8080 selector  k8s app  goappk8s apiVersion  extensions v1beta1 kind  Ingress metadata  name  goapp ingress namespace  kube apps spec  rules  host  goappk8s local http  paths  path    backend  serviceName  goapp svc servicePort  api    k8s yaml         3    Deployment Service Ingress    YAML                      YAML      Kubernetes Deployment        replicas  2          POD       strategy      RollingUpdate resources         POD        livenessProbe readinessProbe             kubectl           kubectl apply  f k8s yaml deployment  goapp deploy  created service  goapp svc  created ingress  goapp ingress  created                                   kubectl deployments  n kube apps  grep goapp goapp deploy 2 2 2 2 57s   kubectl svc  n kube apps  grep goapp goapp svc ClusterIP 10 254 109 69 8080 TCP 1m   kubectl ingress  n kube apps  grep goapp goapp ingress goappk8s local 80 1m   kubectl pods  n kube apps  grep goapp goapp deploy 84bb6979c 59qkl 1 1 Running 0 2m goapp deploy 84bb6979c mgg2r 1 1 Running 0 2m        kubernetes        POD              etc hosts     Ingress          k8s    IP goappk8s local              http   goappk8s local ping              PONG                   github             CI CD                           kubernetes",
        "objectID": "post/手摸手教你写Kubernetes的golang服务",
        "date": "2018-02-08T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "docker",
            "golang"
        ],
        "keywords": [
            "kubernetes",
            "docker",
            "golang",
            "服务"
        ],
        "slug": "write-kubernets-golang-service-step-by-step",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1508922450598-2f5b1193950a.jpeg",
                "desc": "Lake Wakatipu, New Zealand"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 进阶训练营",
        "uri": "post/打造独当一面的 Kubernetes 运维、开发工程师",
        "content": "",
        "objectID": "post/打造独当一面的 Kubernetes 运维、开发工程师",
        "subtitle": "专为运维、开发 K8S 打造的进阶特训营限时优惠中...",
        "date": "2019-04-28T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "课程"
        ],
        "keywords": [
            "kubernetes",
            "课程",
            "优惠",
            "51"
        ],
        "slug": "promotion-51",
        "landing": true,
        "gitcomment": true,
        "weight": 1,
        "category": "kubernetes"
    },
    {
        "title": "提高 kubectl 使用生产力[译]",
        "uri": "post/提高kubectl生产力",
        "content": "Kubernetes      kubectl                                       kubectl                                                         kubectl           Kubernetes                 kubectl              kubectl             kubectl                       kubectl      Kubernetes                  Kubernetes            kubectl    Kubernetes API           Kubernetes API     HTTP REST API      API      Kubernetes          Kubernetes     API                  Kubernetes         API                    API      HTTP                kubectl            Kubernetes API   HTTP       Kubernetes               Kubernetes              Kubernetes             CRUD                     Kubernetes Kubernetes                                            ReplicaSet              replicaset yaml          ReplicaSet              kubectl create  f replicaset yaml           Kubernetes       ReplicaSet                  Kubernetes      ReplicaSet           Kubernetes            API                     API            POST  apis apps v1 namespaces  namespace  replicasets         API         Kubernetes     API Endpoint             Endpoint               APIServer   URL     API        Endpoint                     kubectl       API Endpoint      HTTP POST    ReplicaSet     replicaset yaml              body          kubectl   Kubernetes                           curl         Kubernetes API    HTTP    kubectl              Kubernetes API        kubectl               kubectl         Kubernetes API                        Kubernetes        Kubernetes    Kubernetes                                       Master              Node                      Master                 etcd                    etcd    kube apiserver           API             etcd         kube controller manager                     kube scheduler        Pod         Node            kubelet                                                      kubectl create  f replicaset yaml   kubectl     ReplicaSet   API Endpoint       HTTP POST                                           ReplicaSet           Kubernetes API                   Kubernetes    APIServer   etcd                                    etcd        APIServer     etcd                  ReplicaSet       ReplicaSets API   List     watch       ReplicaSet        ReplicaSet       create Pod API     Pod        patch Pod API     Pod                  kubectl              API                     Kubernetes              etcd    Kubernetes      APIServer    Kubernetes API                                 Kubernetes API           Kubernetes                             kubectl              kubectl                     kubectl         1                                               tab       kubectl                                                kubectl                      Bash   Zsh shell                                                                                  shell             shell                   kubectl   Bash   Zsh                           kubectl completion bash      kubectl completion zsh         shell   source              kubectl                      Bash    Linux   Mac         Zsh                           Bash Linux Bash          bash completion                              bash completion       sudo apt get install bash completion      yum install bash completion                           type initcompletion        shell                                             bashrc      source  usr share bash completion bash_completion                  bashrc                     apt get        yum           bash completion                           shell          kubectl                        bashrc     source  etc bash_completion d kubectl    etc bash_completion d               bash completion                        shell   kubectl                    Bash MacOS   Mac                 Mac    Bash      3 2       kubectl             Bash 4 1          Mac     kubectl                   Bash    Bash                Upgrading Bash macOS                            Bash     4 1      Linux     Bash         bash completion                        Homebrew          brew install bash completion 2    2   bash completion v2    kubectl          v2      v2        Bash 4 1              4 1  Bash      kubectl           brew                                bash_profile        export BASHCOMPLETIONCOMPATDIR  usr local etc bashcompletion d     r   usr local etc profile d bashcompletion sh            usr local etc profile d bashcompletion sh         bash completion                       bashrc          shell        bash completion       shell                     bash completion    type initcompletion        shell                                shell          kubectl                        bashrc     source  usr local etc bash_completion d kubectl      Homebrew    bash completion                     Homebrew     kubectl                              usr local etc bash_completion d           kubectl            bash completion                    shell   kubectl                 Zsh Zsh                             shell                     zshrc                 source            kubectl explain       ",
        "objectID": "post/提高kubectl生产力",
        "date": "2019-07-22T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "kubectl"
        ],
        "keywords": [
            "kubernetes",
            "docker",
            "kubectl",
            "效率"
        ],
        "slug": "boosting-kubeclt-productivity",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1563713665854-e72327bf780e.jpeg",
                "desc": "https://unsplash.com/photos/pwkHJXr01bQ"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "更优雅的git log",
        "uri": "post/更好的git log",
        "content": "git log                git log                                                                                                                    git log   graph   pretty format   Cred h Creset   C yellow  d Creset  s  Cgreen  cr   C bold blue  Creset    abbrev commit                                        git config   global alias lg  log   color   graph   pretty format   Cred h Creset   C yellow  d Creset  s  Cgreen  cr   C bold blue  Creset    abbrev commit                      git lg                         git lg  p",
        "objectID": "post/更好的git log",
        "date": "2017-12-20T00:00:00.000Z",
        "tags": [
            "git",
            "log",
            "ops"
        ],
        "slug": "a-better-git-log",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/24327236_2084467321787075_5515671519205785600_n.jpg",
                "desc": "Fall and fog"
            }
        ],
        "category": "ops"
    },
    {
        "title": "更新django2.0的10条注意事项",
        "uri": "post/更新django2.0的10条注意事项",
        "content": "django 2 0                   python2 x                2 x              python3 x           python3 x                                 python            python          django2 0                 Django 2 0              1  url django core urlresolvers import reverse     django urls import reverse 2  MIDDLEWARE settings py   MIDDLEWARE_CLASSES    MIDDLEWARE          3  django shortcuts render   django shortcuts rendertoresponse               django shortcuts render      4  User isauthenticated  User isanonymous    User isauthenticated   User isanonymous           User isauthenticated User isanonymous  5  SessionAuthenticationMiddleware    SessionAuthenticationMiddleware            Django 1 10           6  assignmenttag   simpletag  register assignmenttag    register simpletag  django2 0              Django 2 0         7  on_delete models CASCADE  model ForeignKey OneToOne     on_delete models CASCADE  8  URL        Django   URL                       Pythonic                       url r  articles   P 0 9  4       views year_archive               path  articles     views year_archive   9                 annotate        Window        Frame     10                                          Django 2 0",
        "objectID": "post/更新django2.0的10条注意事项",
        "date": "2018-01-02T00:00:00.000Z",
        "tags": [
            "django",
            "django2.0"
        ],
        "slug": "upgrading-django-20-10-tips",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1500206329404-5057e0aefa48.jpeg",
                "desc": "Seeking the one who is higher than us. Lifting our hands to calling his name. Surrendering all of our being through worship."
            }
        ],
        "category": "python"
    },
    {
        "title": "21天入门机器学习",
        "uri": "post/机器学习",
        "content": "AI                                                                                                                                   AI                                                                                  AI         Case1                              AI                                                                                    985                                                                               Case2                       interviewer              985                                         intervieweedemo prototype                                                                                                               i                 ii             2                                                                                                                                                            XXXX                                                           TIP    title                                                                                                                                                                                                                                                                                               3                                                 ETL                                                                                                                   NLP        AlphaGo                    ML    DL                                                                         02                             AI                            AI                                                                                                                                                     21           3   1    5   21                                                                                                                           5     200          2   28   3   1        03                                iEverything",
        "objectID": "post/机器学习",
        "subtitle": "小白入行 AI 的必修课",
        "date": "2019-02-18T00:00:00.000Z",
        "tags": [
            "机器学习",
            "AI",
            "python"
        ],
        "keywords": [
            "机器学习",
            "入门",
            "AI",
            "小白",
            "必修课"
        ],
        "slug": "ai-start-course",
        "gitcomment": true,
        "category": "python"
    },
    {
        "title": "TDD开发容器化的Python微服务应用(一)",
        "uri": "post/测试驱动开发课程",
        "content": "Docker                                                  TDD                                                                                                                                                                                                                  iEverything           python            python                   Docker               Flask Buleprint    Jinja      flask microservices main   Docker Compose    Nginx Admin    flask microservices users           Flask    flask microservices client       React    flask microservices swagger   Swagger API         1                   github            tag       RealPython                                            Docker  Flask MySQL   RESTful API                            TDD                        Docker   started Docker Docker Compose   started Docker Compose Flask   Flaskr TDD               Python v3 6 4 Flask v0 12 2 Flask Script v2 0 6 Flask SQLAlchemy v2 3 2 Flask Testing v0 7 1 PyMySQL v0 8 0 Gunicorn v19 7 1 Nginx v1 13 0 Docker v17 11 0 ce Docker Compose v1 14 0                     Flask    RESTful API             TDD      Docker Docker Compose                                                  Docker     Python Flask     Flask Nginx Gunicorn 2                                        Flask    mkdir flask microservices users    cd flask microservices users   mkdir project   pyenv virtualenv 3 6 4 tdd3   pyenv local tdd3  tdd3   pip install Flask  0 12 2  project       init py            project init py flask import Flask  jsonify    app app   Flask name   app route   ping   methods   GET    def ping_pong    return jsonify    status    success    message    pong           Flask Script               Flask app   tdd3   pip install Flask Script  2 0 6             manage py     manage py flask_script import Manager project import app manager   Manager app  name     main   manager run              Manager                          tdd3   python manage py runserver                    http   localhost 5000 ping        json             message    pong     status    success             Ctrl C   project        config py           project config py class BaseConfig             DEBUG   False TESTING   False class DevelopmentConfig BaseConfig                DEBUG   True class TestingConfig BaseConfig                DEBUG   True TESTING   True class ProductionConfig BaseConfig                DEBUG   False     init py                  flask import Flask  jsonify    app app   Flask name       app config from_object  project config DevelopmentConfig    app route   ping   methods   GET    def ping_pong    return jsonify    status    success    message    pong                        debug          tdd3   python manage py runserver Running http   127 0 0 1 5000   Press CTRL C quit  Restarting stat Debugger active  Debugger PIN  770 657 842                                                                 requirements txt            pip freeze                      tdd3   pip freeze   requirements txt     requirements txt      Flask  0 12 2 Flask Script  2 0 6                 gitignore     pycache env    git             3  Docker              Flask                           Docker Docker Compose    docker  v Docker version 17 05 0 ce  build 89658be   docker compose  v docker compose version 1 14 0  build unknown              Dockerfile     python 3 6 4        RUN mkdir  p  usr src app WORKDIR  usr src app        Docker      ADD   requirements txt  usr src app requirements txt      RUN pip install  r requirements txt      ADD    usr src app      CMD python manage py runserver  h 0 0 0 0                docker compose yml     version   2 1  services  users service  container_name  users service build    volumes      usr src app  ports  5001 5000                               Dockerfile     users service       docker compose yml            volumes                                                                   Docker compose             2 1         docker compose            Docker                                3 x 2 x                                docker compose build                          Docker                                     docker compose  d    d                        http   127 0 0 1 5001 ping             JSON           docker compose yml                           version   2 1  services  users service  container_name  users service build    volumes      usr src app  ports  5001 5000                   environment  APP_SETTINGS project config DevelopmentConfig     proejct init py                   import os flask import Flask  jsonify    app app   Flask name       appsettings   os getenv  APPSETTINGS   app config fromobject appsettings   app route   ping   methods   GET    def ping_pong    return jsonify    status    success    message    pong                docker compose  d                         project init py             import sys print app config  file sys stderr                                         docker compose logs  f users service         DEBUG True TESTING False                    4                   MySQL                     link users service          ",
        "objectID": "post/测试驱动开发课程",
        "date": "2017-12-28T00:00:00.000Z",
        "tags": [
            "python",
            "flask",
            "TDD",
            "docker",
            "react",
            "kubernetes",
            "Microservice"
        ],
        "slug": "tdd-develop-python-microservice-app",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1470020337050-543c4e581988.jpeg",
                "desc": "Cloudy Cabin Escape."
            }
        ],
        "category": "python"
    },
    {
        "title": "TDD开发容器化的Python微服务应用(二)",
        "uri": "post/测试驱动开发课程(二)",
        "content": "3                                                     ReactJS                                                                                                                                                    iEverything           python            python                                  React    React    React        React    1     flask microservices main   Docker Compose    Nginx       flask microservices users   Flask    flask microservices client       2                      Docker Compose      git                             Docker          Travis CI       React    React            3                                                      requirements txt          coverage  4 4 2       manage py         import coverage COV   coverage coverage  branch True  include  project     omit    project tests        COV start    manager command def cov       Runs unit tests coverage     tests   unittest TestLoader   discover  project tests   result   unittest TextTestRunner verbosity 2  run tests  result wasSuccessful    COV stop   COV save   print  Coverage Summary    COV report   COV html_report   COV erase   return 0 return 1                       tdd3   docker compose  f docker compose yml  d   build                 tdd3   docker compose  f docker compose yml run users service python manage py cov                Coverage Summary  Name Stmts Miss Branch BrPart Cover project init py 12 5 0 0 58  project api models py 13 10 0 0 23  project api views py 55 0 10 0 100  project config py 16 0 0 0 100  TOTAL 96 15 10 0 86                    htmlcov                                     htmlcov index html                 htmlcov       gitignore     4       Liniting                       python       linting         Flake8      pep8 pyflakes  linting        requrements txt     flake8     flake8  3 5 0              tdd3   docker compose  f docker compose yml  d   build        flake8         tdd3     docker compose  f docker compose yml run users service flake8 project Starting users db     done project init py 2 1  F401  flask jsonify  imported unused project tests test_users py 28 80  E501 line long  83   79 characters                 flask jsonify                                                        5                                                                                            github       Travis CI                                       travis yml     sudo  required services  docker env  DOCKERCOMPOSEVERSION  1 14 0 before_install  sudo rm  usr local bin docker compose curl  L https   github com docker compose releases download   DOCKERCOMPOSEVERSION  docker compose uname  s uname  m   docker compose chmod  x docker compose sudo mv docker compose  usr local bin before_script  docker compose  f docker compose yml   build  d script  docker compose  f docker compose yml run users service python manage py test docker compose  f docker compose yml run users service flake8 project after_script  docker compose  f docker compose yml down                      docker compose                                                 Travis CI                               GitHub                        Travis CI                     Travis      README md                                                                           GitHub   Travis         6  React    React            javascript                                          React                      React         Why build React  React                    Babel Webpack                            React                     Node NPM    tdd100 node  v v8 5 0   tdd100 npm  v 5 4 2                                         6 1                      React         Create React App        Create React App            npm install create react app   global             flask microservices users                 client                 mkdir client    cd client   create react app                                          npm start         Create React App               http   localhost 3000                  Crtl   C                    npm       package lock json      echo  package lock false      npmrc       npm docs         npmrc        package lock json                 Understanding lock files NPM 5                         6 2                             src     App css App js App test js  index css       index js    import React  react   import ReactDOM  react dom   const App           return   Users      ReactDOM render    document getElementById  root                   React ReactDom           App      ES6                      JSX          ReactDOM render      App        ID root HTML         public     index html                        ES6                   javascript        ES6            ES6    javascript                                             public    index html   head    bootstrap css      6 3                 App             import React   Component   react   import ReactDOM  react dom   class App extends Component   constructor     super      render     return   Users       ReactDOM render    document getElementById  root            npm start                                                    ",
        "objectID": "post/测试驱动开发课程(二)",
        "date": "2018-01-13T00:00:00.000Z",
        "tags": [
            "python",
            "flask",
            "TDD",
            "docker",
            "react",
            "kubernetes",
            "Microservice"
        ],
        "slug": "tdd-develop-python-microservice-app-part2",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1435777940218-be0b632d06db.jpeg",
                "desc": "Arctic plains."
            }
        ],
        "category": "python"
    },
    {
        "title": "《深入浅出Prometheus》",
        "uri": "post/深入浅出prometheus",
        "content": "Prometheus        Prometheus                                                          Prometheus                                       Prometheus                                               Prometheus       Prometheus    SoundCloud           Google BorgMon                 Kubernetes      Prometheus                     Prometheus                                 Prometheus                               Prometheus                   Kubernetes         Prometheus                  Redis MySQL server              Kubernetes          Prometheus                                           Prometheus                      Prometheus              Prometheus                 Prometheus       Prometheus                                                 IT          Prometheus                                   Prometheus    Go                                                   Prometheus                                 Kubernetes Consul DNS                          Go            Prometheus                                                                  Prometheus                 Prometheus             4 12        Prometheus            Kubernetes                        1                                                                                         Prometheus        2       Prometheus                         Prometheus                                            Prometheus      Thanos     3       Prometheus                   Prometheus TSDB                                                          Influxdb         Adapter        4       Prometheus exporter                        exporter    MySQL server exporter Redis exporter Node exporter                  exporter          exporter  5        Kubernetes                Heapster kube state metrics metrics server       Prometheus   Kubernetes           6        Prometheus   Kubernetes                           Kubernetes       Prometheus       Kubernetes                Prometheus Operator                                           7        Prometheus    Kubernetes                                      Prometheus               Kubernetes    Service     8        Promethues    Kubernetes                  cAdvisor        apiserver     Service     kube state metrics   Kubernetes                    node exporter    Kubernetes        9        Prometheus    Kubernetes                Kubernetes       Grafana           Grafana    Prometheus            Dashboard            Grafana    Kubernetes             grafana kuberentes app                 Grafana                10        Prometheus    Kubernetes                  Kubernetes       Prometheus       Alertmanager           Configmap                       webhook        Alertmanager       11      Prometheus           Prometheus                                           Prometheus          12      AlertManager                                                                                                                               4          k8s                                  4 2    10        k8s                                                                   https   mp weixin qq com s __biz MzU4MjQ0MTU4Ng   mid 2247484172 idx 1 sn 890f5ab2ad4e9359505d7958166d8f49 chksm fdb90c11cace850784971962b34ab959be09479781ccc5b0e3cd15db79f6a2a347cf2cd446e1 token 2048854271             https   detail tmall com item htm spm a212k0 12153887 0 0 64a3687dQ6nSzh id 590161370307        https   item jd com 44066787013 html          prometheus",
        "objectID": "post/深入浅出prometheus",
        "subtitle": "原理、应用、源码与拓展详解",
        "date": "2019-04-01T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus"
        ],
        "keywords": [
            "kubernetes",
            "prometheus",
            "书籍",
            "深入浅出"
        ],
        "slug": "prometheus-book",
        "gitcomment": true,
        "category": "kubernetes"
    },
    {
        "title": "深入理解 Kubernetes Admission Webhook",
        "uri": "post/深入理解Kubernetes的Admission Webhook",
        "content": "Kubernetes                                             Kubernetes                  admission webhooks    initializers           API            Kubernetes                       admission webhooks                         Kubernetes                    admission controller piece code intercepts requests Kubernetes API server prior persistence object  request authenticated authorized      Admission controllers may  validating    mutating   both  Mutating controllers may modify objects admit  validating controllers may not      controllers either phase reject request  entire request rejected immediately error returned end user                           Kubernetes API Server                                         validating mutating       Mutating                   Validating                                                                       Kubernetes API                      Kubernetes               https   kubernetes io docs reference access authn authz admission controllers  what does each admission controller do                                               kube apiserver       apiserver                                         apiserver       Admission webhooks initializers                             initializers                       alpha               Admission webhooks              1 14   kubernetes          initializers                  admission webhook        Kubernetes apiserver               MutatingAdmissionWebhook ValidatingAdmissionWebhook                   HTTP                             Kubernetes                  admission webhook                            admission webhook                          HTTP                     HTTP             serverless       https   github com kelseyhightower denyenv validating admission webhook   MutatingWebhookConfiguration ValidatingWebhookConfiguration     admission webhook         admission webhook             validating webhooks                               mutating webhooks                           webhook                               Service Mesh   istio     mutating webhooks     Envoy   sidecar       Pod     https   istio io docs setup kubernetes sidecar injection          Admission Webhook         Admission Webhook                   Kubernetes                     webhook   webserver               webhook                   Kubernetes                   Kubeadm                            1 9            apiserver     MutatingAdmissionWebhook ValidatingAdmissionWebhook                   kubeadm            apiserver Pod        kubectl pods kube apiserver ydzs master  n kube system  o yaml apiVersion  v1 kind  Pod metadata  labels  component  kube apiserver tier  control plane name  kube apiserver ydzs master namespace  kube system        spec  containers  command  kube apiserver   advertise address 10 151 30 11   allow privileged true   authorization mode Node RBAC   client ca file  etc kubernetes pki ca crt   enable admission plugins NodeRestriction MutatingAdmissionWebhook ValidatingAdmissionWebhook           enable admission plugins      MutatingAdmissionWebhook ValidatingAdmissionWebhook                               apiserver                            API    kubectl api versions  grep admission admissionregistration k8s io v1beta1    webhook                         webhook              HTTP    validate   mutate     validating   mutating webhook        webhook          Github     https   github com cnych admission webhook example     Fork    https   github com banzaicloud admission webhook example    webhook         TLS     HTTP      Deployment                             main go webhook go main go       HTTP        webhook go   validates   mutates    webhook                    main go            golang      HTTP                  TLS        flag StringVar  parameters certFile   tlsCertFile     etc webhook certs cert pem    File containing x509 Certificate HTTPS    flag StringVar  parameters keyFile   tlsKeyFile     etc webhook certs key pem    File containing x509 private key   tlsCertFile               serve            mutate   validating      HTTP                AdmissionReview                   URL         mutate   validate          AdmissionReview     func  whsvr WebhookServer  serve w http ResponseWriter  r http Request    var body   byte r Body    nil   data  err    ioutil ReadAll r Body   err    nil   body   data     len body     0   glog Error  empty body   http Error w   empty body   http StatusBadRequest  return      verify content type accurate contentType    r Header Get  Content Type   contentType     application json    glog Errorf  Content Type  s  expect application json   contentType  http Error w   invalid Content Type  expect application json   http StatusUnsupportedMediaType  return   var admissionResponse  v1beta1 AdmissionResponse ar    v1beta1 AdmissionReview       err    deserializer Decode body  nil   ar   err    nil   glog Errorf  Can t decode body   v   err  admissionResponse    v1beta1 AdmissionResponse  Result   metav1 Status  Message  err Error           else   fmt Println r URL Path  r URL Path      mutate    admissionResponse   wh",
        "objectID": "post/深入理解Kubernetes的Admission Webhook",
        "date": "2019-07-05T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "admission",
            "webhook",
            "istio"
        ],
        "keywords": [
            "kubernetes",
            "admission",
            "webhook",
            "istio",
            "apiserver",
            "准入控制",
            "Envoy",
            "Pod"
        ],
        "slug": "k8s-admission-webhook",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1559657693-e816ff3bd9af.jpeg",
                "desc": "https://unsplash.com/photos/flfhAlEwDq4"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "理解 Kubernetes 的亲和性调度",
        "uri": "post/理解kubernetes的亲和性",
        "content": "POD                                                                  POD                 gitlab        Kubernetes                                                                                    POD                  Kubernetes                       nodeAffinity podAffinity  nodeSelector     label kubernetes                       label                      service      label     POD     POD             label                           node   label    kubectl nodes   show labels NAME STATUS ROLES AGE VERSION LABELS 192 168 1 140 Ready 42d v1 8 1 beta kubernetes io arch amd64 beta kubernetes io os linux kubernetes io hostname 192 168 1 140 192 168 1 161 Ready 118d v1 8 1 beta kubernetes io arch amd64 beta kubernetes io os linux kubernetes io cluster service true kubernetes io hostname 192 168 1 161 192 168 1 170 Ready 118d v1 8 1 beta kubernetes io arch amd64 beta kubernetes io os linux kubernetes io cluster service true kubernetes io hostname 192 168 1 170 192 168 1 172 Ready 114d v1 8 1 beta kubernetes io arch amd64 beta kubernetes io os linux kubernetes io cluster service true kubernetes io hostname 192 168 1 172         192 168 1 140    source qikqiak            kubectl label nodes 192 168 1 140 source qikqiak node  192 168 1 140  labeled            show labels                 node                                 POD   spec      nodeSelector                  label                  busybox POD   YAML     apiVersion  v1 kind  Pod metadata  labels  app  busybox pod name  test busybox spec  containers  command  sleep  3600  image  busybox imagePullPolicy  Always name  test busybox           POD     140                  140    label     apiVersion  v1 kind  Pod metadata  labels  app  busybox pod name  test busybox spec  containers  command  sleep  3600  image  busybox imagePullPolicy  Always name  test busybox nodeSelector  source  qikqiak          describe             kubectl describe pod test busybox        Events  Type Reason Age Message                               Normal Scheduled 49s default scheduler Successfully assigned test busybox 192 168 1 140 Normal SuccessfulMountVolume 49s kubelet  192 168 1 140 MountVolume SetUp succeeded volume  default token hmpbz  Normal Pulling 49s kubelet  192 168 1 140 pulling image  busybox  Normal Pulled 41s kubelet  192 168 1 140 Successfully pulled image  busybox  Normal Created 41s kubelet  192 168 1 140 Created container Normal Started 41s kubelet  192 168 1 140 Started container        Events           POD         140                 nodeSelector                                        nodeAffinity  nodeAffinity nodeAffinity             Anti Affinity                nodeSelector                                                                         POD                                                                                                              nodeAffinity          preferredDuringSchedulingIgnoredDuringExecution requiredDuringSchedulingIgnoredDuringExecution                          test node affinity yaml  apiVersion  v1 kind  Pod metadata  name  with node affinity labels  app  node affinity pod spec  containers  name  with node affinity image  nginx affinity  nodeAffinity  requiredDuringSchedulingIgnoredDuringExecution  nodeSelectorTerms  matchExpressions  key  kubernetes io hostname operator  NotIn values  192 168 1 140 192 168 1 161 preferredDuringSchedulingIgnoredDuringExecution  weight  1 preference  matchExpressions  key  source operator  values  qikqiak      POD       POD      140 161              source qikqiak                       descirbe                              label            Kubernetes              In label          NotIn label           Gt label         Lt label         Exists    label    DoesNotExist    label         nodeSelectorTerms                         matchExpressions                          POD  podAffinity           POD                      POD           Kubernetes 1 4     podAffinity                nodeAffinity   podAffinity  requiredDuringSchedulingIgnoredDuringExecution  preferredDuringSchedulingIgnoredDuringExecution                            podAntiAffinity             with pod affinity busybox pod            node affinity pod             test pod affinity yaml  apiVersion  v1 kind  Pod metadata  name  with pod affinity labels  app  pod affinity pod spec  containers  name  with pod affinity image  nginx affinity  podAffinity  requiredDuringSchedulingIgnoredDuringExecution  labelSelector  matchExpressions  key  app operator  values  busybox pod topologyKey  kubernetes io hostname podAntiAffinity  preferredDuringSchedulingIgnoredDuringExecution  weight  1 podAffinityTerm  labelSelector  matchExpressions  key  app operator  values  node affinity pod topologyKey  kubernetes io hostname          POD                              POD    POD    app busybox pod  label podAntiAffinity                            POD     POD  app node affinity pod  label        POD                POD        140       busybox pod     140    node affinity pod     140                  describe      kubectl describe pod with pod affinity        Events  Type Rea",
        "objectID": "post/理解kubernetes的亲和性",
        "subtitle": "nodeSelector、nodeAffinity、podAffinity、Taints以及Tolerations用法",
        "date": "2018-03-08T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "affinity",
            "调度"
        ],
        "keywords": [
            "kubernetes",
            "亲和性",
            "调度",
            "affinity",
            "nodeSelector",
            "污点",
            "容忍"
        ],
        "slug": "understand-kubernetes-affinity",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1474436799594-1974f1add7ad.jpeg",
                "desc": "Guntersville Lake, United States"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "深入理解 Python 元类",
        "uri": "post/理解Python元类",
        "content": "Stack overflow                    Python OOP                  metaclass                                                                         e satis                   985                       Python                              Python    Python         Smalltalk                                             Python                class ObjectCreator object       pass         my_object   ObjectCreator       print my_object    Python                             class Python                               class ObjectCreator object       pass                      ObjectCreator                                                                         1               2         3            4                            print ObjectCreator                            def echo o       print o         echo ObjectCreator                      print hasattr ObjectCreator   new_attribute   False     ObjectCreator new_attribute    foo                  print hasattr ObjectCreator   new_attribute   True     print ObjectCreator new_attribute foo     ObjectCreatorMirror   ObjectCreator                    print ObjectCreatorMirror                                                              class           def choose_class name       name     foo       class Foo object       pass     return Foo                    else      class Bar object       pass     return Bar         MyClass   choose_class  foo       print MyClass                      print MyClass                                                                                    class       Python               Python           Python                      type                                  print type 1      print type  1       print type ObjectCreator      print type ObjectCreator        type                     type                        type          type                                                         class MyShinyClass object     pass      type           MyShinyClass   type  MyShinyClass                         print MyShinyClass     print MyShinyClass                        MyShinyClass                                                 class Foo object     bar   True       type                             Foo   type  Foo         bar   True           Foo                   print Foo     print Foo bar True     f   Foo       print f     print f bar True                          class FooChild Foo       pass                        FooChild   type  FooChild    Foo            print FooChild     print FooChild bar   bar    Foo     True                                                def echo_bar self       print self bar         FooChild   type  FooChild    Foo      echobar   echobar       hasattr Foo   echo_bar   False     hasattr FooChild   echo_bar   True     my_foo   FooChild       myfoo echobar   True         Python                              class   Python                  metaclass          metaclass                                                  Python                                                 MyClass   MetaClass   MyObject   MyClass                type       MyClass   type  MyClass                  type          type    Python                         type              Type           str       str                int             type                  class         Python                                                                        age   30     age class     name    bob      name class     def foo    pass         foo class     class Bar object   pass         b   Bar       b class            class class             age class class     foo class class     b class class                                        type    Python                        metaclass                   metaclass    class Foo object   metaclass   something            Python           Foo       class Foo object        Foo           Python          metaclass         Python          Foo               type                         class Foo Bar   pass Python           Foo   metaclass          Python        metaclass       Foo            metaclass       Bar                           Python                                                 Python        type                   metaclass                                           type         type      type                                               API                                                                              metaclass                                                         metaclass                                                                   type              def upperattr futureclassname  futureclassparents  futureclass_attr                          attrs     name  value  name  value futureclassattr items   not name startswith  __              uppercase_attr   dict  name upper    value  name  value attrs     type          return type futureclassname  futureclassparents  upper_attr                 metaclass   upper_attr class Foo object             metaclass              bar    bip  print hasattr Foo   bar       False print hasattr Foo   BAR      True f   Foo   print f BAR     bip                      class           type  ",
        "objectID": "post/理解Python元类",
        "date": "2019-02-19T00:00:00.000Z",
        "tags": [
            "python",
            "metaclass"
        ],
        "keywords": [
            "python",
            "元类",
            "metaclass"
        ],
        "slug": "what-is-metaclass-in-python",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/usrgs.jpg",
                "desc": "what is metaclass in python?"
            }
        ],
        "category": "python"
    },
    {
        "title": "用awk做基本运算",
        "uri": "post/用awk做基本计算",
        "content": "awk                                        awk                                                                     2016 03 30 00 02 02 475   17243   140344433927936   MainThread   tasks py 733  DEBUG  upload oss  upload file  data image5 useruploadimage 20160330 00 14584838973975801011834751459267295740 jpg oss cost time 28 ms      28              awk     28             18           18               cat elfin_celery log 2016 03 29 grep  cost  awk  BEGIN  sum 0  sum   18 END print  avg   sum NR   avg  31 5155ms   NR                                        cat elfin_celery log 2016 03 29 grep  cost   awk  BEGIN  min   199999  if   18max 0 max  18 fi END print  Max   max   max 3051ms                  0                                                    http   awk readthedocs org en latest chapter one html http   www xiaoxiaozi com 2009 11 09 1621",
        "objectID": "post/用awk做基本计算",
        "date": "2016-03-31T00:00:00.000Z",
        "tags": [
            "ops",
            "linux",
            "awk"
        ],
        "slug": "awk-base-compute",
        "gitcomment": true,
        "category": "ops"
    },
    {
        "title": "用 Kubernetes 资源对象创建 Grafana Dashboard",
        "uri": "post/用crd来创建grafana图表",
        "content": "Grafana Dashboard                                 Dashboard                     Grafana                  Dashboard                              DARK    Dashboards Resources Kubernetes         Kubernetes          Grafana Dashboard                CRD     Dashboard       Grafana   API Token        Dashboard   CRUD              DARK    Grafana Dashboard    Clone         git clone https   github com K Phoen dark git      CRD       kubectl apply  f k8s crd yaml      Secret      Grafana   API KEYS   Grafana                   API Keys    API Keys    Editor                         API Keys      KEY          Secret       kubectl create secret generic dark tokens   from literal grafana       k8s cluster role yaml          apiVersion  v1 kind  ServiceAccount metadata  name  dark kind  ClusterRole apiVersion  rbac authorization k8s io v1 metadata  name  dashboards viewer rules  apiGroups    k8s kevingomez fr   resources    grafanadashboards   verbs    get    watch    list   apiGroups       resources    events   verbs    create    patch   apiVersion  rbac authorization k8s io v1 kind  ClusterRoleBinding metadata  name  dashboards viewer cluster subjects  kind  ServiceAccount name  dark namespace  default roleRef  kind  ClusterRole name  dashboards viewer apiGroup  rbac authorization k8s io                kubectl apply  f k8s cluster role yaml    k8s deployment yaml      GRAFANA_HOST            Grafana           Grafana      Kubernetes            DNS                dark    ServiceAccount  apiVersion  apps v1 kind  Deployment metadata  name  dark labels  app  dark spec  selector  matchLabels  app  dark template  metadata  labels  app  dark spec  volumes  name  dark tokens secret  secretName  dark tokens serviceAccountName  dark containers  name  dark image  kphoen dark latest env  name  GRAFANA_HOST value  http   grafana kube mon 3000 name  GRAFANA_TOKEN valueFrom  secretKeyRef  key  grafana name  dark tokens              Controller    kubectl apply  f k8s deployment yaml   kubectl pods  l app dark NAME READY STATUS RESTARTS AGE dark 6bd956b8d6 755p2 1 1 Running 0 36m    Controller                   CRD       Grafana Dashboard             GrafanaDashboard                                  annotations variables graph table                            example dashboards yaml  apiVersion  k8s kevingomez fr v1 kind  GrafanaDashboard metadata  name  example dashboard folder   Test folder  spec  title  Awesome dashboard editable  true shared_crosshair  true tags   generated  yaml  auto_refresh  10s tags_annotations  name  Deployments datasource   Prometheus  color    5794F2  tags    deploy    production   variables  interval  name  interval label  Interval values    30s    1m    5m    10m    30m    1h    6h    12h   query  name  status label  HTTP status datasource  Prometheus request   labelvalues prometheushttprequeststotal  code   const  name  percentile label  Percentile default  80 values_map  50th   50  75th   75  80th   80  85th   85  90th   90  95th   95  99th   99  custom  name  vX default  v2 values_map  v1  v1 v2  v2 rows  name  Prometheus panels  graph  title  HTTP Rate height  400px datasource  Prometheus targets  prometheus  query   rate promhttpmetrichandlerrequeststotal  interval    legend     handler        code     graph  title  Heap allocations height  400px datasource  Prometheus targets  prometheus  query   gomemstatsheapallocbytes  legend     job    ref  table  title  Threads datasource  Prometheus targets  prometheus  query   go_threads  hidden_columns    Time   timeseriesaggregations  label  AVG type  avg label  Current type  current single_stat  title  Heap Allocations datasource  Prometheus targets  prometheus  query   gomemstatsheapallocbytes job  prometheus    unit  bytes thresholds    26000000    28000000   color    value   name   Some text  useful  panels  text  title  awesome text  markdown   Markdown syntax help  commonmark org help n  percentile   text  title  awesome html  html   Some awesome html                    kubectl apply  f example dashboards yaml   kubectl dashboards NAME AGE example dashboard 35m   kubectl logs  f dark 6bd956b8d6 755p2 W0327 11 10 24 356194 1 client_config go 543  Neither   kubeconfig nor   master specified  Using inClusterConfig  not work  I0327 11 10 24 360886 1 controller go 87  Setting event handlers I0327 11 10 24 362305 1 controller go 118  Starting dark controller I0327 11 10 24 362341 1 controller go 121  Waiting informer caches sync I0327 11 10 24 462733 1 controller go 126  Starting workers I0327 11 10 24 462820 1 controller go 132  Started workers I0327 11 13 22 641706 1 controller go 197  Successfully synced  default example dashboard  I0327 11 13 22 643061 1 event go 278  Event v1 ObjectReference Kind  GrafanaDashboard   Namespace  default   Name  example dashboard   UID  efc6f96f c7fc 40b5 8b8f 831a95b0a042   APIVersion  k8s kevingomez fr v1   ResourceVersion  48490732   FieldPath       type   Normal  reason   Synced  GrafanaDashboard synced successfully   Controller                              Grafana                  Test folder        Awesome dashboard     Dashboard    ",
        "objectID": "post/用crd来创建grafana图表",
        "date": "2020-03-27T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "prometheus",
            "grafana",
            "operator"
        ],
        "keywords": [
            "kubernetes",
            "prometheus",
            "grafana",
            "dashboard",
            "crd",
            "operator"
        ],
        "slug": "use-crd-create-grafana-dashboard",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200327120114.png",
                "desc": "Hand holding books on white background"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "Kubernetes 应用监控",
        "uri": "post/监控 Kubernetes 应用",
        "content": "Prometheus              HTTP S                        agent         metrics    Prometheus                   HTTP                        metrics      Prometheus                                                 metrics      Kubernetes       istio                                             exporter             mysqldexporter nodeexporter    exporter                agent                               Prometheus                      ingress           Traefik      ingress controller     Kubernetes                  Traefik         metrics                     metrics   metrics prometheus  entryPoint    traefik  buckets    0 1  0 3  1 2  5 0               web   web metrics prometheus                             traefik toml                      ConfigMap   Pod        Traefik Pod                 IP    kubectl svc  n kube system NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE        traefik ingress service NodePort 10 101 33 56 80 31692 TCP 8080 32115 TCP 63d         curl        Prometheus             NodePort          curl 10 101 33 56 8080 metrics HELP gogcduration_seconds summary GC invocation durations  TYPE gogcduration_seconds summary gogcduration_seconds quantile  0   0 000121036 gogcduration_seconds quantile  0 25   0 000210328 gogcduration_seconds quantile  0 5   0 000279974 gogcduration_seconds quantile  0 75   0 000420738 gogcduration_seconds quantile  1   0 001191494 gogcdurationsecondssum 0 004353914 gogcdurationsecondscount 12 HELP go_goroutines Number goroutines currently exist  TYPE go_goroutines gauge go_goroutines 63                Traefik                           metrics     prometheus yml           prometheus   job     prome cm yaml  apiVersion  v1 kind  ConfigMap metadata  name  prometheus config namespace  kube ops data  prometheus yml    global  scrape_interval  30s scrape_timeout  30s scrape_configs  job_name   prometheus  static_configs  targets    localhost 9090   job_name   traefik  static_configs  targets    traefik ingress service kube system svc cluster local 8080                     scrape_configs                basicauth   bearertoken         metrics     basic                        header       token       kubernetessdconfigs   consulsdconfigs                          Traefik     servicename  traefik ingress service     kube system    namespace           targets          FQDN    traefik ingress service kube system svc cluster local        Traefik   Prometheus                    servicename serviceport              ConfigMap         kubectl delete  f prome cm yaml configmap  prometheus config  deleted   kubectl create  f prome cm yaml configmap  prometheus config  created    Prometheus                       Pod    prometheus yml                Prometheus           web enable lifecycle                 reload              kubectl svc  n kube ops NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE prometheus NodePort 10 102 74 90 9090 30358 TCP 3d   curl  X POST  http   10 102 74 90 9090   reload       ConfigMap    Volume        Pod                                  reload    url     POST             service   CLUSTER IP PORT                         Prometheus   Dashboard                        traefik                       Graph              Traefik                                       metrics                            Prometheus         Kubernetes        exporter                         metrics    Prometheus                   exporter      Prometheus         Prometheus                exporter                              exporters           redis exporter       redis                  sidecar               Pod               redis       redis exporter             Prometheus              prome redis yaml  apiVersion  extensions v1beta1 kind  Deployment metadata  name  redis namespace  kube ops spec  template  metadata  annotations  prometheus io scrape   true  prometheus io port   9121  labels  app  redis spec  containers  name  redis image  redis 4 resources  requests  cpu  100m memory  100Mi ports  containerPort  6379 name  redis exporter image  oliver006 redis_exporter latest resources  requests  cpu  100m memory  100Mi ports  containerPort  9121 kind  Service apiVersion  v1 metadata  name  redis namespace  kube ops spec  selector  app  redis ports  name  redis port  6379 targetPort  6379 name  prom port  9121 targetPort  9121           redis    Pod               redis                 redis_exporter                kubectl create  f prome redis yaml deployment extensions  redis  created service  redis  created              redis   Pod              kubectl pods  n kube ops NAME READY STATUS RESTARTS AGE prometheus 8566cd9699 gt9wh 1 1 Running 0 3d redis 544b6c8c54 8xd2g 2 2 Running 0 3m   kubectl svc  n kube ops NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE prometheus NodePort 10 102 74 90 9090 30358 TCP 3d redis ClusterIP 10 104 131 44 6379 TCP 9121 TCP 5m        9121                   curl 10 104 131 44 9121 metrics HELP gogcduration_seconds summary GC invocation durations  TYPE gogcduration_seconds summary gogcduration_seconds quantile  0   0 gogcduration_seconds quantile  0 25   0 gogcduration_seconds quantile  ",
        "objectID": "post/监控 Kubernetes 应用",
        "subtitle": "使用 Prometheus 监控 Kubernetes 集群应用",
        "date": "2018-10-28T00:00:00.000Z",
        "slug": "promethues-monitor-k8s-app",
        "tags": [
            "prometheus",
            "monitor",
            "kubernetes"
        ],
        "keywords": [
            "kubernetes",
            "监控",
            "prometheus"
        ],
        "gitcomment": true,
        "notoc": true,
        "category": "kubernetes"
    },
    {
        "title": "监控 Kubernetes 集群节点",
        "uri": "post/监控 Kubernetes 集群节点",
        "content": "Promethues     Kubernetes             Kubernetes                                                          Kubernetes             cpu load disk memory                  kube scheduler kube controller manager kubedns coredns                 metrics    Deployment              API              Kubernetes                     Heapster Heapster                     Pod               Kubelet cAdvisor           Heapster              kube state metrics                       Heapster                 metrics server     cAdvisor cAdvisor Google                                 Docker      Kubernetes              cAdvisor    kubelet                 Kube state metrics kube state metrics     API Server                  Deployment Node Pod        kube state metrics          metrics                         Prometheus              metrics server metrics server                      Heapster          metrics server                        kube state metrics   metrics server                       kube state metrics                     Deployment Pod       metrics server            API        CPU                                                                                   Nagios zabbix                       Prometheus                  nodeexporter         nodeexporter                          node_exporter                 conntrack cpu diskstats filesystem loadavg meminfo netstat               Github repo         DaemonSet                              Pod                                 node exporter                        prome node exporter yaml  apiVersion  extensions v1beta1 kind  DaemonSet metadata  name  node exporter namespace  kube ops labels  name  node exporter spec  template  metadata  labels  name  node exporter spec  hostPID  true hostIPC  true hostNetwork  true containers  name  node exporter image  prom node exporter v0 16 0 ports  containerPort  9100 resources  requests  cpu  0 15 securityContext  privileged  true args    path procfs  host proc   path sysfs  host sys   collector filesystem ignored mount points      sys proc dev host etc         volumeMounts  name  dev mountPath   host dev name  proc mountPath   host proc name  sys mountPath   host sys name  rootfs mountPath   rootfs tolerations  key   node role kubernetes io master  operator   Exists  effect   NoSchedule  volumes  name  proc hostPath  path   proc name  dev hostPath  path   dev name  sys hostPath  path   sys name  rootfs hostPath  path                               node exporter                Pod         Pod               hostPID  true hostIPC  true hostNetwork  true3            PID namespace IPC namespace           namespace                      namespace       namespace                        dev  proc  sys                                                     top        cpu              proc stat   free                        proc meminfo                 kubeadm            master                                                                      kubectl create  f prome node exporter yaml daemonset extensions  node exporter  created   kubectl pods  n kube ops  o wide NAME READY STATUS RESTARTS AGE IP NODE node exporter jfwfv 1 1 Running 0 30m 10 151 30 63 node02 node exporter kr8rt 1 1 Running 0 30m 10 151 30 64 node03 node exporter whb7n 1 1 Running 0 20m 10 151 30 57 master prometheus 8566cd9699 gt9wh 1 1 Running 0 4d 10 244 4 39 node02 redis 544b6c8c54 8xd2g 2 2 Running 0 23h 10 244 2 87 node03              3           Pod                     Service             metrics              hostNetwork true                  9100                         curl 127 0 0 1 9100 metrics     nodefilesystemdevice_error device  shm  fstype  tmpfs  mountpoint   rootfs var lib docker containers aefe8b1b63c3aa5f27766053ec817415faf8f6f417bb210d266fef0c2da64674 shm   1 nodefilesystemdevice_error device  shm  fstype  tmpfs  mountpoint   rootfs var lib docker containers c8652ca72230496038a07e4fe4ee47046abb5f88d9d2440f0c8a923d5f3e133c shm   1 nodefilesystemdevice_error device  tmpfs  fstype  tmpfs  mountpoint   dev   0 nodefilesystemdevice_error device  tmpfs  fstype  tmpfs  mountpoint   dev shm   0                                  Helm           helm install   name node exporter stable prometheus node exporter   namespace kube ops            3          node exporter             Service                      Prometheus                                                 Prometheus            node exporter                                        Kubernetes   Promethues     Kubernetes API          5            Node Service Pod Endpoints Ingress       kubectl                            kubectl nodes NAME STATUS ROLES AGE VERSION master Ready master 165d v1 10 0 node02 Ready 85d v1 10 0 node03 Ready 145d v1 10 0      Prometheus                              Node               prometheus yml          job       job_name   kubernetes nodes  tls_config  ca_file   var run secrets kubernetes io serviceaccount ca crt bearertokenfile   var run secrets kubernetes io serviceaccount token kubernetessdconfigs  role  node     kubernetessdconfigs    node Prometheus       Kubernetes        node         job    ",
        "objectID": "post/监控 Kubernetes 集群节点",
        "subtitle": "使用 Prometheus 监控 Kubernetes 集群节点",
        "date": "2018-11-05T00:00:00.000Z",
        "slug": "promethues-monitor-k8s-nodes",
        "tags": [
            "prometheus",
            "monitor",
            "kubernetes"
        ],
        "keywords": [
            "kubernetes",
            "监控",
            "prometheus"
        ],
        "gitcomment": true,
        "notoc": true,
        "category": "kubernetes"
    },
    {
        "title": "Skaffold-简化本地开发kubernetes应用的神器",
        "uri": "post/简化本地持续开发kubernetes应用的神器-Skaffold",
        "content": "kubernetes                                CI CD      kubernetes                                                     CI CD                                         kubernetes                                                 Skaffold               kubernetes        Skaffold          kubernetes                              Skaffold             Kubernetes                                  Kubernetes    Skaffold                                     CI CD                                   Skaffold     Skaffold                                                        TAG          kubernetes  manifest                                                       manifest            Skaffold                                        gif      Skaffold          Skaffold                  kubernetes     minikube  Docker MAC Windows Edge                      Skaffold  1  skaffold      Linux              curl  Lo skaffold https   storage googleapis com skaffold releases latest skaffold linux amd64    chmod  x skaffold    sudo mv skaffold  usr local bin      OSX          curl  Lo skaffold https   storage googleapis com skaffold releases latest skaffold darwin amd64    chmod  x skaffold    sudo mv skaffold  usr local bin                             Skaffold github release            2  Kubernetes     Minikube  GKE  Docker Mac Edge  Docker Windows Edge           kubernetes                       Docker Mac Edge  3  kubectl    kubernetes    kubectl                              4  Docker             5  Docker                                                Docker Hub                   docker hub                                   Skaffold                Skaffold        clone      git clone https   github com GoogleCloudPlatform skaffold        examples getting started        cd examples getting started   tree         Dockerfile     k8s pod yaml     main go     skaffold gcb yaml     skaffold yaml 0 directories  5 files              golang    main go  package main import    fmt   time    func main       fmt Println  Hello Skaffold    time Sleep time Second   2        skaffold gcb yaml                 google cloud            skaffold yaml                        cnych skaffold example      apiVersion  skaffold v1alpha1 kind  Config build  artifacts  imageName  cnych skaffold example workspace    local     deploy  kubectl  manifests  paths  k8s   parameters  IMAGE_NAME  cnych skaffold example         k8s pod yaml             IMAGE_NAME        Skaffold                                   apiVersion  v1 kind  Pod metadata  name  getting started spec  containers  name  getting started image  IMAGE_NAME         getting started      skaffold dev       skaffold dev Starting build    Found minikube Docker Desktop context  using local docker daemon  Sending build context Docker daemon 6 144kB Step 1 5   golang 1 9 4 alpine3 7      fb6e10bf973b Step 2 5   WORKDIR  go src github com GoogleCloudPlatform skaffold examples getting started      Using cache      e6ae5322ee52 Step 3 5   CMD     app        Using cache      bac5f3fd392e Step 4 5   COPY main go        Using cache      47fa1e536263 Step 5 5   RUN go build  o app main go      Using cache      f1470fe9f398 Successfully built f1470fe9f398 Successfully tagged a250d03203f9a5df267d8ad63bae8dba latest Successfully tagged cnych skaffold example f1470fe9f3984775f5dea87b5f720d67b6c2eeaaf2ca5efd1ca3c3ec7c4d4cce Build complete  Starting deploy    Deploying k8s pod yaml    Deploy complete  Dependencies may incomplete   getting started getting started  Hello Skaffold   getting started getting started  Hello Skaffold  Skaffold                       Docker       sha256           skaffold yaml       kubernetes manifests        kubectl apply  f      kubernetes                 pod             getting started getting started  Hello Skaffold   getting started getting started  Hello Skaffold   getting started getting started  Hello Skaffold            kubectl          POD    kubectl pods NAME READY STATUS RESTARTS AGE getting started 1 1 Running 3 1h              POD          kubectl pod getting started  o yaml     spec  containers  image  cnych skaffold example f1470fe9f3984775f5dea87b5f720d67b6c2eeaaf2ca5efd1ca3c3ec7c4d4cce imagePullPolicy  IfNotPresent name  getting started                 POD              docker                docker images  grep skaffold cnych skaffold example f1470fe9f3984775f5dea87b5f720d67b6c2eeaaf2ca5efd1ca3c3ec7c4d4cce f1470fe9f398 8 minutes ago 271MB             main go    package main import    fmt   time    func main       fmt Println  Hello blog qikqiak com    time Sleep time Second   2                   POD         getting started getting started  Hello Skaffold   getting started getting started  Hello Skaffold   getting started getting started  Hello blog qikqiak com   getting started getting started  Hello blog qikqiak com   getting started getting started  Hello blog qikqiak com   getting started getting started  Hello blog qikqiak com   getting started getting started  Hello blog qikqiak com                                      POD                           Skaffold                                    Skaffold ",
        "objectID": "post/简化本地持续开发kubernetes应用的神器-Skaffold",
        "subtitle": "墙裂推荐kubernetes应用开发者使用的工具",
        "date": "2018-03-27T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "skaffold",
            "CI/CD"
        ],
        "keywords": [
            "kubernetes",
            "skaffold",
            "持续开发",
            "神器",
            "CI/CD"
        ],
        "slug": "skaffold-simple-local-develop-k8s-app-tools",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1509565840034-3c385bbe6451.jpeg",
                "desc": "nothing"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "给博客加上HTTPS",
        "uri": "post/给博客加上https",
        "content": "https     https           https                                                       https   Let s Encrypt Let s Encrypt         HTTPS                  CA          Let s Encrypt      CA      Let s Encrypt                           Let s Encrypt   Nginx        HTTPS       Certbot Let s Encrypt                        Let s Encrypt          yum install certbot       certbot certonly   email icnych gmail com   agree tos   webroot  w  var www blogs  d blog qikqiak com      w          d                                                    etc letsencrypt live blog qikqiak com         ls  etc letsencrypt live blog qikqiak com  cert pem chain pem fullchain pem privkey pem README           Nginx   https                 Nginx          443     SSL    SSL                    server   listen 443  ssl on  ssl_certificate  etc letsencrypt live blog qikqiak com fullchain pem  sslcertificatekey  etc letsencrypt live blog qikqiak com privkey pem  server_name blog qikqiak com  root  home notes apps blog  index index html              Nginx      nginx  s reload       https   blog qikqiak com                      http   blog qikqiak com    http           http   https                   301                   server   listen 80  server_name blog qikqiak com  rewrite        https    host 1 permanent    server   listen 443  ssl on  ssl_certificate  etc letsencrypt live blog qikqiak com fullchain pem  sslcertificatekey  etc letsencrypt live blog qikqiak com privkey pem  server_name blog qikqiak com  root  home notes apps blog  index index html                   https             Let s Encrypt        90                  certbot                             crontab            crontab  l 30 5 1     root  usr bin certbot renew   renew hook   usr sbin nginx  s reload",
        "objectID": "post/给博客加上https",
        "date": "2017-11-06T00:00:00.000Z",
        "tags": [
            "https",
            "nginx",
            "ops"
        ],
        "slug": "make-https-blog",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/15802194_206063646464303_2027400919364141056_n.jpg",
                "desc": "普吉岛@泰国 JANUARY 8,2017"
            }
        ],
        "category": "ops"
    },
    {
        "title": "自定义django admin后台的action",
        "uri": "post/自定义django-admin后台的action",
        "content": "django                 admin                                django admin                  action              action                              class PhotoDescAdmin admin ModelAdmin   def pub_time self  obj   return obj photo pub_time strftime   Y  m  d   pubtime shortdescription              def make_published self  request  queryset   queryset update enabled True  makepublished shortdescription                   listdisplay     id    pubtime    category    photo    description    userid    username    enabled    created_at   listfilter     createdat    category    search_fields     description    ordering      created_at    rawidfields     photo    category     actions    make_published         make_published        PhotoDescAdmin  actions         django admin     photodesc         action",
        "objectID": "post/自定义django-admin后台的action",
        "date": "2014-07-02T00:00:00.000Z",
        "tags": [
            "django",
            "admin",
            "action"
        ],
        "slug": "custom-django-admin-actions",
        "category": "django",
        "gitcomment": true
    },
    {
        "title": "使用 Golang 自定义 Kubernetes Ingress Controller",
        "uri": "post/自定义Ingress Controller",
        "content": "Kubernetes     Ingress                                            Ingress Controller           traefik ingress nginx       Ingress Controller         golang              Ingress Controller         Ingress             Kubernetes                Web                  Deployment        Service                 whoami                  whoami yaml  apiVersion  apps v1 kind  Deployment metadata  name  whoami labels  app  whoami spec  replicas  1 selector  matchLabels  app  whoami template  metadata  labels  app  whoami spec  containers  name  whoami image  cnych whoami ports  containerPort  80 kind  Service apiVersion  v1 metadata  name  whoami spec  selector  app  whoami ports  protocol  TCP port  80 targetPort  80                       kubectl apply  f whoami yaml           Kubernetes              whoami default svc cluster local      Web                                NodePort     Service                                                            DaemonSet              Nginx     spec  hostNetwork  true containers  image  nginx 1 15 3 alpine name  nginx ports  name  http containerPort  80 hostPort  80      hostNetwork true         80                          IP     80       Nginx                                      Nginx                                                                    Kubernetes        Ingress  Ingress    Kubernetes         Ingress                             Ingress            apiVersion  extensions v1beta1 kind  Ingress metadata  name  whoami spec  tls  hosts     qikqiak com  secretName  qikqiak tls rules  host  who qikqiak com http  paths  path    backend  serviceName  whoami servicePort  80             HTTP                  who qikqiak com           whoami       Pod           HTTPS             qikqiak com        qikqiak tls                      Nginx                     Ingress Controllers         Ingress                                              Ingress Controller          Ingress                        Ingress          Ingress Controllers             Ingress Controller                      traefik    ingress nginx                     Ingress Controller                   Ingress Controller                                    Ingress Controller        Golang           Ingress Controller                         Kubernetes API       Service Ingress    Secret         TLS      HTTPS          Kubernetes          HTTP                                      80   443          HTTP                              443       TLS                            Kubernetes               rest        NewForConfig       Kubernetes                  Service                            kubeconfig        Config  config  err    rest InClusterConfig   err    nil   log Fatal   Err err  Msg  get kubernetes configuration failed     client  err    kubernetes NewForConfig config  err    nil   log Fatal   Err er  Msg  create kubernetes client failed              Watcher   Payload Watcher        Kubernetes     Payloads   Payloads       HTTP           Kubernetes           Watcher     Kubernetes        type Payload struct   Ingresses   IngressPayload TLSCertificates map string  tls Certificate         IngressPayload     Ingress           type IngressPayload struct   Ingress  extensionsv1beta1 Ingress ServicePorts map string map string int               Ingress                                   Service         Watcher        Ingress Service Secret           Kubernetes       Ingress     Watcher type Watcher struct   client kubernetes Interface onChange func  Payload                     onChange                       k8s io client go informers                          list   watch Kubernetes                      SharedInformerFactory    Listers     func  w  Watcher  Run ctx context Context  error   factory    informers NewSharedInformerFactory w client  time Minute  secretLister    factory Core   V1   Secrets   Lister   serviceLister    factory Core   V1   Services   Lister   ingressLister    factory Extensions   V1beta1   Ingresses   Lister                onChange                                                                  Watcher   HTTP           goroutine                                                              listing ingresses       ingresses  err    ingressLister List labels Everything    err    nil   log Error   Err err  Msg  failed list ingresses   return        ingress        TLS       secrets          _  rec    range ingress Spec TLS   rec SecretName         secret  err    secretLister Secrets ingress Namespace  Get rec SecretName  err    nil   log Error   Err err  Str  namespace   ingress Namespace  Str  name   rec SecretName  Msg  unknown secret   continue   cert  err    tls X509KeyPair secret Data  tls crt    secret Data  tls key    err    nil   log Error   Err err  Str  namespace   ingress Namespace  Str  name   rec SecretName  Msg  invalid tls certificate   continue   payload TLSCertificates rec SecretName     cert     Go                           TLS          HTTP              addBackend        addBackend    func ingressPayload  IngressPayload  backend extensionsv1beta1 IngressBackend    svc  err    serviceLister Services ing",
        "objectID": "post/自定义Ingress Controller",
        "date": "2019-10-31T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "ingress",
            "golang"
        ],
        "keywords": [
            "kubernetes",
            "ingress",
            "golang",
            "ingress controller",
            "traefik",
            "nginx"
        ],
        "slug": "custom-k8s-ingress-controller-with-go",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1572444768149-925f4150c0b2.jpeg",
                "desc": "https://unsplash.com/photos/eIiHJH4wfq0"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "自定义 Kubernetes 调度器",
        "uri": "post/自定义调度器",
        "content": "kube scheduler   kubernetes                                        Pod                                             kubernetes                                                         kube scheduler                                                        Pod                                       kubernetes                      Pod                                                    kube scheduler                        Pod        Node                            API Server     PodSpec NodeName     Pod     Pod        binding                                                                                                                                      Pod                                                     kubernetes                                                     kubernetes       kubernetes          kubernetes pkg scheduler                                   kubernetes pkg scheduler    scheduler go                 algorithm       predicates                priorities              algorithmprovider       defaults               Scheduler                   pkg scheduler scheduler go      kube scheduler              cmd kube scheduler scheduler go                 4    Kubernetes                  clone     kube scheduler                                                                                                                                   Pod   spec schedulerName        Pod       default                                      Pod                                         Pod                       Pod                                                            Kubernetes           Kubernetes API                                                                           Webhook                                                              Scheduling Framework  Kubernetes v1 15                                                           API   API                                                   v1 16                                                                                                  Kubernetes                                 kubeadm                 etc kubernetes manifests kube schdueler yaml  watch apiserver   spec nodeName     Pod                      Pop     Pod               Pod                CPU       nodeSelector nodeAffinity                                Pod                             Pod                                                    apiserver                 Pod   spec nodeName         Pod                             config                            KubeSchedulerConfiguration             etc kubernetes scheduler extender yaml       config         apiVersion  kubescheduler config k8s io v1alpha1 kind  KubeSchedulerConfiguration clientConnection  kubeconfig    etc kubernetes scheduler conf  algorithmSource  policy  file  path    etc kubernetes scheduler extender policy yaml                                algorithmSource policy                   ConfigMap                                    Pod                                 etc kubernetes scheduler extender policy yaml      kubernetes pkg scheduler apis config legacy_types go L28            v1 16 2         JSON   YAML                                Extender                apiVersion  v1 kind  Policy extenders  urlPrefix   http   127 0 0 1 8888   filterVerb   filter  prioritizeVerb   prioritize  weight  1 enableHttps  false       Policy           extenders                                       predicates   priorities                      DefaultProvier     kind    Policy    apiVersion    v1    predicates       name    MatchNodeSelector        name    PodFitsResources        name    PodFitsHostPorts       name    HostName        priorities       name    EqualPriority    weight   2       name    ImageLocalityPriority    weight   4       name    LeastRequestedPriority    weight   2       name    BalancedResourceAllocation    weight   2       extenders       urlPrefix     prefix    filterVerb    filter    prioritizeVerb    prioritize    weight   1   bindVerb    bind    enableHttps   false                 HTTP                127 0 0 1 8888                                                                                                             golang                                       func main     router    httprouter New   router GET      Index  router POST   filter   Filter  router POST   prioritize   Prioritize  log Fatal http ListenAndServe   8888   router                  filter    prioritize               Filter                 schedulerapi ExtenderArgs                schedulerapi ExtenderFilterResult                            filter                    func filter args schedulerapi ExtenderArgs   schedulerapi ExtenderFilterResult   var filteredNodes   v1 Node failedNodes    make schedulerapi FailedNodesMap  pod    args Pod _  node    range args Nodes Items   fits  failReasons  _    podFitsOnNode pod  node  fits   filteredNodes   append filteredNodes  node    else   failedNodes node Name    strings Join failReasons           result    schedulerapi ExtenderFilterResult  Nodes   v1 NodeList  Items  filteredNodes     FailedNodes  failedNodes  Error ",
        "objectID": "post/自定义调度器",
        "date": "2020-01-07T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "scheduler",
            "golang"
        ],
        "keywords": [
            "kubernetes",
            "scheduler",
            "golang",
            "调度器",
            "调度框架"
        ],
        "slug": "custom-kube-scheduler",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1578330363822-1d27f7e8108c.jpeg",
                "desc": "https://unsplash.com/photos/mVsgmImgq8c"
            }
        ],
        "category": "kubernetes"
    },
    {
        "title": "获取客户端访问真实 IP",
        "uri": "post/获取客户端真实IP",
        "content": "Pod           IP                                       SNAT          IP             Pod            IP                 nginx                    IP               apiVersion  apps v1 kind  Deployment metadata  name  nginx spec  replicas  3 selector  matchLabels  app  nginx template  metadata  labels  app  nginx spec  containers  name  nginx image  nginx 1 7 9 ports  containerPort  80 apiVersion  v1 kind  Service metadata  name  nginx spec  selector  app  nginx type  NodePort ports  protocol  TCP port  80 targetPort  80           nginx            32761   NodePort       kubectl svc NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE kubernetes ClusterIP 10 96 0 1 443 TCP 28d nginx NodePort 10 106 190 194 80 32761 TCP 48m   kubectl pods  o wide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES nginx 54f57cf6bf nwtjp 1 1 Running 0 3m 10 244 3 15 ydzs node3 nginx 54f57cf6bf ptvgs 1 1 Running 0 2m59s 10 244 2 13 ydzs node2 nginx 54f57cf6bf xhs8g 1 1 Running 0 2m59s 10 244 1 16 ydzs node1        3  Pod       3                 master     NodePort                     master                   nginx   Pod              clientIP   10 151 30 11     master       IP                    IP       kubectl logs  f nginx 54f57cf6bf xhs8g 10 151 30 11      07 Dec 2019 16 44 38  0800   GET   HTTP 1 1  200 612      Mozilla 5 0  Macintosh  Intel Mac OS X 10145  AppleWebKit 537 36  KHTML  Gecko  Chrome 78 0 3904 108 Safari 537 36              master           Pod      master                                Pod                 SNAT        master     IP           Service    externalTrafficPolicy          spec  externalTrafficPolicy  Local    Service      externalTrafficPolicy Local                      Service           Pod          Pod                                    master     NodePort               master           Pod                            Pod                                            Pod                                         3   Pod           Pod    B      Pod                            Pod           50      B      Pod        25          externalTrafficPolicy  Local                  Pod                         SNAT                IP         Pod      master      apiVersion  apps v1 kind  Deployment metadata  name  nginx spec  replicas  3 selector  matchLabels  app  nginx template  metadata  labels  app  nginx spec  tolerations  operator   Exists  nodeSelector  kubernetes io hostname  ydzs master containers  name  nginx image  nginx 1 7 9 ports  containerPort  80 apiVersion  v1 kind  Service metadata  name  nginx spec  externalTrafficPolicy  Local selector  app  nginx type  NodePort ports  protocol  TCP port  80 targetPort  80             NodePort                     IP        kubectl logs  f nginx ddc8f997b ptb7b 182 149 166 11      07 Dec 2019 17 03 43  0800   GET   HTTP 1 1  200 612      Mozilla 5 0  Macintosh  Intel Mac OS X 10145  AppleWebKit 537 36  KHTML  Gecko  Chrome 78 0 3904 108 Safari 537 36",
        "objectID": "post/获取客户端真实IP",
        "date": "2020-03-03T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "docker"
        ],
        "keywords": [
            "kubernetes",
            "docker",
            "镜像"
        ],
        "slug": "get-client-realip",
        "gitcomment": true,
        "category": "kubernetes",
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200303153403.png",
                "desc": "https://unsplash.com/photos/EfIcvL2R5Ac"
            }
        ]
    },
    {
        "title": "解决 CoreDNS 自定义域名失效的问题",
        "uri": "post/记一次CoreDNS排错经历",
        "content": "CoreDNS  5             NodeLocal DNSCache            DNS                                  DevOps                                                         Pod    hostAlias           Jenkins   Kubernetes                    YAML                  CoreDNS                        CoreDNS   ConfigMap     hosts           hosts   10 151 30 11 git k8s local fallthrough                              kubectl run  it   image busybox 1 28 4 test   restart Never   rm  bin sh don t command prompt  try pressing enter      nslookup git k8s local Server  169 254 20 10 Address 1  169 254 20 10 nslookup  can t resolve  git k8s local           hosts                                     CoreDNS                              search                                               NodeLocal DNSCache                               CoreDNS                       CoreDNS                   nslookup git k8s local 10 96 0 10 Server  10 96 0 10 Address 1  10 96 0 10 kube dns kube system svc cluster local Name  git k8s local Address 1  10 151 30 11 git k8s local                CoreDNS                    NodeLocal DNSCache         LocalDNS     169 254 20 10                 nslookup git k8s local 169 254 20 10 Server  169 254 20 10 Address 1  169 254 20 10 nslookup  can t resolve  git k8s local            LocalDNS   Pod        kubectl logs  f node local dns bb84m  n kube system        2020 05 14 05 30 21  INFO  Updated Corefile 0 custom stubdomains upstream servers  etc resolv conf 2020 05 14 05 30 21  INFO  Using config file  cluster local 53   errors cache   success 9984 30 denial 9984 5   reload loop bind 169 254 20 10 10 96 0 10 forward   10 96 207 156   force_tcp   prometheus  9253 health 169 254 20 10 8080   in addr arpa 53   errors cache 30 reload loop bind 169 254 20 10 10 96 0 10 forward   10 96 207 156   force_tcp   prometheus  9253   ip6 arpa 53   errors cache 30 reload loop bind 169 254 20 10 10 96 0 10 forward   10 96 207 156   force_tcp   prometheus  9253     53   errors cache 30 reload loop bind 169 254 20 10 10 96 0 10 forward    etc resolv conf   force_tcp   prometheus  9253           INFO  plugin reload  Running configuration MD5   3e3833f9361872f1d34bc97155f952ca CoreDNS 1 6 7 linux amd64  go1 11 13          LocalDNS          10 96 0 10   CoreDNS   Service ClusterIP 169 254 20 10   LocalDNS   IP    10 96 207 156   LocalDNS       Service ClusterIP   Service   CoreDNS           CoreDNS   Endpoints              cluster local in addr arpa    ip6 arpa      forward     10 96 207 156      CoreDNS          forward    etc resolv conf    resolv conf                   nameserver 169 254 20 10 search default svc cluster local svc cluster local cluster local options ndots 5           git k8s local               cluster local        forward   CoreDNS     CoreDNS                              hosts       LocalDNS                          kubectl edit cm node local dns  n kube system          53   errors hosts           10 151 30 11 git k8s local fallthrough   cache 30 reload loop bind 169 254 20 10 10 96 0 10 forward   PILLARUPSTREAMSERVERS   force_tcp   prometheus  9253                         NodeLocalDNS Pod         NodeLocalDNS   Pod                     no action found directive  hosts  server type  dns           hosts               CoreDNS                 forward    etc resolv conf     forward   10 96 207 156       CoreDNS       NodeLocalDNS   ConfigMap              kubectl edit cm node local dns  n kube system          53   errors cache 30 reload loop bind 169 254 20 10 10 96 0 10 forward   PILLARCLUSTERDNS   force_tcp   prometheus  9253                       NodeLocalDNS   Pod         PILLARCLUSTERDNS   PILLARUPSTREAMSERVERS          1 15 6                      kube dns   ConfigMap      Upstream Server                                 nslookup git k8s local Server  169 254 20 10 Address 1  169 254 20 10 Name  git k8s local Address 1  10 151 30 11 git k8s local      NodeLocalDNS                   hosts    rewrite",
        "objectID": "post/记一次CoreDNS排错经历",
        "date": "2020-05-14T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "coredns"
        ],
        "keywords": [
            "kubernetes",
            "coredns",
            "hosts",
            "rewrite",
            "插件",
            "A 记录"
        ],
        "slug": "resolve-coredns-hosts-invalid",
        "gitcomment": true,
        "notoc": true,
        "category": "kubernetes",
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200514172611.png",
                "desc": "https://unsplash.com/photos/xqSDI58vkUY"
            }
        ]
    },
    {
        "title": "Helm V2 迁移到 V3 版本",
        "uri": "post/迁移Helm到v3",
        "content": "Helm V3            Beta        V2   V3                          V2           V3                                                    helm 2to3                     Helm V3       Helm V2 CLI                               CLI                            V2                Helm GitHub          V3 Beta       https   github com helm helm releases                          Mac       MacOS amd64                Helm CLI      helm3      PATH       usr local bin                 helm3        helm3 version version BuildInfo Version  v3 0 0 beta 3   GitCommit  5cb923eecbe80d1ad76399aee234717c11931d9a   GitTreeState  clean   GoVersion  go1 12 9     helm repo list NAME URL stable http   mirror azure cn kubernetes charts  local http   127 0 0 1 8879 charts   helm3 repo list Error  no repositories show          helm3               chart       HELM 2TO3    helm 2to3           Helm V2        release     Helm V3          Kubernetes                                                       helm3 plugin install https   github com helm helm 2to3 Downloading installing helm 2to3 v0 1 1     https   github com helm helm 2to3 releases download v0 1 1 helm 2to30 1 1darwin_amd64 tar gz Installed plugin  2to3        helm3                 helm3 plugin list NAME VERSION DESCRIPTION 2to3 0 1 1 migrate Helm v2 configuration releases in place Helm v3   helm3 2to3 Migrate Helm v2 configuration releases in place Helm v3 Usage  2to3  command  Available Commands  convert migrate Helm v2 release in place Helm v3 help Help command move migrate Helm v2 configuration in place Helm v3 Flags   h    help help 2to3 Use  2to3  command    help  information command            helm 2to3                                      Helm V2       Helm V2 release                  Helm V2             Helm V2                 helm3 2to3 move config  Helm 2  Home directory   Users ych  helm  Helm 3  Config directory   Users ych Library Preferences helm  Helm 3  Data directory   Users ych Library helm  Helm 3  Create config folder   Users ych Library Preferences helm     Helm 3  Config folder   Users ych Library Preferences helm  created   Helm 2  repositories file   Users ych  helm repository repositories yaml  will copy  Helm 3  config folder   Users ych Library Preferences helm repositories yaml     Helm 2  repositories file   Users ych  helm repository repositories yaml  copied successfully  Helm 3  config folder   Users ych Library Preferences helm repositories yaml     Helm 3  Create data folder   Users ych Library helm     Helm 3  data folder   Users ych Library helm  created   Helm 2  plugins   Users ych  helm plugins  will copy  Helm 3  data folder   Users ych Library helm plugins     Helm 2  plugins   Users ych  helm plugins  copied successfully  Helm 3  data folder   Users ych Library helm plugins     Helm 2  starters   Users ych  helm starters  will copy  Helm 3  data folder   Users ych Library helm starters     Helm 2  starters   Users ych  helm starters  copied successfully  Helm 3  data folder   Users ych Library helm starters              Chart starters Chart                          Helm V2            Helm V3                               Chart         helm3 repo list NAME URL stable http   mirror azure cn kubernetes charts  local http   127 0 0 1 8879 charts   helm3 plugin list NAME VERSION DESCRIPTION 2to3 0 1 1 migrate Helm v2 configuration releases in place Helm v3 push 0 7 1 Push chart package ChartMuseum              Chart         Helm V3           V2       Chart             move config       Helm V3                      repositories yaml                         Helm V2       Helm V3                       export HELMV2HOME  HOME  helm2   export HELMV3CONFIG  HOME  helm3   export HELMV3DATA  PWD  helm3   helm3 2to3 move config    Helm V2 Release            releases                         helm3 2to3 convert  h migrate Helm v2 release in place Helm v3 Usage  2to3 convert  flags  RELEASE Flags    delete v2 releases v2 releases deleted migration  default  v2 releases retained   dry run simulate convert  h    help help convert  l    label string label select tiller resources  default  OWNER TILLER    s    release storage string v2 release storage type object   secrets   configmaps   used  tiller out cluster  flag  default  secrets    t    tiller ns string namespace Tiller  default  kube system     tiller out cluster when Tiller not running cluster e g  Tillerless           tiller out cluster         Tillerless Helm v2           Helm V2     release                 helm list NAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACE minio 1 Wed Sep 11 11 47 51 2019 DEPLOYED minio 2 5 13 RELEASE 2019 08 07T01 59 21Z argo redis 1 Wed Sep 11 14 52 57 2019 DEPLOYED redis 9 1 7 5 0 5 redis                 dry run                            helm3 2to3 convert   dry run minio NOTE  dry run mode  following actions will not executed  Run without   dry run actions described below  Release  minio  will converted Helm 2 Helm 3   Helm 3  Release  minio  will created   Helm 3  ReleaseVersion  minio v1  will created           dry run                                      helm3 2to3 convert minio Releas",
        "objectID": "post/迁移Helm到v3",
        "date": "2019-09-16T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "helm"
        ],
        "keywords": [
            "kubernetes",
            "helm",
            "chart",
            "迁移"
        ],
        "slug": "migrate-helm-to-v3",
        "gitcomment": true,
        "category": "kubernetes",
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1568549422238-cc366fee8a26.jpeg",
                "desc": "https://unsplash.com/photos/m70IFiW6e8g"
            }
        ]
    },
    {
        "title": "通过 GitHub OAuth 和 Dex 访问 Kubernetes 集群",
        "uri": "post/通过GitHub认证访问K8S",
        "content": "RBAC     kubectl                         kubernetes                                 kubectl              kubernetes                                                                                                                      kubernetes      Kubernetes             RBAC                   kubernetes           kubernetes                                kubernetes            User Account   Service Account  User Account                     namespace       Service Account                   kubernetes          API server               RBAC   User Account   Service Account                     Kubernetes RBAC                       User Account kubernetes                                                          User Account         Kubernetes       kubernetes                                                  Google Accounts                                          kubernetes                                                                                kubernetes                                                         kubernetes                               kubernetes        OIDC    kubernetes                         Bear Token                                                                                                 ID Token                                                           kubernetes            ID Token       ID Token                      OpenID Connect OIDC             ID Token                         dex k8s authenticator          kubectl         Dex      OIDC     GitHub      GitHub           Cert manager           HTTPS          kubernetes    OIDC                    dex k8s authenticator          login k8s qikqiak com  dex k8s authenticator         Dex dex k8s qikqiak com  Dex     GitHub      GitHub          Dex Dex         dex k8s authenticator      GitHub    ID Token dex k8s authenticator    ID Token   kubeconfig kubectl    ID Token   KubeAPIServer KubeAPIServer         kubectl     kubectl                              kubernetes              Helm                   Helm                      Helm                                GitHub                                            max k8s       team red                                           GitHub        https   github com organizations max k8s settings applications       OAuth App               URL https   dex k8s qikqiak com      URL  https   dex k8s qikqiak com callback       URL       callback     Client ID Client secret                      URL login k8s qikqiak com   dex k8s qikqiak com   DNS       Dex   dex k8s authenticator            kubernetes             Ingress Controller             Dex   dex k8s authenticator      Dex            kubernetes                kubeadm             master              cat  etc kubernetes pki ca crt      BEGIN CERTIFICATE            crt                END CERTIFICATE        cat  etc kubernetes pki ca key      BEGIN RSA PRIVATE KEY            key                END RSA PRIVATE KEY      Clone dex k8s authenticator         git clone git github com mintel dex k8s authenticator git cd dex k8s authenticator        dex   dex k8s authenticator   Helm Chart            values yaml              dex   values     values dex yaml  global  deployEnv  prod tls       kubernetes     certificate          BEGIN CERTIFICATE            crt                END CERTIFICATE           kubernetes     key          BEGIN RSA PRIVATE KEY            key                END RSA PRIVATE KEY      ingress  enabled  true annotations  kubernetes io ingress class  nginx   nginx ingress kubernetes io tls acme   true      cert manager     https path    hosts  dex k8s qikqiak com tls  secretName  cert auth dex hosts  dex k8s qikqiak com serviceAccount  create  true name  dex auth sa config    issuer  https   dex k8s qikqiak com  storage  type  sqlite3 config  file   var dex db web  http  0 0 0 0 5556 frontend  theme   coreos  issuer   Example Co  issuerUrl   https   example com  logoUrl  https   example com images logo 250x25 png expiry  signingKeys   6h  idTokens   24h  logger  level  debug format  json oauth2  responseTypes    code    token    id_token   skipApprovalScreen  true connectors  type  github id  github name  GitHub config  clientID   GITHUBCLIENTID        clientSecret   GITHUBCLIENTSECRET        redirectURI  https   dex k8s qikqiak com callback   github oauth callback url orgs  name  max k8s   github    teams  team red   github       team staticClients  id  dex k8s authenticator name  dex k8s authenticator secret  generatedLongRandomPhrase redirectURIs  https   login k8s qikqiak com callback  envSecrets  GITHUBCLIENTID        github client id  GITHUBCLIENTSECRET        github client secret       dex k8s authenticator   values     values auth yaml  global  deployEnv  prod dexK8sAuthenticator  clusters  name  k8s example com short_description   k8s cluster  description   Kubernetes cluster  issuer  https   dex k8s qikqiak com  k8smasteruri  https          kubernetes  apiserver   client_id  dex k8s authenticator client_secret  generatedLongRandomPhrase redirect_uri  https   login k8s qikqiak com callback  k8scapem         BEGIN CERTIFICATE            crt ",
        "objectID": "post/通过GitHub认证访问K8S",
        "date": "2019-06-28T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "github",
            "dex",
            "kubectl",
            "rbac"
        ],
        "keywords": [
            "kubernetes",
            "github",
            "oauth",
            "dex",
            "kubectl",
            "rbac",
            "cert manager"
        ],
        "slug": "k8s-auth-via-oidc",
        "gitcomment": true,
        "category": "kubernetes",
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1561553543-e4c7b608b98d.jpeg",
                "desc": "https://unsplash.com/photos/ieWHXjjAEwY"
            }
        ]
    },
    {
        "title": "在 Kubernetes 集群上部署 VSCode",
        "uri": "post/部署code-server在k8s上",
        "content": "IDE                                   Figma                   Sketch                IDE                        Cloud IDE                                              web                                           PC                IDE                code server                           VSCode VSCode                 Git                                         Kubernetes         VSCode                    Kubernetes                   Cloud IDE                Ingress Controller                 Traefik2 1                     code server         code server             Deployment     code server               codercom code server            PASSWORD        IDE                    code server yaml  apiVersion  v1 kind  Namespace metadata  name  code server apiVersion  v1 kind  Service metadata  name  code server namespace  code server spec  ports  port  80 targetPort  8080 selector  app  code server apiVersion  apps v1 kind  Deployment metadata  labels  app  code server name  code server namespace  code server spec  selector  matchLabels  app  code server template  metadata  labels  app  code server spec  containers  image  codercom code server imagePullPolicy  IfNotPresent name  code server ports  containerPort  8080 env  name  PASSWORD value   code321                   kubectl apply  f code server yaml               Pod                 kubectl pods  n code server NAME READY STATUS RESTARTS AGE code server 99dc7566 txk5b 1 1 Running 0 5d   Pod   Running                                           Ingress                  Traefik2 1           IngressRoute                                 Traefik2 1                           ingress route yaml  apiVersion  traefik containo us v1alpha1 kind  Middleware metadata  name  redirect https namespace  code server spec  redirectScheme  scheme  https apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  code server namespace  code server spec  entryPoints  web routes  kind  Rule match  Host code qikqiak com  middlewares  name  redirect https services  kind  Service name  code server port  80 apiVersion  traefik containo us v1alpha1 kind  IngressRoute metadata  name  code server https namespace  code server spec  entryPoints  websecure routes  kind  Rule match  Host code qikqiak com  services  kind  Service name  code server port  80 tls  certResolver  ali domains  main     qikqiak com            IngressRoute          80          443            https               redirect https             https           https              Secret        tls               Traefik2 1     ACME                                 kubectl apply  f ingress route yaml   kubectl ingressroute  n code server NAME AGE code server 5d code server https 5d              code qikqiak com           hosts      Traefik2 1                     code qikqiak com                              PASSWORD                               VSCode                                    VSCode",
        "objectID": "post/部署code-server在k8s上",
        "date": "2020-02-04T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "vscode"
        ],
        "keywords": [
            "kubernetes",
            "vscode",
            "ide",
            "code-server"
        ],
        "slug": "deploy-vscode-on-k8s",
        "gitcomment": true,
        "category": "kubernetes",
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200204183433.png",
                "desc": "awesome vscode"
            }
        ]
    },
    {
        "title": "重新理解 kubernetes 亲和性调度",
        "uri": "post/重新理解亲和性调度",
        "content": "Kubernetes                                                                      Pod                                                                    Pod                 gitlab        Kubernetes                                                                                    Pod                   Kubernetes                               nodeAffinity   Pod     podAffinity   nodeSelector                            nodeSelector     label kubernetes                       label                      service      label     Pod      Pod             label                         node   label    kubectl nodes   show labels NAME STATUS ROLES AGE VERSION LABELS master Ready master 147d v1 10 0 beta kubernetes io arch amd64 beta kubernetes io os linux kubernetes io hostname master node role kubernetes io master  node02 Ready 67d v1 10 0 beta kubernetes io arch amd64 beta kubernetes io os linux course k8s kubernetes io hostname node02 node03 Ready 127d v1 10 0 beta kubernetes io arch amd64 beta kubernetes io os linux jnlp haimaxy kubernetes io hostname node03         node02    com youdianzhishi            kubectl label nodes node02 com youdianzhishi node  node02  labeled            show labels                 node                                 Pod  spec     nodeSelector                  label           Pod          node02                nodeSelector       node selector demo yaml  apiVersion  v1 kind  Pod metadata  labels  app  busybox pod name  test busybox spec  containers  command  sleep  3600  image  busybox imagePullPolicy  Always name  test busybox nodeSelector  com  youdianzhishi          describe             kubectl create  f node selector demo yaml pod  test busybox  created   kubectl describe pod test busybox Name  test busybox Namespace  default Node  node02 10 151 30 63        QoS Class  BestEffort Node Selectors  com youdianzhishi Tolerations  node kubernetes io not ready NoExecute 300s node kubernetes io unreachable NoExecute 300s Events  Type Reason Age Message                               Normal SuccessfulMountVolume 55s kubelet  node02 MountVolume SetUp succeeded volume  default token n9w2d  Normal Scheduled 54s default scheduler Successfully assigned test busybox node02 Normal Pulling 54s kubelet  node02 pulling image  busybox  Normal Pulled 40s kubelet  node02 Successfully pulled image  busybox  Normal Created 40s kubelet  node02 Created container Normal Started 40s kubelet  node02 Started container        Events           Pod       default scheduler         node02           nodeSelector                            Pod        Pending       nodeSelector                   nodeSelector                                                nodeAffinity                       kubernetes                                 predicates   priorities                                       pod            nodeAffinity        podAffinity pod         podAntiAffinity pod                                                    pod                                                                                                                                    preferredDuringSchedulingIgnoredDuringExecution requiredDuringSchedulingIgnoredDuringExecution                                              nodeAffinity              pod                                                               Deployment    3  pod               pod           node affinity demo yaml  apiVersion  apps v1beta1 kind  Deployment metadata  name  affinity labels  app  affinity spec  replicas  3 revisionHistoryLimit  15 template  metadata  labels  app  affinity role  test spec  containers  name  nginx image  nginx 1 7 9 ports  containerPort  80 name  nginxweb affinity  nodeAffinity  requiredDuringSchedulingIgnoredDuringExecution        nodeSelectorTerms  matchExpressions  key  kubernetes io hostname operator  NotIn values  node03 preferredDuringSchedulingIgnoredDuringExecution        weight  1 preference  matchExpressions  key  com operator  values  youdianzhishi      pod            node03               com youdianzhishi                                 kubectl nodes   show labels NAME STATUS ROLES AGE VERSION LABELS master Ready master 154d v1 10 0 beta kubernetes io arch amd64 beta kubernetes io os linux kubernetes io hostname master node role kubernetes io master  node02 Ready 74d v1 10 0 beta kubernetes io arch amd64 beta kubernetes io os linux com youdianzhishi course k8s kubernetes io hostname node02 node03 Ready 134d v1 10 0 beta kubernetes io arch amd64 beta kubernetes io os linux jnlp haimaxy kubernetes io hostname node03      node02    com youdianzhishi    label                           pod     descirbe                        kubectl create  f node affinity demo yaml deployment apps  affinity  created   kubectl pods  l app affinity  o wide NAME READY STATUS RESTARTS AGE IP NODE affinity 7b4c946854 5gfln 1 1 Running 0 47s 10 244 4 214 node02 affinity 7b4c946854 l8b47 1 1 Running 0 47s 10 244 4 215 node02 affinity 7b4c946854 r86p5 1 1 Running 0 47s 10 244 4 213 node02         pod        node02           pod          label            Kubernetes              In label        ",
        "objectID": "post/重新理解亲和性调度",
        "date": "2018-10-18T00:00:00.000Z",
        "keywords": [
            "kubernetes",
            "affinity",
            "调度"
        ],
        "tags": [
            "kubernetes",
            "亲和性",
            "调度",
            "affinity",
            "nodeSelector",
            "污点",
            "容忍"
        ],
        "slug": "kubernetes-affinity-scheduler",
        "gitcomment": true,
        "notoc": true,
        "category": "kubernetes"
    },
    {
        "title": "减小 Docker 镜像大小",
        "uri": "post/降低Docker镜像大小",
        "content": "https   www ardanlabs com blog 2020 02 docker images part1 reducing image size html https   kinbiko com go testing beginners",
        "objectID": "post/降低Docker镜像大小",
        "date": "2020-03-03T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "docker"
        ],
        "keywords": [
            "kubernetes",
            "docker",
            "镜像"
        ],
        "slug": "reduce-image-size",
        "gitcomment": true,
        "category": "kubernetes",
        "draft": true,
        "bigimg": [
            {
                "src": "https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/photo-1581375279144-bb3b381c7046.png",
                "desc": "Painted, sliced avocado"
            }
        ]
    },
    {
        "title": "集群内部服务发现之 DNS",
        "uri": "post/集群内部服务发现之DNS",
        "content": "Service           Service    ClusterIP VIP     Pod                                  VIP                 api        db            Deployment            Service            api       db            db        db     Service              VIP          Service              ClusterIP         Pod           VIP            apiserver         apiserver            service     Endpoints              apiserver                       apiserver    Service    Endpoints                                                             Kubernetes                                        Kubernetes               Pod                      IP   port       Pod                                                              Pod                                    Nginx     test nginx yaml  apiVersion  apps v1beta1 kind  Deployment metadata  name  nginx deploy labels  k8s app  nginx demo spec  replicas  2 template  metadata  labels  app  nginx spec  containers  name  nginx image  nginx 1 7 9 ports  containerPort  80 apiVersion  v1 kind  Service metadata  name  nginx service labels  name  nginx service spec  ports  port  5000 targetPort  80 selector  app  nginx            kubectl create  f test nginx yaml deployment apps  nginx deploy  created service  nginx service  created   kubectl pods NAME READY STATUS RESTARTS AGE     nginx deploy 75675f5897 47h4t 1 1 Running 0 53s nginx deploy 75675f5897 mmm8w 1 1 Running 0 53s       kubectl svc NAME TYPE CLUSTER IP EXTERNAL IP PORT S  AGE     nginx service ClusterIP 10 107 225 42 5000 TCP 1m              Pod       nginx service            Service        5000                  Pod          app  nginx       Pod                 Pod      Pod               nginx service        test pod yaml  apiVersion  v1 kind  Pod metadata  name  test pod spec  containers  name  test service pod image  busybox command     bin sh     c    env            Pod    kubectl create  f test pod yaml pod  test pod  created   Pod                   kubectl logs test pod     KUBERNETES_PORT tcp   10 96 0 1 443 KUBERNETESSERVICEPORT 443 HOSTNAME test pod HOME  root NGINXSERVICEPORT5000TCP_ADDR 10 107 225 42 NGINXSERVICEPORT5000TCP_PORT 5000 NGINXSERVICEPORT5000TCP_PROTO tcp KUBERNETESPORT443TCPADDR 10 96 0 1 PATH  usr local sbin  usr local bin  usr sbin  usr bin  sbin  bin NGINXSERVICESERVICE_HOST 10 107 225 42 NGINXSERVICEPORT5000TCP tcp   10 107 225 42 5000 KUBERNETESPORT443TCPPORT 443 KUBERNETESPORT443TCPPROTO tcp NGINXSERVICESERVICE_PORT 5000 NGINXSERVICEPORT tcp   10 107 225 42 5000 KUBERNETESSERVICEPORT_HTTPS 443 KUBERNETESPORT443_TCP tcp   10 96 0 1 443 KUBERNETESSERVICEHOST 10 96 0 1 PWD                                      nginx service        HOST PORT PROTO ADDR              Service                   Pod      nginx service                 NGINXSERVICESERVICEHOST   NGINXSERVICESERVICEPORT                  Pod           nginx service                                       initContainer         nginx service        Pod             Pod                    KubeDNS                                                              Service        Service                    ClusterIP                              Service          ClusterIP                        IP                                    DNS           Kubernetes    DNS                  kubedns    DNS                      addon              Kubernetes                                    Kubernetes                           kube dns   CoreDNS        kubeadm             kube dns                            CoreDNS                        kubeadm init   feature gates CoreDNS true Kubernetes DNS pod     3          kubectl         kubectl pods  n kube system NAME READY STATUS RESTARTS AGE     kube dns 5868f69869 zp5kz 3 3 Running 0 19d     READY         3 3               kube dns    3       kubectl describe pod kube dns 5868f69869 zp5kz  n kube system kube dns dnsmasq nanny sidecar  3              kubedns  kubedns    SkyDNS      apiserver    Service   Endpoints               Cache          Kubernetes     Service   Pod   DNS     dnsmasq  dsnmasq        DNS                     1G              DNS                        kubedns                    ConfigMap         sider  sidecar           DNS                    prometheus      Pod     DNS Pod      IP     Kubernetes            IP      kubelet        cluster dns         DNS         DNS                    cluster domain    kubelet        dnsmasq      ConfigMap                                 ConfigMap      DNS                           apiVersion  v1 kind  ConfigMap metadata  name  kube dns namespace  kube system data  stubDomains      acme local     1 2 3 4    upstreamNameservers      8 8 8 8    8 8 4 4            acme local    DNS        DNS 1 2 3 4 Google    DNS                                        DNS                                                                                                           kubernetes default svc cluster local   kube dns     foo acme local       DNS  1 2 3 4      widget com      DNS  8 8 8 8  8 8 4 4                    Pod    DNS        Kubernetes      Pod     DNS     Default     ClusterFirst       dnsPolicy                Default ",
        "objectID": "post/集群内部服务发现之DNS",
        "date": "2018-08-08T00:00:00.000Z",
        "tags": [
            "kubernetes",
            "kubends",
            "coredns",
            "service"
        ],
        "keywords": [
            "kubernetes",
            "kubends",
            "coredns",
            "service",
            "服务发现"
        ],
        "slug": "service-found-dns",
        "gitcomment": true,
        "bigimg": [
            {
                "src": "/img/posts/photo-1533630018502-93824e440009.jpeg",
                "desc": "lighthouse"
            }
        ],
        "category": "kubernetes"
    }
]