<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>service on 阳明的博客</title>
    <link>https://www.qikqiak.com/tags/service/</link>
    <description>Recent content in service on 阳明的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.qikqiak.com/tags/service/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>图解 Kubernetes Service</title>
      <link>https://www.qikqiak.com/post/visually-explained-k8s-service/</link>
      <pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/visually-explained-k8s-service/</guid>
      <description>&lt;p&gt;在 Kubernetes 中 Service 主要有4种不同的类型，其中的 ClusterIP 是最基础的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20201105105016.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;上图解释了 Kubernetes 的 Service 的基本关系，当我们创建一个 NodePort 的 Service 时，它也会创建一个 ClusterIP，而如果你创建一个 LoadBalancer，它就会创建一个 NodePort，然后创建一个 ClusterIP&lt;/p&gt;

&lt;p&gt;此外我们还需要明白 Service 是指向 pods 的，Service 不是直接指向 Deployments 或 ReplicaSets，而是直接使用 labels 标签指向 Pod，这种方式就提供了极大的灵活性，因为通过什么方式创建的 Pod 其实并不重要。接下来我们通过一个简单的例子开始，我们用不同的 Service 类型来逐步扩展，看看这些 Service 是如何建立的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>集群内部服务发现之 DNS</title>
      <link>https://www.qikqiak.com/post/service-found-dns/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/service-found-dns/</guid>
      <description>&lt;p&gt;前面我们给大家讲解了&lt;code&gt;Service&lt;/code&gt;的用法，我们可以通过 Service 生成的&lt;code&gt;ClusterIP(VIP)&lt;/code&gt;来访问 Pod 提供的服务，但是在使用的时候还有一个问题：我们怎么知道某个应用的 VIP 呢？比如我们有两个应用，一个是 api 应用，一个是 db 应用，两个应用都是通过&lt;code&gt;Deployment&lt;/code&gt;进行管理的，并且都通过 Service 暴露出了端口提供服务。api 需要连接到 db 这个应用，我们只知道 db 应用的名称和 db 对应的 Service 的名称，但是并不知道它的 VIP 地址，我们前面的 Service 课程中是不是学习到我们通过&lt;code&gt;ClusterIP&lt;/code&gt;就可以访问到后面的&lt;code&gt;Pod&lt;/code&gt;服务，如果我们知道了 VIP 的地址是不是就行了？&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>