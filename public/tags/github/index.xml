<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on 阳明的博客</title>
    <link>https://www.qikqiak.com/tags/github/</link>
    <description>Recent content in github on 阳明的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.qikqiak.com/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GitHub CLI 命令行工具使用</title>
      <link>https://www.qikqiak.com/post/github-cli-tool-usage/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/github-cli-tool-usage/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.qikqiak.com/post/github-cli-tool-usage/&#34;&gt;&lt;img src=&#34;https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200214152110.png&#34; alt=&#34;github cli&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub 被巨软收购以后推出了一系列非常好用的开发者工具，比如前面我们使用过的 CI/CD 工具 &lt;a href=&#34;https://www.qikqiak.com/post/use-github-actions-build-go-app/&#34;&gt;GitHub Actions&lt;/a&gt;、&lt;a href=&#34;https://github.com/features/packages&#34;&gt;包管理工具 packages&lt;/a&gt;，今天我们要为大家介绍的是近来 GitHub 发布的又一个非常有用的工具: &lt;a href=&#34;https://cli.github.com/&#34;&gt;GitHub CLI&lt;/a&gt;，可以让开发者通过命令行于 GitHub 进行无缝的协同工作，也就是我们直接在命令行终端上就可以进行 pull requests、issues 等其他功能，现在已经发布 Beta 版本，我们可以在 &lt;a href=&#34;https://github.com/cli/cli#installation-and-upgrading&#34;&gt;macOS、Windows 或者 Linux 平台&lt;/a&gt;上安装 GitHub CLI。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 GitHub Actions 自动化构建 Golang 应用</title>
      <link>https://www.qikqiak.com/post/use-github-actions-build-go-app/</link>
      <pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/use-github-actions-build-go-app/</guid>
      <description>&lt;p&gt;GitHub 前一段时间推出了自家的自动化构建工具：&lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;，不过目前还没有开放注册，只能通过申请等待官方审核。我第一时间就提交了申请，现在已经审核通过了，所以第一时间体验了&lt;code&gt;GitHub Actions&lt;/code&gt;的功能，总体感受是 Travis CI 之类的工具应该现在在墙角&lt;code&gt;瑟瑟发抖&lt;/code&gt;吧😄？&lt;/p&gt;

&lt;p&gt;&lt;code&gt;GitHub Actions&lt;/code&gt;允许构建一个完整的 CI/CD Pipeline，与 GitHub 生态系统深度集成，而无需使用 Travis CI 或者 Circle CI 等第三方服务，对于开源项目都是可以免费使用的。如果你也想尽快使用的话，可以通过链接 &lt;a href=&#34;https://github.com/features/actions/signup&#34;&gt;https://github.com/features/actions/signup&lt;/a&gt; 去申请权限。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/github-actions.jpg&#34; alt=&#34;github actions&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Drone 结合 Helm 部署 Kubernetes 应用</title>
      <link>https://www.qikqiak.com/post/drone-with-k8s-3/</link>
      <pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/drone-with-k8s-3/</guid>
      <description>&lt;p&gt;本文是 &lt;a href=&#34;https://www.qikqiak.com/tags/drone/&#34;&gt;Drone 系列文章&lt;/a&gt;的第三篇，在&lt;a href=&#34;https://www.qikqiak.com/post/drone-with-k8s-1/&#34;&gt;第一篇文章中我们介绍了如何在 Kubernetes 集群中使用 Helm 来快速安装 Drone&lt;/a&gt;，并且用 &lt;a href=&#34;https://www.qikqiak.com/post/automatic-kubernetes-ingress-https-with-lets-encrypt/&#34;&gt;cert-manager&lt;/a&gt; 给 Drone 应用做了自动化 HTTPS，在&lt;a href=&#34;https://www.qikqiak.com/post/drone-with-k8s-2/&#34;&gt;第二篇文章中我们介绍了如何在 Drone 中使用 Pipeline 来自动化构建 Docker 镜像&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本文我们将创建一个 Helm Chart 包，然后使用 Drone Pipeline 来进行自动部署或更新应用到 Kubernetes 集群中。&lt;/p&gt;

&lt;p&gt;如果对 Helm 如何部署应用还不熟悉的，同样的，可以查看我们前面的 &lt;a href=&#34;https://www.qikqiak.com/tags/helm/&#34;&gt;Helm 系列文章&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Drone Pipeline 构建 Docker 镜像</title>
      <link>https://www.qikqiak.com/post/drone-with-k8s-2/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/drone-with-k8s-2/</guid>
      <description>&lt;p&gt;本文是 &lt;a href=&#34;https://www.qikqiak.com/tags/drone/&#34;&gt;Drone 系列文章&lt;/a&gt;的第二篇，在&lt;a href=&#34;https://www.qikqiak.com/post/drone-with-k8s-1/&#34;&gt;第一篇文章中我们介绍了如何在 Kubernetes 集群中使用 Helm 来快速安装 Drone&lt;/a&gt;，并且用 &lt;a href=&#34;https://www.qikqiak.com/post/automatic-kubernetes-ingress-https-with-lets-encrypt/&#34;&gt;cert-manager&lt;/a&gt; 给 Drone 应用做了自动化 HTTPS。&lt;/p&gt;

&lt;p&gt;本文我们将创建一个简单的 Golang 应用，通过 Drone 的 Pipeline 来自动化构建 Docker 镜像。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Kubernetes Helm 安装 Drone</title>
      <link>https://www.qikqiak.com/post/drone-with-k8s-1/</link>
      <pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/drone-with-k8s-1/</guid>
      <description>&lt;p&gt;我们知道 CI/CD 是 devops 中最重要的环节，特别是对于现在的云原生应用，CI/CD 更是不可或缺的部分，对于 CI/CD 工具有很多优秀的开源工具，比如前面我们介绍的&lt;a href=&#34;https://www.qikqiak.com/tags/jenkins/&#34;&gt;Jenkins&lt;/a&gt;以及&lt;a href=&#34;https://www.qikqiak.com/post/gitlab-runner-install-on-k8s/&#34;&gt;gitlab ci&lt;/a&gt;都是非常流行常用的 CI/CD 工具，但是这两个工具整体使用来说有点陈旧和笨重，本文将为大家介绍一个比较热门的轻量级 CI/CD 开源工具：&lt;a href=&#34;https://drone.io/&#34;&gt;Drone&lt;/a&gt;，介绍如何将 Drone 和 Kubernetes 进行结合使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>通过 GitHub OAuth 和 Dex 访问 Kubernetes 集群</title>
      <link>https://www.qikqiak.com/post/k8s-auth-via-oidc/</link>
      <pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/k8s-auth-via-oidc/</guid>
      <description>&lt;p&gt;我们知道可以&lt;a href=&#34;(/post/use-rbac-in-k8s/)&#34;&gt;通过 RBAC 为操作 kubectl 的用户或组来进行权限控制&lt;/a&gt;，但是我们往往是通过 &lt;a href=&#34;https://www.qikqiak.com/tags/kubernetes/&#34;&gt;kubernetes&lt;/a&gt; 集群的超级管理员手动为这些用户进行分配的，并没有一个开箱即用的 kubectl 身份验证工具。&lt;/p&gt;

&lt;p&gt;现在参加 &lt;a href=&#34;https://youdianzhishi.com/course/6n8xd6/&#34;&gt;kubernetes 进阶课程&lt;/a&gt;的学生比较多，其中可能有一部分学生暂时还没有一套可用的集群环境，那么我们就可以为这部分学生授权访问我们的集群，但是如果这么多学生都手动去给他们创建身份认证必然非常麻烦。&lt;/p&gt;

&lt;p&gt;那么我们可以用什么办法来可以很方便的为用户进行授权访问 &lt;a href=&#34;https://www.qikqiak.com/tags/kubernetes/&#34;&gt;kubernetes&lt;/a&gt; 集群呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jenkins Blue Ocean 的使用</title>
      <link>https://www.qikqiak.com/post/kubernetes-jenkins3/</link>
      <pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/kubernetes-jenkins3/</guid>
      <description>&lt;p&gt;上节课我们讲解了使用&lt;code&gt;Jenkins Pipeline&lt;/code&gt;来自动化部署一个&lt;code&gt;Kubernetes&lt;/code&gt;应用的方法，在实际的项目中，往往一个代码仓库都会有很多分支的，比如开发、测试、线上这些分支都是分开的，一般情况下开发或者测试的分支我们希望提交代码后就直接进行&lt;code&gt;CI/CD&lt;/code&gt; 操作，而线上的话最好增加一个人工干预的步骤，这就需要&lt;code&gt;Jenkins&lt;/code&gt;对代码仓库有多分支的支持，当然这个特性是被&lt;code&gt;Jenkins&lt;/code&gt;支持的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jenkins Pipeline 部署 Kubernetes 应用(二)</title>
      <link>https://www.qikqiak.com/post/kubernetes-jenkins2/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/kubernetes-jenkins2/</guid>
      <description>&lt;p&gt;上节课我们实现了在&lt;code&gt;Kubernetes&lt;/code&gt;环境中动态生成&lt;code&gt;Jenkins Slave&lt;/code&gt; 的方法，这节课我们来给大家讲解下如何在 Jenkins 中来部署一个 Kubernetes 应用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo 集成 Gitment 评论插件</title>
      <link>https://www.qikqiak.com/post/hugo-integrated-gitment-plugin/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/hugo-integrated-gitment-plugin/</guid>
      <description>&lt;p&gt;前面我们为&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;集成了&lt;code&gt;Algolia&lt;/code&gt;搜索插件，要让我们的网站具备博客的基本功能的话，一般情况下评论也是非常需要的，评论承载着作者与读者之间交流的桥梁，所以我们可以看到市面上有很多单独的评论服务，比如最出名的&lt;a href=&#34;https://disqus.com/&#34;&gt;disqus&lt;/a&gt;，国内也有之前比较出名的&lt;code&gt;多说&lt;/code&gt;(现在已经关闭)、&lt;a href=&#34;http://www.uyan.cc/&#34;&gt;有言&lt;/a&gt;等等，要使用他们非常简单，只需要嵌入一些简单的代码即刻开启移动社交评论
服务。不是这些服务不好，只是觉得稍微有点笨重，这里我们使用一个基于&lt;code&gt;GitHub Issues&lt;/code&gt;的轻量级评论系统：&lt;a href=&#34;https://github.com/imsun/gitment&#34;&gt;Gitment&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>