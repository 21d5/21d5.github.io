<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ops on 阳明的博客</title>
    <link>https://www.qikqiak.com/tags/ops/</link>
    <description>Recent content in ops on 阳明的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.qikqiak.com/tags/ops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 Sealed Secrets 加密 Kubernetes Secrets</title>
      <link>https://www.qikqiak.com/post/encrypt-k8s-secrets-with-sealed-secrets/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/encrypt-k8s-secrets-with-sealed-secrets/</guid>
      <description>&lt;p&gt;前面我们和大家提到过 GitOps 的实践，我们知道 GitOps 是提倡通过 Git 来管理所有的配置，通过声明式代码来对环境配置和基础设施进行版本管理。&lt;/p&gt;

&lt;p&gt;在 Kubernetes 中我们知道可以使用资源清单文件来管理集群中的一资源对象，但是讲 Kubernetes 的 Secrets 数据存储在 Git 仓库中还是非常不妥的，毕竟也是非常不安全的。&lt;/p&gt;

&lt;p&gt;Kubernetes Secrets 是用来帮助我们存储敏感信息的资源对象，比如密码、密钥、证书、OAuth Token、SSH KEY 等等。管理员可以通过创建 Secrets 对象，然后开发人员就可以在资源清单文件中非常方便的引用 Secrets 对象，而不用直接将这些敏感信息硬编码。&lt;/p&gt;

&lt;p&gt;虽然这看上去非常方便，但是有 Secrets 的问题是它们只是简单的将这些敏感信息做了一次 base64 编码而已，任何人都可以非常容易对其进行解密获得原始的数据。所以我们说 Secrets 清单文件不能直接存储在 Git 源码仓库中，但是如果每次都去手工创建的话，这又使得我们的 GitOps 不是很流畅了。&lt;/p&gt;

&lt;p&gt;为此 Bitnami Labs 创建了一个名为 &lt;a href=&#34;https://github.com/bitnami-labs/sealed-secrets&#34;&gt;Sealed Secrets&lt;/a&gt; 的开源工具来解决这个问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>免费获取 JetBrains 全系产品正版 License</title>
      <link>https://www.qikqiak.com/post/free-use-jetbrains-ide/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/free-use-jetbrains-ide/</guid>
      <description>&lt;p&gt;要说现在最好用的 IDE 工具，可能除了微软系列的就得算 jetbrains 系列了，几乎支持所有主流的编程语言，可以说是目前最好用的 IDE 工具，比如 IntelliJ IDEA、PyCharm、GoLand、WebStorm，这些 IDE 工具其实平时我都有使用，但是我们也知道这些工具都属于商业产品，价格是非常昂贵的，虽然说这些工具给我们带来的便利远远不是金钱能来衡量的，但是毕竟对于我们大部分个人用户来说还是一笔不小的开支。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>更优雅的git log</title>
      <link>https://www.qikqiak.com/post/a-better-git-log/</link>
      <pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/a-better-git-log/</guid>
      <description>&lt;p&gt;对于码农来说&lt;code&gt;git log&lt;/code&gt;是自然熟悉不过的了，但是每天面对&lt;code&gt;git log&lt;/code&gt;原始的日志格式，你是不是觉得很烦人啊，因为上面的给的信息太不人性化了，而且我相信大部分的码农的提交日志都是随心所欲的&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>给博客加上HTTPS</title>
      <link>https://www.qikqiak.com/post/make-https-blog/</link>
      <pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/make-https-blog/</guid>
      <description>&lt;p&gt;谁都不愿意在使用网站服务的时候，被恶心的运营商劫持加上一些他们的服务(真的很贱，不是吗？)，不过这能难道我们程序员吗？当然不能，上&lt;code&gt;https&lt;/code&gt;，老子全站&lt;code&gt;https&lt;/code&gt;，你再劫持给我看看。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https&lt;/code&gt;证书服务大部分都是收费的，而且很贵，阿里云可以申请一个免费的证书，只能绑定一个域名，这里我们使用更加友好的免费&lt;code&gt;https&lt;/code&gt;服务：&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let’s Encrypt&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用awk做基本运算</title>
      <link>https://www.qikqiak.com/post/awk-base-compute/</link>
      <pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/awk-base-compute/</guid>
      <description>&lt;p&gt;&lt;code&gt;awk&lt;/code&gt;是非常强大的文本处理工具，之前经常见到脚本里面有使用，但是没有自己完完整整来写过awk命令。正好今天公司里有一个非常的大的日志文件需要分析。需求是将日志文件中记录的耗时时间评价值、最大值、最小值计算出来。日志的格式如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;2016&lt;/span&gt;-03-30 &lt;span style=&#34;color:#bd93f9&#34;&gt;00&lt;/span&gt;:02:02,475&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;17243&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;140344433927936&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;MainThread&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;tasks.py:733&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; DEBUG &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;upload to oss&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; upload file /data/image5/user_upload_image/20160330/00/1458483897397580_101183475_1459267295740.jpg to oss cost &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;28&lt;/span&gt; ms&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Nginx中如何设置301跳转</title>
      <link>https://www.qikqiak.com/post/nginx-301-redirect/</link>
      <pubDate>Sat, 27 Feb 2016 21:21:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/nginx-301-redirect/</guid>
      <description>&lt;p&gt;网站中带&lt;code&gt;www&lt;/code&gt;和不带都可以访问，但是这样却会不利于网站&lt;code&gt;SEO&lt;/code&gt;的，会分权，所以需要将二者的访问合并到一起，这特别在网站架设之初就应该好好规划。&lt;/p&gt;

&lt;p&gt;有很多的第三方DNS解析服务，提供了直接的显示跳转的服务，比如&lt;code&gt;dnspod&lt;/code&gt;，但是最近我在使用的过程中发现该服务非常的不稳定，导致网站经常性的访问不了。所以就打算自己来做，方法很简单，就是&lt;code&gt;301跳转&lt;/code&gt;，&lt;strong&gt;301是永久跳转&lt;/strong&gt;，&lt;strong&gt;302是临时性跳转&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>