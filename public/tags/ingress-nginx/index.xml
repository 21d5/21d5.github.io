<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ingress-nginx on 阳明的博客</title>
    <link>https://www.qikqiak.com/tags/ingress-nginx/</link>
    <description>Recent content in ingress-nginx on 阳明的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.qikqiak.com/tags/ingress-nginx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ingress-nginx 控制器工作原理[译]</title>
      <link>https://www.qikqiak.com/post/ingress-nginx-how-to-work/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/ingress-nginx-how-to-work/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.qikqiak.com/post/ingress-nginx-how-to-work/&#34;&gt;&lt;img src=&#34;https://bxdc-static.oss-cn-beijing.aliyuncs.com/images/20200331110423.png&#34; alt=&#34;ingress-nginx 控制器工作原理&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本文的目的是解释 Nginx Ingress 控制器的工作原理，特别是 Nginx 模型的构建方式以及我们为何需要这个模型。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ingress-nginx 中 Rewrite 的使用</title>
      <link>https://www.qikqiak.com/post/url-rewrite-on-ingress-nginx/</link>
      <pubDate>Thu, 28 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/url-rewrite-on-ingress-nginx/</guid>
      <description>&lt;p&gt;由于 nginx 的优秀性能表现，所以很多企业在 &lt;a href=&#34;https://www.qikqiak.com/tags/kubernetes/&#34;&gt;Kubernetes&lt;/a&gt; 中选择 Ingress Controller 的时候依然会选择基于 nginx 的 &lt;a href=&#34;https://kubernetes.github.io/ingress-nginx&#34;&gt;ingress-nginx&lt;/a&gt;，前面文章中我们更多的是介绍更加云原生配置更加灵活的 &lt;a href=&#34;https://www.qikqiak.com/tags/traefik/&#34;&gt;Traefik&lt;/a&gt;，特别是 Traefik 2.0 版本新增中间件概念以后，在配置上就更加方便了，各种需求都可以通过中间件来实现，对于 &lt;code&gt;ingress-nginx&lt;/code&gt; 来说配置就稍微麻烦一点，一些复杂的需求需要通过 &lt;code&gt;Ingress&lt;/code&gt; 的 &lt;code&gt;annotation&lt;/code&gt; 来实现，比如我们现在需要实现一个 url rewrite 的功能，简单来说就是我们之前的应用在 &lt;code&gt;todo.qikqiak.com&lt;/code&gt; 下面，现在我们需要通过 &lt;code&gt;todo.qikqiak.com/app/&lt;/code&gt; 来进行访问。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>