<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>metaclass on 阳明的博客</title>
    <link>https://www.qikqiak.com/tags/metaclass/</link>
    <description>Recent content in metaclass on 阳明的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.qikqiak.com/tags/metaclass/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>深入理解 Python 元类</title>
      <link>https://www.qikqiak.com/post/what-is-metaclass-in-python/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/what-is-metaclass-in-python/</guid>
      <description>&lt;p&gt;这是一篇在&lt;a href=&#34;http://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python&#34;&gt;Stack overflow&lt;/a&gt;上很热的帖子。提问者自称已经掌握了有关 Python OOP 编程中的各种概念，但始终觉得元类(metaclass)难以理解。他知道这肯定和自省有关，但仍然觉得不太明白，希望大家可以给出一些实际的例子和代码片段以帮助理解，以及在什么情况下需要进行元编程。于是 e-satis 同学给出了神一般的回复，该回复获得了985点的赞同点数，更有人评论说这段回复应该加入到 Python 的官方文档中去。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>