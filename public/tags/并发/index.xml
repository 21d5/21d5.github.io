<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>并发 on 阳明的博客</title>
    <link>https://www.qikqiak.com/tags/%E5%B9%B6%E5%8F%91/</link>
    <description>Recent content in 并发 on 阳明的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.qikqiak.com/tags/%E5%B9%B6%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>并发模型</title>
      <link>https://www.qikqiak.com/post/concurrency-model-compare/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.qikqiak.com/post/concurrency-model-compare/</guid>
      <description>&lt;p&gt;&lt;code&gt;Golang&lt;/code&gt;的特色之一就是&lt;code&gt;goroutine&lt;/code&gt;，使得程序员进行并发编程更加方便，适合用来进行服务器编程。作为后端开发工程师，有必要了解并发编程面临的场景和常见的解决方案。一般情况下，是怎样做高并发的编程呢？有那些经典的模型呢？&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>